<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Altseed</name>
    </assembly>
    <members>
        <member name="T:asd.CircleCollider">
            <summary>
            図形としての円を扱うクラス。
            </summary>
        </member>
        <member name="P:asd.CircleCollider.Center">
            <summary>
            円の中心座標を取得または設定する
            </summary>
        </member>
        <member name="P:asd.CircleCollider.Radius">
            <summary>
            円の半径を取得または設定する
            </summary>
        </member>
        <member name="T:asd.Collider2D">
            <summary>
            円形のコライダクラス
            </summary>
        </member>
        <member name="P:asd.Collider2D.CoreCollider2DShapeType">
            <summary>
            コライダの形状を取得
            </summary>
        </member>
        <member name="P:asd.Collider2D.OwnerObject">
            <summary>
            このコライダを保持しているObject2Dを取得する
            </summary>
        </member>
        <member name="P:asd.Collider2D.Tag">
            <summary>
            このコライダのタグを取得、または設定する
            </summary>
        </member>
        <member name="P:asd.Collider2D.IsVisible">
            <summary>
            このコライダを可視化する成否を取得、または設定する
            </summary>
        </member>
        <member name="T:asd.CoreCollider2DShapeType">
            <summary>
            2Dコライダの形状タイプ
            </summary>
        </member>
        <member name="F:asd.CoreCollider2DShapeType.Circle">
            <summary>
            円形
            </summary>
        </member>
        <member name="F:asd.CoreCollider2DShapeType.Rectangle">
            <summary>
            矩形
            </summary>
        </member>
        <member name="F:asd.CoreCollider2DShapeType.Line">
            <summary>
            線形
            </summary>
        </member>
        <member name="F:asd.CoreCollider2DShapeType.Polygon">
            <summary>
            ポリゴン
            </summary>
        </member>
        <member name="T:asd.Collision2DInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:asd.Collision2DInfo.SelfCollider">
            <summary>
            衝突した自分自身のコライダを取得する
            </summary>
        </member>
        <member name="P:asd.Collision2DInfo.TheirsCollider">
            <summary>
            衝突した相手のコライダを取得する
            </summary>
        </member>
        <member name="P:asd.Collision2DInfo.CollisionType">
            <summary>
            衝突状態の種類を取得する
            </summary>
        </member>
        <member name="T:asd.LineCollider">
            <summary>
            線形のコライダクラス
            </summary>
        </member>
        <member name="P:asd.LineCollider.StartingPosition">
            <summary>
            線分の始点座標を取得または設定する
            </summary>
        </member>
        <member name="P:asd.LineCollider.EndingPosition">
            <summary>
            線分の終点座標を取得または設定する
            </summary>
        </member>
        <member name="P:asd.LineCollider.Thickness">
            <summary>
            線分の太さを取得または設定する
            </summary>
        </member>
        <member name="T:asd.PolygonCollider">
            <summary>
            ポリゴンのコライダクラス
            </summary>
        </member>
        <member name="P:asd.PolygonCollider.IsValid">
            <summary>
            このポリゴンが正当か否かを取得する
            </summary>
        </member>
        <member name="M:asd.PolygonCollider.AddVertex(asd.Vector2DF)">
            <summary>
            このポリゴンに新たな頂点を追加する
            </summary>
        </member>
        <member name="M:asd.PolygonCollider.ClearVertexes">
            <summary>
            このポリゴンの頂点全てをクリアする
            </summary>
        </member>
        <member name="P:asd.PolygonCollider.VertexesNum">
            <summary>
            このポリゴンの頂点数を取得する
            </summary>
        </member>
        <member name="M:asd.PolygonCollider.GetVertex(System.Int32)">
            <summary>
            このポリゴンのindex番目のポリゴンを取得する
            </summary>
            <param name="index">ポリゴンの頂点のインデックス</param>
            <returns>取得したポリゴンの頂点座標</returns>
        </member>
        <member name="M:asd.PolygonCollider.SetVertex(System.Int32,asd.Vector2DF)">
            <summary>
            このポリゴンのindex番目のポリゴンを設定する
            </summary>
            <param name="index">ポリゴンの頂点のインデックス</param>
            <param name="vertex">設定する頂点座標</param>
        </member>
        <member name="T:asd.RectangleCollider">
            <summary>
            矩形のコライダクラス
            </summary>
        </member>
        <member name="P:asd.RectangleCollider.Area">
            <summary>
            矩形の範囲を取得または設定する
            </summary>
        </member>
        <member name="F:asd.EngineOption.IsFullScreen">
            <summary>
            フルスクリーンで起動するか?
            </summary>
        </member>
        <member name="F:asd.EngineOption.GraphicsDevice">
            <summary>
            描画に使用するデバイス
            </summary>
        </member>
        <member name="F:asd.EngineOption.WindowPosition">
            <summary>
            ウインドウの初期配置
            </summary>
        </member>
        <member name="F:asd.EngineOption.IsWindowResizable">
            <summary>
            ユーザーがウインドウを変更できるようにするか?
            </summary>
        </member>
        <member name="F:asd.EngineOption.IsReloadingEnabled">
            <summary>
            リソースの再読み込みを有効にするかどうか?
            </summary>
        </member>
        <member name="F:asd.EngineOption.AutoGeneratedLayer">
            <summary>
            起動時に自動的に生成されるシーンとレイヤーの種類
            </summary>
        </member>
        <member name="F:asd.EngineOption.ColorSpace">
            <summary>
            カラースペースの種類
            </summary>
        </member>
        <member name="P:asd.Engine.CurrentScene">
            <summary>
            現在描画対象となっているシーンを表す asd.Scene クラスのインスタンスを取得します。
            </summary>
        </member>
        <member name="P:asd.Engine.ProfilerIsVisible">
            <summary>
            プロファイリング結果を画面に表示するかどうかを表す真偽値を取得または設定する。
            </summary>
        </member>
        <member name="M:asd.Engine.Initialize(System.String,System.Int32,System.Int32,asd.EngineOption)">
            <summary>
            初期化を行う。
            </summary>
            <param name="title">タイトル</param>
            <param name="width">横幅</param>
            <param name="height">縦幅</param>
            <param name="option">オプション</param>
            <returns>成否</returns>
        </member>
        <member name="M:asd.Engine.InitializeByExternalWindow(System.IntPtr,System.IntPtr,System.Int32,System.Int32,asd.EngineOption)">
            <summary>
            外部ウインドウにゲーム画面を表示する初期化を行う。
            </summary>
            <param name="handle1">ハンドル1</param>
            <param name="handle2">ハンドル2</param>
            <param name="width">横幅</param>
            <param name="height">縦幅</param>
            <param name="option">オプション</param>
            <returns>成否</returns>
        </member>
        <member name="P:asd.Engine.Title">
            <summary>
            タイトルを設定する。
            </summary>
        </member>
        <member name="M:asd.Engine.DoEvents">
            <summary>
            イベントを実行し、進行可否を判断する。
            </summary>
            <returns>進行可能か?</returns>
        </member>
        <member name="M:asd.Engine.Update">
            <summary>
            更新処理を行う。
            </summary>
        </member>
        <member name="M:asd.Engine.Terminate">
            <summary>
            終了処理を行う。
            </summary>
        </member>
        <member name="M:asd.Engine.CreateCursor(System.String,asd.Vector2DI)">
            <summary>
            マウスカーソルを作成する。
            </summary>
            <param name="path">画像のパス</param>
            <param name="hot">カーソルの相対座標</param>
            <returns>カーソル</returns>
        </member>
        <member name="M:asd.Engine.SetCursor(asd.Cursor)">
            <summary>
            マウスカーソルを設定する。
            </summary>
            <param name="cursor">カーソル</param>
        </member>
        <member name="P:asd.Engine.ClipboardString">
            <summary>
            クリップボードの内容を取得、または設定する。
            </summary>
        </member>
        <member name="P:asd.Engine.IsFullscreenMode">
            <summary>
            フルスクリーンモードかどうか設定する。
            </summary>
            <remarks>
            現状、DirectXのみ有効である。
            </remarks>
        </member>
        <member name="P:asd.Engine.ReferenceCount">
            <summary>
            内部の参照数を取得する。
            </summary>
            <remarks>
            内部オブジェクト間の参照の数を取得する。
            正しく内部オブジェクトが破棄されているか調査するためのデバッグ用である。
            </remarks>
        </member>
        <member name="M:asd.Engine.AddObject2D(asd.Object2D)">
            <summary>
            一番最初に追加された2Dレイヤーにオブジェクトを追加する。
            </summary>
            <param name="o">オブジェクト</param>
            <returns>成否</returns>
        </member>
        <member name="M:asd.Engine.RemoveObject2D(asd.Object2D)">
            <summary>
            一番最初に追加された2Dレイヤーにオブジェクトを削除する。
            </summary>
            <param name="o">オブジェクト</param>
            <returns>成否</returns>
        </member>
        <member name="M:asd.Engine.AddObject3D(asd.Object3D)">
            <summary>
            一番最初に追加された3Dレイヤーにオブジェクトを追加する。
            </summary>
            <param name="o">オブジェクト</param>
            <returns>成否</returns>
        </member>
        <member name="M:asd.Engine.RemoveObject3D(asd.Object3D)">
            <summary>
            一番最初に追加された3Dレイヤーにオブジェクトを削除する。
            </summary>
            <param name="o">オブジェクト</param>
            <returns>成否</returns>
        </member>
        <member name="M:asd.Engine.ChangeScene(asd.Scene,System.Boolean)">
            <summary>
            描画する対象となるシーンを変更する。
            </summary>
            <param name="scene">次のシーン</param>
            <param name="doAutoDispose">前のシーンを自動的に破棄するかどうかの真偽値</param>
        </member>
        <member name="M:asd.Engine.ChangeSceneWithTransition(asd.Scene,asd.Transition,System.Boolean)">
            <summary>
            描画する対象となるシーンを画面遷移効果ありで変更する。
            </summary>
            <param name="scene">次のシーン</param>
            <param name="transition">画面遷移効果</param>
            <param name="doAutoDispose">前のシーンを自動的に破棄するかどうかの真偽値</param>
        </member>
        <member name="M:asd.Engine.Close">
            <summary>
            ウインドウを閉じる。
            </summary>
        </member>
        <member name="M:asd.Engine.TakeScreenshot(System.String)">
            <summary>
            スクリーンショットを保存する。
            </summary>
            <param name="path">出力先</param>
            <remarks>
            Windowsの場合、pngとjpg形式の保存に対応している。他のOSではpng形式の保存に対応している。
            形式の種類は出力先の拡張子で判断する。
            </remarks>
        </member>
        <member name="M:asd.Engine.CaptureScreenAsGifAnimation(System.String,System.Int32,System.Single,System.Single)">
            <summary>
            スクリーンショットをgifアニメーションとして録画する。
            </summary>
            <param name="path">出力先</param>
            <param name="frame">録画フレーム数</param>
            <param name="frequency_rate">録画頻度(例えば、1だと1フレームに1回保存、0.5だと2フレームに1回保存)</param>
            <param name="scale">ウインドウサイズに対する画像サイズの拡大率(ウインドウサイズが320の場合、0.5を指定すると160の画像が出力される)</param>
            <remarks>
            実行してから一定時間の間、録画を続ける。
            録画が終了するまでにアプリケーションが終了された場合、終了した時点までの録画結果が出力される。
            </remarks>
        </member>
        <member name="P:asd.Engine.DeltaTime">
            <summary>
            1フレームで経過した実時間(秒)を取得、または設定する。
            </summary>
            <remarks>
            基本的に開発者は使用する取得のみで設定する必要はない。
            何らかの理由で無理やり経過時間を指定する場合に使用する。
            </remarks>
        </member>
        <member name="P:asd.Engine.CurrentFPS">
            <summary>
            現在のFPSを取得する。
            </summary>
        </member>
        <member name="P:asd.Engine.TargetFPS">
            <summary>
            目標FPSを取得、または設定する。
            </summary>
        </member>
        <member name="P:asd.Engine.TimeSpan">
            <summary>
            間を指定可能なオブジェクトの実時間あたりの進行速度を取得、または設定する。
            </summary>
        </member>
        <member name="P:asd.Engine.FramerateMode">
            <summary>
            フレームレートの制御方法を取得、または設定する。
            </summary>
        </member>
        <member name="P:asd.Engine.WindowHandle">
            <summary>
            ウインドウズの場合、ウインドウハンドルを取得する。
            </summary>
        </member>
        <member name="M:asd.Engine.OpenTool">
            <summary>
            GUI機能の使用を開始します。
            </summary>
        </member>
        <member name="M:asd.Engine.CloseTool">
            <summary>
            GUI機能の使用を終了します。
            </summary>
        </member>
        <member name="P:asd.Engine.WindowSize">
            <summary>
            ウィンドウのサイズを取得、または設定する。
            </summary>
        </member>
        <member name="M:asd.Engine.Reload">
            <summary>
            更新されたリソースのリロードを行う。
            </summary>
        </member>
        <member name="T:asd.GarbageCollector">
            <summary>
            実際にネイティブのオブジェクトのGCを行うクラス
            </summary>
        </member>
        <member name="M:asd.GarbageCollector.AddObject(System.Object)">
            <summary>
            破棄するインスタンスを追加する。
            </summary>
            <param name="o">インスタンス</param>
        </member>
        <member name="M:asd.GarbageCollector.Collect">
            <summary>
            インスタンスを破棄する。
            </summary>
        </member>
        <member name="T:asd.GenerationType">
            <summary>
            C++のインスタンスの生成及び取得方法
            </summary>
        </member>
        <member name="F:asd.GenerationType.Create">
            <summary>
            ファイルパス等からC++のインスタンスが生成された場合
            生成時に使い回しをしている場合、カウンタを増やしているので、
            使い回しと判定した場合、カウンタを減らす
            </summary>
        </member>
        <member name="F:asd.GenerationType.Get">
            <summary>
            C++のインスタンスを取得した場合、
            新規の場合はC#側でC++のインスタンスを保持するのでカウンタを増やす
            </summary>
        </member>
        <member name="M:asd.GC.GenerateSoundSource(asd.swig.SoundSource,asd.GenerationType)">
            <summary>
            ネイティブのインスタンスからラッパー側のインスタンスを生成する。
            </summary>
            <param name="o"></param>
            <param name="type"></param>
        </member>
        <member name="M:asd.GC.GenerateCursor(asd.swig.Cursor,asd.GenerationType)">
            <summary>
            ネイティブのインスタンスからラッパー側のインスタンスを生成する。
            </summary>
            <param name="o"></param>
            <param name="type"></param>
        </member>
        <member name="M:asd.GC.GenerateTexture2D(asd.swig.Texture2D,asd.GenerationType)">
            <summary>
            ネイティブのインスタンスからラッパー側のインスタンスを生成する。
            </summary>
            <param name="o"></param>
            <param name="type"></param>
        </member>
        <member name="M:asd.GC.GenerateRenderTexture2D(asd.swig.RenderTexture2D,asd.GenerationType)">
            <summary>
            ネイティブのインスタンスからラッパー側のインスタンスを生成する。
            </summary>
            <param name="o"></param>
            <param name="type"></param>
        </member>
        <member name="M:asd.GC.GenerateCubemapTexture(asd.swig.CubemapTexture,asd.GenerationType)">
            <summary>
            ネイティブのインスタンスからラッパー側のインスタンスを生成する。
            </summary>
            <param name="o"></param>
            <param name="type"></param>
        </member>
        <member name="M:asd.GC.GenerateEffect(asd.swig.Effect,asd.GenerationType)">
            <summary>
            ネイティブのインスタンスからラッパー側のインスタンスを生成する。
            </summary>
            <param name="o"></param>
            <param name="type"></param>
        </member>
        <member name="M:asd.GC.GenerateFont(asd.swig.Font,asd.GenerationType)">
            <summary>
            ネイティブのインスタンスからラッパー側のインスタンスを生成する。
            </summary>
            <param name="o"></param>
            <param name="type"></param>
        </member>
        <member name="M:asd.GC.GenerateMesh(asd.swig.Mesh,asd.GenerationType)">
            <summary>
            ネイティブのインスタンスからラッパー側のインスタンスを生成する。
            </summary>
            <param name="o"></param>
            <param name="type"></param>
        </member>
        <member name="M:asd.GC.GenerateDeformer(asd.swig.Deformer,asd.GenerationType)">
            <summary>
            ネイティブのインスタンスからラッパー側のインスタンスを生成する。
            </summary>
            <param name="o"></param>
            <param name="type"></param>
        </member>
        <member name="M:asd.GC.GenerateModel(asd.swig.Model,asd.GenerationType)">
            <summary>
            ネイティブのインスタンスからラッパー側のインスタンスを生成する。
            </summary>
            <param name="o"></param>
            <param name="type"></param>
        </member>
        <member name="M:asd.GC.GenerateMassModel(asd.swig.MassModel,asd.GenerationType)">
            <summary>
            ネイティブのインスタンスからラッパー側のインスタンスを生成する。
            </summary>
            <param name="o"></param>
            <param name="type"></param>
        </member>
        <member name="M:asd.GC.GenerateTerrain3D(asd.swig.Terrain3D,asd.GenerationType)">
            <summary>
            ネイティブのインスタンスからラッパー側のインスタンスを生成する。
            </summary>
            <param name="o"></param>
            <param name="type"></param>
        </member>
        <member name="M:asd.GC.GenerateKeyframeAnimation(asd.swig.KeyframeAnimation,asd.GenerationType)">
            <summary>
            ネイティブのインスタンスからラッパー側のインスタンスを生成する。
            </summary>
            <param name="o"></param>
            <param name="type"></param>
        </member>
        <member name="M:asd.GC.GenerateAnimationSource(asd.swig.AnimationSource,asd.GenerationType)">
            <summary>
            ネイティブのインスタンスからラッパー側のインスタンスを生成する。
            </summary>
            <param name="o"></param>
            <param name="type"></param>
        </member>
        <member name="M:asd.GC.GenerateAnimationClip(asd.swig.AnimationClip,asd.GenerationType)">
            <summary>
            ネイティブのインスタンスからラッパー側のインスタンスを生成する。
            </summary>
            <param name="o"></param>
            <param name="type"></param>
        </member>
        <member name="M:asd.GC.GenerateInternal``2(``0,``1,asd.GenerationType)">
            <summary>
            Generate*メソッドの内部処理
            </summary>
            <typeparam name="E"></typeparam>
            <typeparam name="T"></typeparam>
            <param name="existing"></param>
            <param name="o"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:asd.IReleasable">
            <summary>
            破棄可能なインスタンス
            </summary>
        </member>
        <member name="P:asd.IReleasable.IsReleased">
            <summary>
            破棄されているか？
            </summary>
        </member>
        <member name="M:asd.IReleasable.ForceToRelease">
            <summary>
            強制的に使用しているメモリを開放する。
            </summary>
            <remarks>
            何らかの理由でメモリが不足した場合に実行する。
            開放した後の動作の保証はしていないので、必ず参照が残っていないことを確認する必要がある。
            </remarks>
        </member>
        <member name="T:asd.AnimationClip">
            <summary>
            アニメーションソースを元に情報が付加されたアニメーションクラス
            </summary>
        </member>
        <member name="M:asd.AnimationClip.ForceToRelease">
            <summary>
            強制的に使用しているメモリを開放する。
            </summary>
            <remarks>
            何らかの理由でメモリが不足した場合に実行する。
            開放した後の動作の保証はしていないので、必ず参照が残っていないことを確認する必要がある。
            </remarks>
        </member>
        <member name="P:asd.AnimationClip.Source">
            <summary>
            ソースを取得、または設定する。
            </summary>
        </member>
        <member name="P:asd.AnimationClip.IsLoopingMode">
            <summary>
            ループするかを取得、または設定する。
            </summary>
        </member>
        <member name="T:asd.AnimationSource">
            <summary>
            アニメーションの元データのクラス
            </summary>
        </member>
        <member name="M:asd.AnimationSource.ForceToRelease">
            <summary>
            強制的に使用しているメモリを開放する。
            </summary>
            <remarks>
            何らかの理由でメモリが不足した場合に実行する。
            開放した後の動作の保証はしていないので、必ず参照が残っていないことを確認する必要がある。
            </remarks>
        </member>
        <member name="P:asd.AnimationSource.Length">
            <summary>
            アニメーションの長さ(60フレーム単位)を取得する。
            </summary>
        </member>
        <member name="M:asd.AnimationSource.AddAnimation(asd.KeyframeAnimation)">
            <summary>
            ボーンごとのアニメーションを追加する。
            </summary>
            <param name="keyframeAnimation">アニメーション</param>
        </member>
        <member name="M:asd.AnimationSource.RemoveAnimation(asd.KeyframeAnimation)">
            <summary>
            ボーンごとのアニメーションを削除する。
            </summary>
            <param name="keyframeAnimation">アニメーション</param>
        </member>
        <member name="T:asd.AnimationSystem">
            <summary>
            アニメーションに関するインスタンスを生成するためのクラス
            </summary>
        </member>
        <member name="M:asd.AnimationSystem.CreateAnimationClip">
            <summary>
            アニメーションクリップのインスタンスを生成する。
            </summary>
            <returns>インスタンス</returns>
        </member>
        <member name="M:asd.AnimationSystem.CreateAnimationSource">
            <summary>
            アニメーションソースのインスタンスを生成する。
            </summary>
            <returns>インスタンス</returns>
        </member>
        <member name="M:asd.AnimationSystem.CreateKeyframeAnimation">
            <summary>
            キーフレームアニメーションのインスタンスを生成する。
            </summary>
            <returns>インスタンス</returns>
        </member>
        <member name="T:asd.KeyframeAnimation">
            <summary>
            キーフレームで指定するアニメーションのクラス
            </summary>
        </member>
        <member name="M:asd.KeyframeAnimation.ForceToRelease">
            <summary>
            強制的に使用しているメモリを開放する。
            </summary>
            <remarks>
            何らかの理由でメモリが不足した場合に実行する。
            開放した後の動作の保証はしていないので、必ず参照が残っていないことを確認する必要がある。
            </remarks>
        </member>
        <member name="P:asd.KeyframeAnimation.Name">
            <summary>
            名称を取得、または設定する。
            </summary>
        </member>
        <member name="M:asd.KeyframeAnimation.AddKeyframe(asd.FCurveKeyframe)">
            <summary>
            キーフレームを追加する。
            </summary>
            <param name="kf">キーフレーム</param>
        </member>
        <member name="M:asd.KeyframeAnimation.GetValue(System.Single)">
            <summary>
            指定した時間の値を取得する。
            </summary>
            <param name="time">時間</param>
            <returns>値</returns>
        </member>
        <member name="T:asd.MediaPlayer">
            <summary>
            映像を再生するクラス
            </summary>
            <summary>
            映像ファイルを再生するためのクラス 
            </summary>
        </member>
        <member name="M:asd.MediaPlayer.ForceToRelease">
            <summary>
            強制的に使用しているメモリを開放する。
            </summary>
            <remarks>
            何らかの理由でメモリが不足した場合に実行する。
            開放した後の動作の保証はしていないので、必ず参照が残っていないことを確認する必要がある。
            </remarks>
        </member>
        <member name="P:asd.MediaPlayer.Size">
            <summary>
            読み込んだ映像の大きさを取得する。
            </summary>
        </member>
        <member name="P:asd.MediaPlayer.CurrentFrame">
            <summary>
            現在再生中の映像のフレーム番号を取得する。
            </summary>
        </member>
        <member name="M:asd.MediaPlayer.Play(System.Boolean)">
            <summary>
            映像を再生する。 
            </summary>
            <param name="isLoopingMode">ループ再生するか? </param>
            <returns></returns>
        </member>
        <member name="M:asd.MediaPlayer.Load(System.String)">
            <summary>
            映像を読み込む。 
            </summary>
            <param name="path">ファイルのパス </param>
            <returns></returns>
            <remarks>
            H264を推奨する。 
            </remarks>
        </member>
        <member name="M:asd.MediaPlayer.WriteToTexture2D(asd.Texture2D)">
            <summary>
            現在の映像をテクスチャに書き込む。 
            </summary>
            <param name="target">書き込み先 </param>
            <returns></returns>
            <remarks>
            映像とテクスチャの解像度は等しい必要がある。 
            </remarks>
        </member>
        <member name="T:asd.Chip2D">
            <summary>
            マップオブジェクト2Dで描画するテクスチャの情報を扱うチップクラス。
            </summary>
        </member>
        <member name="M:asd.Chip2D.ForceToRelease">
            <summary>
            強制的に使用しているメモリを開放する。
            </summary>
            <remarks>
            何らかの理由でメモリが不足した場合に実行する。
            開放した後の動作の保証はしていないので、必ず参照が残っていないことを確認する必要がある。
            </remarks>
        </member>
        <member name="P:asd.Chip2D.Texture">
            <summary>
            描画するテクスチャを取得または設定する。
            </summary>
        </member>
        <member name="P:asd.Chip2D.Src">
            <summary>
            このチップのテクスチャ上の描画範囲を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.Chip2D.Position">
            <summary>
            このチップのマップオブジェクト2Dに対する相対的な位置を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.Chip2D.Angle">
            <summary>
            このチップのマップオブジェクト2Dに対する相対的な回転角度を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.Chip2D.Scale">
            <summary>
            このチップのマップオブジェクト2Dに対する相対的な拡大率を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.Chip2D.CenterPosition">
            <summary>
            このチップを描画する際の中心座標を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.Chip2D.Color">
            <summary>
            このチップのテクスチャを描画する際に合成する色を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.Chip2D.TurnLR">
            <summary>
            このチップのテクスチャ描画の左右反転フラグを取得または設定する。
            </summary>
        </member>
        <member name="P:asd.Chip2D.TurnUL">
            <summary>
            このチップのテクスチャ描画の上下反転フラグを取得または設定する。
            </summary>
        </member>
        <member name="P:asd.Chip2D.AlphaBlendMode">
            <summary>
            このチップのブレンディング モードを取得または設定する。
            </summary>
        </member>
        <member name="P:asd.Chip2D.TextureFilterType">
            <summary>
            このチップのテクスチャを描画する際のテクスチャフィルタの種類を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.Chip2D.DrawingPriority">
            <summary>
            このチップの描画優先度を取得または設定する。
            </summary>
        </member>
        <member name="T:asd.CubemapTexture">
            <summary>
            キューブマップ
            </summary>
        </member>
        <member name="M:asd.CubemapTexture.ForceToRelease">
            <summary>
            強制的に使用しているメモリを開放する。
            </summary>
            <remarks>
            何らかの理由でメモリが不足した場合に実行する。
            開放した後の動作の保証はしていないので、必ず参照が残っていないことを確認する必要がある。
            </remarks>
        </member>
        <member name="P:asd.CubemapTexture.MipmapCount">
            <summary>
            ミップマップ数
            </summary>
        </member>
        <member name="T:asd.FCurveKeyframe">
            <summary>
            Fカーブのキーフレーム
            </summary>
        </member>
        <member name="F:asd.FCurveKeyframe.KeyValue">
            <summary>
            時間と値
            </summary>
        </member>
        <member name="F:asd.FCurveKeyframe.LeftHandle">
            <summary>
            制御用ハンドル
            </summary>
        </member>
        <member name="F:asd.FCurveKeyframe.RightHandle">
            <summary>
            制御用ハンドル
            </summary>
        </member>
        <member name="F:asd.FCurveKeyframe.Interpolation">
            <summary>
            補間方法
            </summary>
        </member>
        <member name="T:asd.RenderSettings">
            <summary>
            描画設定のクラス
            </summary>
        </member>
        <member name="F:asd.RenderSettings.IsLightweightMode">
            <summary>
            遅延レンダリングから軽量レンダリングに変更し高速に描画するか?
            </summary>
        </member>
        <member name="F:asd.RenderSettings.VisualizedBuffer">
            <summary>
            画面に表示されるバッファ
            </summary>
        </member>
        <member name="T:asd.Deformer">
            <summary>
            メッシュを変形させるためのクラス
            </summary>
        </member>
        <member name="M:asd.Deformer.ForceToRelease">
            <summary>
            強制的に使用しているメモリを開放する。
            </summary>
            <remarks>
            何らかの理由でメモリが不足した場合に実行する。
            開放した後の動作の保証はしていないので、必ず参照が残っていないことを確認する必要がある。
            </remarks>
        </member>
        <member name="M:asd.Deformer.AddBone(System.String,System.Int32,asd.RotationOrder,asd.Matrix44,asd.Vector3DF,asd.Vector4DF,asd.Vector3DF)">
                        @brief	
                        @param	name	
                        @param	rotationOrder	
                        @param	localMat	
                        @param	globalMatInv	
            <summary>
            ボーンを追加する。
            </summary>
            <param name="name">ボーンの名称</param>
            <param name="parentBoneIndex">親ボーンのインデックス(親がない場合は-1)</param>
            <param name="rotationOrder">ボーンの回転行列の計算方法</param>
            <param name="localMat">ボーンのローカル変形行列</param>
        </member>
        <member name="T:asd.Effect">
            <summary>
            エフェクトの情報が記録されているクラス
            </summary>
            <summary>
            エフェクトの情報が記録されているクラス 
            </summary>
        </member>
        <member name="M:asd.Effect.ForceToRelease">
            <summary>
            強制的に使用しているメモリを開放する。
            </summary>
            <remarks>
            何らかの理由でメモリが不足した場合に実行する。
            開放した後の動作の保証はしていないので、必ず参照が残っていないことを確認する必要がある。
            </remarks>
        </member>
        <member name="T:asd.Font">
            <summary>
            フォントクラス
            </summary>
            <summary>
            フォントの情報が記録されているクラス 
            </summary>
        </member>
        <member name="M:asd.Font.ForceToRelease">
            <summary>
            強制的に使用しているメモリを開放する。
            </summary>
            <remarks>
            何らかの理由でメモリが不足した場合に実行する。
            開放した後の動作の保証はしていないので、必ず参照が残っていないことを確認する必要がある。
            </remarks>
        </member>
        <member name="M:asd.Font.CalcTextureSize(System.String,asd.WritingDirection)">
            <summary>
            描画テキストと描画方向を与えると、その文字の描画領域を返す。 
            </summary>
            <param name="text">描画テキスト </param>
            <param name="writingDirection">描画方向 </param>
            <returns>文字の描画領域 </returns>
        </member>
        <member name="M:asd.Font.AddImageGlyph(System.String,asd.Texture2D)">
            <summary>
            指定した文字の代わりに画像を表示する組み合わせを追加する。 
            </summary>
            <param name="c">文字 </param>
            <param name="texture">画像 </param>
        </member>
        <member name="T:asd.Graphics">
            <summary>
            
            </summary>
        </member>
        <member name="M:asd.Graphics.CreateTexture2D(System.String)">
            <summary>
            テクスチャを生成する。
            </summary>
            <param name="path">パス</param>
            <returns>テクスチャ</returns>
        </member>
        <member name="M:asd.Graphics.CreateTexture2DAsRawData(System.String)">
            <summary>
            テクスチャを生成する。
            </summary>
            <param name="path">パス</param>
            <returns>テクスチャ</returns>
            <remarks>
            画素がRGB空間にマッピングされている時に使用する。(ノーマルマップ等)
            </remarks>
        </member>
        <member name="M:asd.Graphics.CreateEmptyTexture2D(System.Int32,System.Int32,asd.TextureFormat)">
            <summary>
            空のテクスチャを生成する。
            </summary>
            <param name="width">横幅</param>
            <param name="height">縦幅</param>
            <param name="format">フォーマット</param>
            <returns>テクスチャ</returns>
        </member>
        <member name="M:asd.Graphics.CreateEditableTexture2D(System.String)">
            <summary>
            編集可能なテクスチャを生成する。
            </summary>
            <param name="path">パス</param>
            <returns>テクスチャ</returns>
            <remarks>
            読み込める画像形式はPNGのみ。
            </remarks>
        </member>
        <member name="M:asd.Graphics.CreateRenderTexture2D(System.Int32,System.Int32,asd.TextureFormat)">
            <summary>
            描画先として指定可能なテクスチャを生成する。
            </summary>
            <param name="width">横幅</param>
            <param name="height">縦幅</param>
            <param name="format">フォーマット</param>
            <returns>テクスチャ</returns>
        </member>
        <member name="M:asd.Graphics.CreateCubemapTextureFrom6ImageFiles(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            6枚の画像ファイルからキューブマップテクスチャを生成する。
            </summary>
            <param name="front">前方向の画像ファイルへの相対パス</param>
            <param name="left">左方向の画像ファイルへの相対パス</param>
            <param name="back">後ろ方向の画像ファイルへの相対パス</param>
            <param name="right">右方向の画像ファイルへの相対パス</param>
            <param name="top">上方向の画像ファイルへの相対パス</param>
            <param name="bottom">下方向の画像ファイルへの相対パス</param>
            <returns>キューブマップ</returns>
        </member>
        <member name="M:asd.Graphics.CreateCubemapTextureFromMipmapImageFiles(System.String,System.Int32)">
            <summary>
            複数の画像ファイルからミップマップ付のキューブマップテクスチャを生成する。
            </summary>
            <param name="path">ファイルの名称の先頭</param>
            <param name="mipmapCount">ミップマップ数</param>
            <returns>キューブマップ</returns>
        </member>
        <member name="M:asd.Graphics.CreateCubemapTextureFromSingleImageFile(System.String)">
            <summary>
            1つのファイルからミップマップ付のキューブマップテクスチャを生成する。
            </summary>
            <param name="path">パス</param>
            <returns>キューブマップ</returns>
        </member>
        <member name="M:asd.Graphics.CreateShader2D(System.String)">
            <summary>
            シェーダー(2D)を生成する。
            </summary>
            <param name="shaderText">シェーダーのコード</param>
            <returns></returns>
        </member>
        <member name="M:asd.Graphics.CreateMaterial2D(asd.Shader2D)">
            <summary>
            マテリアル(2D)を生成する。
            </summary>
            <param name="shader">シェーダー</param>
            <returns>マテリアル(2D)</returns>
        </member>
        <member name="M:asd.Graphics.CreateShader3D(System.String)">
            <summary>
            シェーダー(3D)を生成する。
            </summary>
            <param name="shaderText">シェーダーのコード</param>
            <returns></returns>
        </member>
        <member name="M:asd.Graphics.CreateMaterial3D(asd.Shader3D)">
            <summary>
            マテリアル(3D)を生成する。
            </summary>
            <param name="shader">シェーダー</param>
            <returns>マテリアル(3D)</returns>
        </member>
        <member name="M:asd.Graphics.CreateMaterialPropertyBlock">
            <summary>
            マテリアルプロパティブロックを生成する。
            </summary>
            <returns>マテリアルプロパティブロック</returns>
        </member>
        <member name="M:asd.Graphics.CreateMesh">
            <summary>
            メッシュを生成する。
            </summary>
            <returns>メッシュ</returns>
        </member>
        <member name="M:asd.Graphics.CreateDeformer">
            <summary>
            デフォーマーを生成する。
            </summary>
            <returns>デフォーマー</returns>
        </member>
        <member name="M:asd.Graphics.CreateModel(System.String)">
            <summary>
            モデルを生成する。
            </summary>
            <param name="path">パス</param>
            <returns>モデル</returns>
        </member>
        <member name="M:asd.Graphics.CreateMassModelFromModelFile(System.String)">
            <summary>
            大量描画用モデルを生成する。
            </summary>
            <param name="path">パス</param>
            <returns>大量描画用モデル</returns>
        </member>
        <member name="M:asd.Graphics.CreateMassModel(System.String)">
            <summary>
            大量描画用モデルを生成する。
            </summary>
            <param name="path">パス</param>
            <returns>大量描画用モデル</returns>
        </member>
        <member name="M:asd.Graphics.CreateTerrain3D">
            <summary>
            地形を生成する。
            </summary>
            <returns>地形</returns>
        </member>
        <member name="M:asd.Graphics.CreateEffect(System.String)">
            <summary>
            エフェクトを生成する。
            </summary>
            <param name="path">パス</param>
            <returns>エフェクト</returns>
        </member>
        <member name="M:asd.Graphics.CreateFont(System.String)">
            <summary>
            フォントを生成する。
            </summary>
            <param name="path">パス</param>
            <returns>フォント</returns>
        </member>
        <member name="M:asd.Graphics.CreateDynamicFont(System.String,System.Int32,asd.Color,System.Int32,asd.Color)">
            <summary>
            必要に応じて動的に生成されるフォントを生成する。
            </summary>
            <param name="font">フォント名/フォントパス</param>
            <param name="fontSize">フォントサイズ</param>
            <param name="color">フォントの色</param>
            <param name="outlineSize">外枠の太さ</param>
            <param name="outlineColor">外枠の色</param>
            <returns>フォント</returns>
            <remarks>
            文字を表示する時に必要な文字の分だけフォントを生成するフォントクラスを生成する。
            fontには、フォント名、もしくはフォントファイルへのパスを指定する。
            何もfontに文字を指定しない、もしくはnullだと標準フォントが使用される。
            事前に専用のフォントファイルを用意する必要はないが、アプリケーションを実行する環境に指定したフォントが存在する必要がある。
            </remarks>
        </member>
        <member name="M:asd.Graphics.CreateImagePackage(System.String)">
            <summary>
            画像パッケージを生成する。
            </summary>
            <param name="path">パス</param>
            <returns>画像パッケージ</returns>
        </member>
        <member name="M:asd.Graphics.CreateMediaPlayer">
            <summary>
            メディアプレイヤーを生成する。
            </summary>
            <returns>メディアプレイヤー</returns>
        </member>
        <member name="P:asd.Graphics.GraphicsDeviceType">
            <summary>
            描画ランタイムの種類を取得する。
            </summary>
        </member>
        <member name="P:asd.Graphics.DrawCallCount">
            <summary>
            1フレーム間に実行された描画命令の回数を取得する。
            </summary>
        </member>
        <member name="P:asd.Graphics.UsedVRAMSize">
            <summary>
            現在使用済みのVRAM容量を取得する。
            </summary>
        </member>
        <member name="T:asd.ImagePackage">
            <summary>
            複数の画像が格納されているクラス
            </summary>
            <summary>
            複数の画像が格納されているクラス 
            </summary>
        </member>
        <member name="M:asd.ImagePackage.ForceToRelease">
            <summary>
            強制的に使用しているメモリを開放する。
            </summary>
            <remarks>
            何らかの理由でメモリが不足した場合に実行する。
            開放した後の動作の保証はしていないので、必ず参照が残っていないことを確認する必要がある。
            </remarks>
        </member>
        <member name="M:asd.ImagePackage.GetImage(System.Int32)">
            <summary>
            画像を取得する。
            </summary>
            <param name="index">インデックス</param>
            <returns>画像</returns>
        </member>
        <member name="P:asd.ImagePackage.ImageCount">
            <summary>
            格納されている画像の枚数を取得する。
            </summary>
        </member>
        <member name="M:asd.ImagePackage.GetImageName(System.Int32)">
            <summary>
            格納されている画像の名称を取得する。 
            </summary>
            <param name="index">インデックス </param>
            <returns>名称 </returns>
        </member>
        <member name="M:asd.ImagePackage.GetImageArea(System.Int32)">
            <summary>
            格納されている画像が配置される領域を取得する。 
            </summary>
            <param name="index">インデックス </param>
            <returns>領域 </returns>
        </member>
        <member name="M:asd.ImagePackage.GetElementType(System.Int32)">
            <summary>
            格納されている画像の種類を取得する。 
            </summary>
            <param name="index">インデックス </param>
            <returns>画像の種類 </returns>
        </member>
        <member name="M:asd.ImagePackage.GetAdditionalElementType(System.Int32)">
            <summary>
            格納されている画像の追加情報の種類を取得する。 
            </summary>
            <param name="index">インデックス </param>
            <returns>追加情報の種類 </returns>
        </member>
        <member name="T:asd.MassModel">
            <summary>
            大量描画が可能な3Dモデルクラス
            </summary>
            <summary>
            大量描画が可能な3Dモデルクラス 
            </summary>
        </member>
        <member name="M:asd.MassModel.ForceToRelease">
            <summary>
            強制的に使用しているメモリを開放する。
            </summary>
            <remarks>
            何らかの理由でメモリが不足した場合に実行する。
            開放した後の動作の保証はしていないので、必ず参照が残っていないことを確認する必要がある。
            </remarks>
        </member>
        <member name="M:asd.MassModel.SetMaterial(asd.Material3D)">
            <summary>
            材質を設定する。
            </summary>
            <param name="material">材質</param>
        </member>
        <member name="P:asd.MassModel.AnimationCount">
            <summary>
            モデルが持つアニメーションの個数を取得する。
            </summary>
        </member>
        <member name="M:asd.MassModel.GetAnimationName(System.Int32)">
            <summary>
            モデルが持つアニメーションの名称を取得する。 
            </summary>
            <param name="index">アニメーションのインデックス </param>
            <returns>アニメーションの名称 </returns>
        </member>
        <member name="M:asd.MassModel.GetAnimationLength(System.String)">
            <summary>
            モデルが持つアニメーションの長さ(60フレーム単位)を取得する。 
            </summary>
            <param name="name">アニメーション名 </param>
            <returns>アニメーションの長さ </returns>
        </member>
        <member name="M:asd.MassModel.GetIsAnimationLoopingMode(System.String)">
            <summary>
            アニメーションがループするかを取得する。 
            </summary>
            <param name="name">アニメーション名 </param>
            <returns>ループするか? </returns>
        </member>
        <member name="M:asd.MassModel.SetIsAnimationLoopingMode(System.String,System.Boolean)">
            <summary>
            アニメーションがループするかを設定する。 
            </summary>
            <param name="name">アニメーション名 </param>
            <param name="isLoopingMode"></param>
        </member>
        <member name="T:asd.Material2D">
            <summary>
            
            </summary>
        </member>
        <member name="M:asd.Material2D.ForceToRelease">
            <summary>
            強制的に使用しているメモリを開放する。
            </summary>
            <remarks>
            何らかの理由でメモリが不足した場合に実行する。
            開放した後の動作の保証はしていないので、必ず参照が残っていないことを確認する必要がある。
            </remarks>
        </member>
        <member name="M:asd.Material2D.GetFloat(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:asd.Material2D.SetFloat(System.String,System.Single)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:asd.Material2D.GetVector2DF(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:asd.Material2D.SetVector2DF(System.String,asd.Vector2DF)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:asd.Material2D.GetVector3DF(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:asd.Material2D.SetVector3DF(System.String,asd.Vector3DF)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:asd.Material2D.GetVector4DF(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:asd.Material2D.SetVector4DF(System.String,asd.Vector4DF)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:asd.Material2D.SetTexture2D(System.String,asd.Texture2D)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:asd.Material2D.GetTextureFilterType(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:asd.Material2D.SetTextureFilterType(System.String,asd.TextureFilterType)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="filter"></param>
        </member>
        <member name="M:asd.Material2D.GetTextureWrapType(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:asd.Material2D.SetTextureWrapType(System.String,asd.TextureWrapType)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="wrap"></param>
        </member>
        <member name="T:asd.Material3D">
            <summary>
            
            </summary>
        </member>
        <member name="M:asd.Material3D.ForceToRelease">
            <summary>
            強制的に使用しているメモリを開放する。
            </summary>
            <remarks>
            何らかの理由でメモリが不足した場合に実行する。
            開放した後の動作の保証はしていないので、必ず参照が残っていないことを確認する必要がある。
            </remarks>
        </member>
        <member name="M:asd.Material3D.GetFloat(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:asd.Material3D.SetFloat(System.String,System.Single)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:asd.Material3D.GetVector2DF(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:asd.Material3D.SetVector2DF(System.String,asd.Vector2DF)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:asd.Material3D.GetVector3DF(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:asd.Material3D.SetVector3DF(System.String,asd.Vector3DF)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:asd.Material3D.GetVector4DF(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:asd.Material3D.SetVector4DF(System.String,asd.Vector4DF)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:asd.Material3D.SetTexture2D(System.String,asd.Texture2D)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:asd.Material3D.GetTextureFilterType(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:asd.Material3D.SetTextureFilterType(System.String,asd.TextureFilterType)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="filter"></param>
        </member>
        <member name="M:asd.Material3D.GetTextureWrapType(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:asd.Material3D.SetTextureWrapType(System.String,asd.TextureWrapType)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="wrap"></param>
        </member>
        <member name="T:asd.MaterialPropertyBlock">
            <summary>
            マテリアルへのパラメーターの集合
            </summary>
        </member>
        <member name="M:asd.MaterialPropertyBlock.ForceToRelease">
            <summary>
            強制的に使用しているメモリを開放する。
            </summary>
            <remarks>
            何らかの理由でメモリが不足した場合に実行する。
            開放した後の動作の保証はしていないので、必ず参照が残っていないことを確認する必要がある。
            </remarks>
        </member>
        <member name="T:asd.Mesh">
            <summary>
            3Dメッシュのクラス
            </summary>
            <summary>
            3Dメッシュのクラス 
            </summary>
        </member>
        <member name="M:asd.Mesh.ForceToRelease">
            <summary>
            強制的に使用しているメモリを開放する。
            </summary>
            <remarks>
            何らかの理由でメモリが不足した場合に実行する。
            開放した後の動作の保証はしていないので、必ず参照が残っていないことを確認する必要がある。
            </remarks>
        </member>
        <member name="M:asd.Mesh.SetMaterial(System.Int32,asd.Material3D)">
            <summary>
            材質を設定する。
            </summary>
            <param name="materialIndex">材質のインデックス</param>
            <param name="material">材質</param>
            <remarks>AddMaterialCountを実行した後でないと無効になる。</remarks>
        </member>
        <member name="M:asd.Mesh.AddVertex(asd.Vector3DF,asd.Vector3DF,asd.Vector3DF,asd.Vector2DF,asd.Vector2DF,asd.Color,System.Int32,System.Int32)">
            <summary>
            頂点を追加する。 
            </summary>
            <param name="position">座標 </param>
            <param name="normal">法線 </param>
            <param name="binormal">従法線 </param>
            <param name="uv1">UV1 </param>
            <param name="uv2">UV2 </param>
            <param name="color">頂点色 </param>
            <param name="boneWeights">ボーンのウエイト </param>
            <param name="boneIndexes">ボーンのインデックス </param>
        </member>
        <member name="M:asd.Mesh.AddFace(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            面を追加する。 
            </summary>
            <param name="index1">頂点インデックス1 </param>
            <param name="index2">頂点インデックス2 </param>
            <param name="index3">頂点インデックス3 </param>
            <param name="materialIndex">材質インデックス </param>
        </member>
        <member name="M:asd.Mesh.AddBoneConnector(System.Int32,asd.Matrix44)">
            <summary>
            ボーンとの接続設定を追加する。 
            </summary>
            <param name="targetIndex">対象ボーンインデックス </param>
            <param name="boneToMesh">ボーンの行列をメッシュの行列に変換する行列 </param>
        </member>
        <member name="M:asd.Mesh.AddMaterial">
            <summary>
            材質を追加する。 
            </summary>
            <returns>材質のインデックス </returns>
        </member>
        <member name="M:asd.Mesh.SendToGPUMemory">
            <summary>
            設定した値をGPUに送信する。 
            </summary>
        </member>
        <member name="M:asd.Mesh.SetColorTexture(System.Int32,asd.Texture2D)">
            <summary>
            内部シェーダーを使用する場合のカラーテクスチャを設定する。 
            </summary>
            <param name="materialIndex">材質のインデックス </param>
            <param name="texture"></param>
            <remarks>
            AddMaterialCountを実行した後でないと無効になる。 
            </remarks>
        </member>
        <member name="M:asd.Mesh.SetNormalTexture(System.Int32,asd.Texture2D)">
            <summary>
            内部シェーダーを使用する場合の法線テクスチャを設定する。 
            </summary>
            <param name="materialIndex">材質のインデックス </param>
            <param name="texture"></param>
            <remarks>
            AddMaterialCountを実行した後でないと無効になる。 
            </remarks>
        </member>
        <member name="M:asd.Mesh.SetMetalnessTexture(System.Int32,asd.Texture2D)">
            <summary>
            内部シェーダーを使用する場合の金属度テクスチャを設定する。 
            </summary>
            <param name="materialIndex">材質のインデックス </param>
            <param name="texture"></param>
            <remarks>
            AddMaterialCountを実行した後でないと無効になる。 
            </remarks>
        </member>
        <member name="M:asd.Mesh.SetSmoothnessTexture(System.Int32,asd.Texture2D)">
            <summary>
            内部シェーダーを使用する場合の面平滑度テクスチャを設定する。 
            </summary>
            <param name="materialIndex">材質のインデックス </param>
            <param name="texture"></param>
            <remarks>
            AddMaterialCountを実行した後でないと無効になる。 
            </remarks>
        </member>
        <member name="T:asd.Model">
            <summary>
            3Dモデルクラス
            </summary>
            <summary>
            3Dモデルクラス 
            </summary>
        </member>
        <member name="M:asd.Model.ForceToRelease">
            <summary>
            強制的に使用しているメモリを開放する。
            </summary>
            <remarks>
            何らかの理由でメモリが不足した場合に実行する。
            開放した後の動作の保証はしていないので、必ず参照が残っていないことを確認する必要がある。
            </remarks>
        </member>
        <member name="M:asd.Model.GetAnimationClip(System.Int32)">
            <summary>
            モデルが持つアニメーションクリップを取得する。
            </summary>
            <param name="index">アニメーションクリップのインデックス</param>
            <returns>アニメーションクリップ</returns>
        </member>
        <member name="M:asd.Model.GetMesh(System.Int32)">
            <summary>
            メッシュを取得する。
            </summary>
            <param name="index">メッシュのインデックス</param>
            <returns></returns>
        </member>
        <member name="P:asd.Model.MeshCount">
            <summary>
            モデルが持つメッシュの個数を取得する。
            </summary>
        </member>
        <member name="P:asd.Model.AnimationClipCount">
            <summary>
            モデルが持つアニメーションクリップの個数を取得する。
            </summary>
        </member>
        <member name="M:asd.Model.GetAnimationClipName(System.Int32)">
            <summary>
            モデルが持つアニメーションクリップの名称を取得する。 
            </summary>
            <param name="index">アニメーションクリップのインデックス </param>
            <returns>アニメーションクリップの名称 </returns>
        </member>
        <member name="T:asd.Shader2D">
            <summary>
            シェーダー(2D) 
            </summary>
        </member>
        <member name="M:asd.Shader2D.ForceToRelease">
            <summary>
            強制的に使用しているメモリを開放する。
            </summary>
            <remarks>
            何らかの理由でメモリが不足した場合に実行する。
            開放した後の動作の保証はしていないので、必ず参照が残っていないことを確認する必要がある。
            </remarks>
        </member>
        <member name="T:asd.Shader3D">
            <summary>
            シェーダー(3D) 
            </summary>
        </member>
        <member name="M:asd.Shader3D.ForceToRelease">
            <summary>
            強制的に使用しているメモリを開放する。
            </summary>
            <remarks>
            何らかの理由でメモリが不足した場合に実行する。
            開放した後の動作の保証はしていないので、必ず参照が残っていないことを確認する必要がある。
            </remarks>
        </member>
        <member name="T:asd.Terrain3D">
            <summary>
            地形のクラス
            </summary>
            <summary>
            地形のクラス 
            </summary>
        </member>
        <member name="M:asd.Terrain3D.ForceToRelease">
            <summary>
            強制的に使用しているメモリを開放する。
            </summary>
            <remarks>
            何らかの理由でメモリが不足した場合に実行する。
            開放した後の動作の保証はしていないので、必ず参照が残っていないことを確認する必要がある。
            </remarks>
        </member>
        <member name="M:asd.Terrain3D.SetMaterial(System.Int32,asd.Material3D)">
            <summary>
            材質を設定する。
            </summary>
            <param name="material">材質</param>
        </member>
        <member name="M:asd.Terrain3D.LoadFromMemory(System.Byte[])">
            <summary>
            メモリから地形のデータを読み込む。
            </summary>
            <param name="buffer">バッファ</param>
            <remarks>
            テクスチャのパスは保存されないので、読み込んだ後にAddSurfaceする必要がある。
            </remarks>
        </member>
        <member name="M:asd.Terrain3D.SaveToMemory">
            <summary>
            メモリに地形のデータを保存する。
            </summary>
            <returns>地形のデータ</returns>
        </member>
        <member name="M:asd.Terrain3D.Commit">
            <summary>
            マップに対する変更を適用してメッシュを生成する。 
            </summary>
            <returns></returns>
        </member>
        <member name="M:asd.Terrain3D.Fix">
            <summary>
            編集可能な情報を破棄して固定化する。 
            </summary>
        </member>
        <member name="M:asd.Terrain3D.ClearCollisions">
            <summary>
            衝突判定を削除する。 
            </summary>
        </member>
        <member name="M:asd.Terrain3D.New(System.Single,System.Int32,System.Int32)">
            <summary>
            新規に地形を作成する。 
            </summary>
            <param name="gridSize">グリッド1つ当たりの大きさ </param>
            <param name="gridWidthCount">横方向のグリッド数 </param>
            <param name="gridHeightCount">縦方向のグリッド数 </param>
        </member>
        <member name="M:asd.Terrain3D.AddSurface(System.String,System.Single,System.String,System.String,System.String)">
            <summary>
            素材を追加する。 
            </summary>
            <param name="name">素材名 </param>
            <param name="size">素材のテクスチャ1枚あたりの大きさ </param>
            <param name="color">色テクスチャのパス </param>
            <param name="normal">法線テクスチャのパス </param>
            <param name="metalness">スペキュラテクスチャのパス </param>
        </member>
        <member name="M:asd.Terrain3D.GetSurfaceIndex(System.String)">
            <summary>
            素材インデックスを取得する。 
            </summary>
            <param name="name">素材名 </param>
            <returns>素材インデックス </returns>
        </member>
        <member name="M:asd.Terrain3D.SetCliffTexture(asd.Texture2D,asd.Texture2D,asd.Texture2D)">
            <summary>
            崖のテクスチャを設定する。 
            </summary>
            <param name="diffuseTexture">色テクスチャ </param>
            <param name="normalTexture">法線テクスチャ </param>
            <param name="metalnessTexture">金属度テクスチャ </param>
        </member>
        <member name="M:asd.Terrain3D.AssignSurfaceWithCircle(System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            素材を円形に割り当てる。 
            </summary>
            <param name="surfaceIndex">素材インデックス </param>
            <param name="x">円形の中心座標 </param>
            <param name="y">円形の中心座標 </param>
            <param name="radius">円形の半径 </param>
            <param name="value">割り当てる値(-255～255) </param>
            <param name="fallout">周囲のぼかし(0～1) </param>
        </member>
        <member name="M:asd.Terrain3D.RaiseHeightWithCircle(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            円形に地形を上下させる。 
            </summary>
            <param name="x">円形の中心座標 </param>
            <param name="y">円形の中心座標 </param>
            <param name="radius">円形の半径 </param>
            <param name="value">値 </param>
            <param name="fallout">周囲のぼかし(0～1) </param>
        </member>
        <member name="M:asd.Terrain3D.ChangeHeightWithCircle(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            円形に地形を指定した高度に設定する。 
            </summary>
            <param name="x">円形の中心座標 </param>
            <param name="y">円形の中心座標 </param>
            <param name="radius">円形の半径 </param>
            <param name="value">高度 </param>
            <param name="fallout">周囲のぼかし(0～1) </param>
        </member>
        <member name="M:asd.Terrain3D.SmoothHeightWithCircle(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            円形に地形を平滑化させる。 
            </summary>
            <param name="x">円形の中心座標 </param>
            <param name="y">円形の中心座標 </param>
            <param name="radius">円形の半径 </param>
            <param name="value">平滑度(0～1) </param>
            <param name="fallout">周囲のぼかし(0～1) </param>
        </member>
        <member name="M:asd.Terrain3D.ChangeCliffesWithCircle(System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            円形に崖の生成を伴う地形の上下をさせる。 
            </summary>
            <param name="x">円形の中心座標 </param>
            <param name="y">円形の中心座標 </param>
            <param name="radius">円形の半径 </param>
            <param name="value">値 </param>
        </member>
        <member name="M:asd.Terrain3D.CastRay(asd.Vector3DF,asd.Vector3DF)">
            <summary>
            光線を飛ばし、衝突した位置を取得する。 
            </summary>
            <param name="from">光線を飛ばす元の位置 </param>
            <param name="to">光線を飛ばす先の位置 </param>
            <returns>光線が地形に衝突した位置。衝突しない場合、NaNを返す。 </returns>
        </member>
        <member name="T:asd.Texture2D">
            <summary>
            
            </summary>
        </member>
        <member name="M:asd.Texture2D.ForceToRelease">
            <summary>
            強制的に使用しているメモリを開放する。
            </summary>
            <remarks>
            何らかの理由でメモリが不足した場合に実行する。
            開放した後の動作の保証はしていないので、必ず参照が残っていないことを確認する必要がある。
            </remarks>
        </member>
        <member name="M:asd.Texture2D.Lock(asd.TextureLockInfomation)">
            <summary>
            テクスチャをロックし編集可能にする。
            </summary>
            <param name="info">テクスチャ情報</param>
            <returns>成否</returns>
        </member>
        <member name="P:asd.Texture2D.Size">
            <summary>
            テクスチャのサイズを取得する。
            </summary>
        </member>
        <member name="P:asd.Texture2D.Format">
            <summary>
            テクスチャのフォーマットを取得する。
            </summary>
        </member>
        <member name="P:asd.Texture2D.Type">
            <summary>
            テクスチャのクラスの種類を取得する。
            </summary>
        </member>
        <member name="M:asd.Texture2D.Save(System.String)">
            <summary>
            テクスチャをファイルに保存する。 
            </summary>
            <param name="path">出力先 </param>
            <returns>成否 </returns>
        </member>
        <member name="M:asd.Texture2D.Unlock">
            <summary>
            テクスチャをアンロックする。 
            </summary>
        </member>
        <member name="T:asd.Joystick">
            <summary>
            ジョイステイックのクラス 
            </summary>
        </member>
        <member name="M:asd.Joystick.#ctor(asd.swig.Joystick)">
            <summary>
            コンストラクタ
            </summary>
            <param name="js">ネイティブインタフェース</param>
        </member>
        <member name="P:asd.Joystick.JoystickName">
            <summary>
            ジョイスティックの名称を取得する。
            </summary>
        </member>
        <member name="P:asd.Joystick.JoystickType">
            <summary>
            ジョイスティックの種類を取得する。
            </summary>
        </member>
        <member name="P:asd.Joystick.ButtonsCount">
            <summary>
            
            </summary>
        </member>
        <member name="P:asd.Joystick.AxesCount">
            <summary>
            
            </summary>
        </member>
        <member name="M:asd.Joystick.GetButtonState(System.Int32)">
            <summary>
            指定したボタンの押し状態を返す 
            </summary>
            <param name="at">何番目のボタンの押し状態を取得するか </param>
            <returns>押し状態 </returns>
        </member>
        <member name="M:asd.Joystick.GetButtonStateAt(asd.JoystickButtonType)">
            <summary>
            特定のジョイステイックの場合(PS4)に指定したボタンの押し状態を取得する。 
            </summary>
            <param name="type">ボタンの種類 </param>
            <returns>押し状態 </returns>
        </member>
        <member name="M:asd.Joystick.GetAxisState(System.Int32)">
            <summary>
            指定した軸の倒し具合を返す 
            </summary>
            <param name="at">何番目の軸配列の倒し具合を取得するか </param>
            <returns>倒し具合 </returns>
        </member>
        <member name="M:asd.Joystick.GetAxisStateAt(asd.JoystickAxisType)">
            <summary>
            特定のジョイステイックの場合(PS4)に指定した指定した軸の倒し具合を取得する。 
            </summary>
            <param name="type">軸の種類 </param>
            <returns>倒し具合 </returns>
        </member>
        <member name="T:asd.JoystickContainer">
            <summary>
            
            </summary>
        </member>
        <member name="M:asd.JoystickContainer.#ctor(asd.swig.JoystickContainer)">
            <summary>
            コンストラクタ
            </summary>
            <param name="jc">ネイティブインタフェース</param>
        </member>
        <member name="M:asd.JoystickContainer.GetJoystickAt(System.Int32)">
            <summary>
            引数に指定した番号のジョイスティッククラスを返す。
            </summary>
            <param name="at">何番目のジョイスティッククラスを取得するか</param>
            <returns>該当するジョイスティッククラス</returns>
        </member>
        <member name="M:asd.JoystickContainer.GetIsPresentAt(System.Int32)">
            <summary>
            引数に指定した番号のジョイスティックが接続されているかを取得する。 
            </summary>
            <param name="at">何番目のジョイスティックの接続を確認するか </param>
            <returns>接続されているか否か </returns>
        </member>
        <member name="M:asd.JoystickContainer.RefreshAllJoysticks">
            <summary>
            全てのジョイスティックの接続状態を更新する。 
            </summary>
        </member>
        <member name="T:asd.Keyboard">
            <summary>
            キーボードからの入力を取得するクラス
            </summary>
            <summary>
            キーボードからの入力を取得するクラス 
            </summary>
        </member>
        <member name="M:asd.Keyboard.#ctor(asd.swig.Keyboard)">
            <summary>
            コンストラクタ
            </summary>
            <param name="kb">C++へのインタフェースクラス</param>
        </member>
        <member name="M:asd.Keyboard.GetKeyState(asd.Keys)">
            <summary>
            特定のキーの押し状態をKeyState列挙型で返す 
            </summary>
            <param name="key"></param>
            <returns>押し状態 </returns>
        </member>
        <member name="T:asd.MiddleButton">
            <summary>
            マウスの中ボタンの状態を扱うクラス
            </summary>
        </member>
        <member name="F:asd.MiddleButton.rotation">
            <summary>
            回転度合いを保持する変数
            </summary>
        </member>
        <member name="F:asd.MiddleButton.mouseButtonState">
            <summary>
            押下状態を保持する変数
            </summary>
        </member>
        <member name="M:asd.MiddleButton.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:asd.MiddleButton.SetState(asd.ButtonState,System.Single)">
            <summary>
            押し状態とホイール回転状態をセットする関数
            </summary>
            <param name="mbuttonstate">押し状態</param>
            <param name="rot">回転度合い</param>
        </member>
        <member name="P:asd.MiddleButton.WheelRotation">
            <summary>
            ホイールの回転度合いを返すプロパティ
            </summary>
        </member>
        <member name="P:asd.MiddleButton.ButtonState">
            <summary>
            ボタンの押し状態を返すプロパティ
            </summary>
        </member>
        <member name="T:asd.Mouse">
            <summary>
            マウスからの入力を取得するクラス
            </summary>
            <summary>
            マウスからの入力を取得するクラス 
            </summary>
        </member>
        <member name="M:asd.Mouse.#ctor(asd.swig.Mouse)">
            <summary>
            コンストラクタ
            </summary>
            <param name="m">ネイティブインタフェース</param>
        </member>
        <member name="P:asd.Mouse.LeftButton">
            <summary>
            左ボタンの状態を返すプロパティ
            </summary>
        </member>
        <member name="P:asd.Mouse.RightButton">
            <summary>
            右ボタンの状態を返すプロパティ
            </summary>
        </member>
        <member name="P:asd.Mouse.MiddleButton">
            <summary>
            中ボタンの状態を返すプロパティ
            </summary>
        </member>
        <member name="P:asd.Mouse.Position">
            <summary>
            マウスポインタの位置を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.Mouse.Wheel">
            <summary>
            ホイールの回転度合いを取得する。
            </summary>
        </member>
        <member name="M:asd.Mouse.GetButtonInputState(asd.MouseButtons)">
            <summary>
            指定したボタンの入力状態を取得を取得する。 
            </summary>
            <param name="mouseButton"></param>
            <returns></returns>
        </member>
        <member name="T:asd.SideButton">
            <summary>
            マウスの左右ボタンの状態を扱うクラス
            </summary>
        </member>
        <member name="F:asd.SideButton.mouseButtonState">
            <summary>
            押下状態を保持する変数
            </summary>
        </member>
        <member name="M:asd.SideButton.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:asd.SideButton.SetState(asd.ButtonState)">
            <summary>
            ボタンの押し状態をセットする関数
            </summary>
            <param name="mButtonState">押し状態</param>
        </member>
        <member name="P:asd.SideButton.ButtonState">
            <summary>
            ボタンの押し状態を返すプロパティ
            </summary>
        </member>
        <member name="T:asd.File">
            <summary>
            ファイルの操作に関する処理を提供するクラス 
            </summary>
        </member>
        <member name="M:asd.File.AddRootDirectory(System.String)">
            <summary>
            ファイル操作する時のルートのディレクトリを追加する。 
            </summary>
            <param name="path">ルートのディレクトリのパス </param>
        </member>
        <member name="M:asd.File.AddRootPackageWithPassword(System.String,System.String)">
            <summary>
            ファイル操作する時のルートのパスワード付パッケージを追加する。 
            </summary>
            <param name="path">パッケージのパス </param>
            <param name="password">パスワード </param>
        </member>
        <member name="M:asd.File.AddRootPackage(System.String)">
            <summary>
            ファイル操作する時のルートのパッケージを追加する。 
            </summary>
            <param name="path">パッケージのパス </param>
        </member>
        <member name="M:asd.File.ClearRootDirectories">
            <summary>
            追加されたパッケージを全て消去する。 
            </summary>
        </member>
        <member name="M:asd.File.Exists(System.String)">
            <summary>
            ファイルが存在するか取得する。 
            </summary>
            <param name="path">ファイルのパス </param>
            <returns>ファイルが存在するか? </returns>
        </member>
        <member name="T:asd.StaticFile">
            <summary>
            一括してファイルを読み込むクラス 
            </summary>
        </member>
        <member name="P:asd.StaticFile.IsReleased">
            <summary>
            
            </summary>
        </member>
        <member name="M:asd.StaticFile.ForceToRelease">
            <summary>
            強制的に使用しているメモリを開放する。
            </summary>
            <remarks>
            何らかの理由でメモリが不足した場合に実行する。
            開放した後の動作の保証はしていないので、必ず参照が残っていないことを確認する必要がある。
            </remarks>
        </member>
        <member name="P:asd.StaticFile.Buffer">
            <summary>
            読み込まれたバッファを取得する。
            </summary>
        </member>
        <member name="P:asd.StaticFile.FullPath">
            <summary>
            ファイルのパスを取得する。
            </summary>
        </member>
        <member name="P:asd.StaticFile.Data">
            <summary>
            読み込まれたバッファの先頭のポインタを取得する。
            </summary>
        </member>
        <member name="P:asd.StaticFile.Size">
            <summary>
            読み込まれたバッファのサイズを取得する。
            </summary>
        </member>
        <member name="P:asd.StaticFile.IsInPackage">
            <summary>
            パッケージ内からファイルが読み込まれているかを取得する。
            </summary>
        </member>
        <member name="P:asd.StaticFile.LoadState">
            <summary>
            ファイルの非同期読み込みの進捗を取得する。
            </summary>
        </member>
        <member name="T:asd.StreamFile">
            <summary>
            部分的にファイルを読み込むクラス 
            </summary>
        </member>
        <member name="P:asd.StreamFile.IsReleased">
            <summary>
            
            </summary>
        </member>
        <member name="M:asd.StreamFile.ForceToRelease">
            <summary>
            強制的に使用しているメモリを開放する。
            </summary>
            <remarks>
            何らかの理由でメモリが不足した場合に実行する。
            開放した後の動作の保証はしていないので、必ず参照が残っていないことを確認する必要がある。
            </remarks>
        </member>
        <member name="P:asd.StreamFile.Size">
            <summary>
            ファイルのサイズを取得する。
            </summary>
        </member>
        <member name="P:asd.StreamFile.CurrentPosition">
            <summary>
            ファイル内で現在読み込んでいる位置を取得する。
            </summary>
        </member>
        <member name="P:asd.StreamFile.TempBuffer">
            <summary>
            読み込まれた一時的なバッファの先頭のポインタを取得する。
            </summary>
        </member>
        <member name="P:asd.StreamFile.TempBufferSize">
            <summary>
            読み込まれた一時的なバッファのサイズを取得する。
            </summary>
        </member>
        <member name="M:asd.StreamFile.Read(System.Int32)">
            <summary>
            ファイルからデータを読み込み、一時的なバッファに格納する。 
            </summary>
            <param name="size">読み込むサイズ </param>
            <returns>読み込んだサイズ </returns>
        </member>
        <member name="T:asd.Log">
            <summary>
            テキスト形式でログを記録し、HTMLファイルに保存する機能を提供するクラス。
            </summary>
            <summary>
            
            </summary>
        </member>
        <member name="M:asd.Log.#ctor(asd.swig.Log)">
            <summary>
            Logクラスをインスタンス化します。
            </summary>
            <param name="log">ネイティブのラッパー</param>
        </member>
        <member name="P:asd.Log.IsValid">
            <summary>
            ログの出力が可能であるかどうかを表す真偽値を取得する。
            </summary>
        </member>
        <member name="P:asd.Log.OutputLevel">
            <summary>
            ログの出力レベルを設定する。
            </summary>
        </member>
        <member name="M:asd.Log.Write(System.String,asd.LogLevel)">
            <summary>
            ログ ファイルへ文字列を書き込む。 
            </summary>
            <param name="text">[in] 書き込む文字列 </param>
            <param name="level">[in] ログの出力レベル </param>
        </member>
        <member name="M:asd.Log.Write(System.String)">
            <summary>
            ログ ファイルへ文字列を書き込む。 
            </summary>
            <param name="text">[in] 書き込む文字列 </param>
        </member>
        <member name="M:asd.Log.WriteLine(System.String,asd.LogLevel)">
            <summary>
            ログ ファイルへ文字列を書き込み、改行する。 
            </summary>
            <param name="text">[in] 書き込む文字列 </param>
            <param name="level">[in] ログの出力レベル </param>
        </member>
        <member name="M:asd.Log.WriteLine(System.String)">
            <summary>
            ログ ファイルへ文字列を書き込み、改行する。 
            </summary>
            <param name="text">[in] 書き込む文字列 </param>
        </member>
        <member name="M:asd.Log.WriteStrongly(System.String,asd.LogLevel)">
            <summary>
            ログ ファイルへ強調された文字列を書き込む。 
            </summary>
            <param name="text">[in] 書き込む文字列 </param>
            <param name="level">[in] ログの出力レベル </param>
        </member>
        <member name="M:asd.Log.WriteStrongly(System.String)">
            <summary>
            ログ ファイルへ強調された文字列を書き込む。 
            </summary>
            <param name="text">[in] 書き込む文字列 </param>
        </member>
        <member name="M:asd.Log.WriteLineStrongly(System.String,asd.LogLevel)">
            <summary>
            ログ ファイルへ強調された文字列を書き込み、改行する。 
            </summary>
            <param name="text">[in] 書き込む文字列 </param>
            <param name="level">[in] ログの出力レベル </param>
        </member>
        <member name="M:asd.Log.WriteLineStrongly(System.String)">
            <summary>
            ログ ファイルへ強調された文字列を書き込み、改行する。 
            </summary>
            <param name="text">[in] 書き込む文字列 </param>
        </member>
        <member name="M:asd.Log.WriteHeading(System.String,asd.LogLevel)">
            <summary>
            ログ ファイルへ見出しとして文字列を書き込む。 
            </summary>
            <param name="text">[in] 書き込む文字列 </param>
            <param name="level">[in] ログの出力レベル </param>
        </member>
        <member name="M:asd.Log.WriteHeading(System.String)">
            <summary>
            ログ ファイルへ見出しとして文字列を書き込む。 
            </summary>
            <param name="text">[in] 書き込む文字列 </param>
        </member>
        <member name="M:asd.Log.WriteHorizontalRule(asd.LogLevel)">
            <summary>
            ログ ファイルへ水平線を書き込む。 
            </summary>
            <param name="level">[in] ログの出力レベル </param>
        </member>
        <member name="M:asd.Log.WriteHorizontalRule">
            <summary>
            ログ ファイルへ水平線を書き込む。 
            </summary>
        </member>
        <member name="M:asd.Log.BeginTable(asd.LogLevel)">
            <summary>
            ログ ファイルへ表形式( 
            </summary>
            <param name="level">[in] ログの出力レベル </param>
        </member>
        <member name="M:asd.Log.BeginTable">
            <summary>
            ログ ファイルへ表形式( 
            </summary>
        </member>
        <member name="M:asd.Log.EndTable(asd.LogLevel)">
            <summary>
            ログ ファイルへの表形式( 
            </summary>
            <param name="level">[in] ログの出力レベル </param>
        </member>
        <member name="M:asd.Log.EndTable">
            <summary>
            ログ ファイルへの表形式( 
            </summary>
        </member>
        <member name="M:asd.Log.ChangeRow(asd.LogLevel)">
            <summary>
            表形式での出力において、新しい行に移動する。 
            </summary>
            <param name="level">[in] ログの出力レベル </param>
        </member>
        <member name="M:asd.Log.ChangeRow">
            <summary>
            表形式での出力において、新しい行に移動する。 
            </summary>
        </member>
        <member name="M:asd.Log.ChangeColumn(asd.LogLevel)">
            <summary>
            表形式での出力において、新しい列に移動する。 
            </summary>
            <param name="level">[in] ログの出力レベル </param>
        </member>
        <member name="M:asd.Log.ChangeColumn">
            <summary>
            表形式での出力において、新しい列に移動する。 
            </summary>
        </member>
        <member name="T:asd.Matrix33">
            <summary>
            3×3行列を表す構造体
            </summary>
        </member>
        <member name="M:asd.Matrix33.SetIdentity">
            <summary>
            単位行列を設定する。
            </summary>
        </member>
        <member name="M:asd.Matrix33.SetTransposed">
            <summary>
            転置行列を設定する。
            </summary>
        </member>
        <member name="M:asd.Matrix33.SetInverted">
            <summary>
            逆行列を設定する。
            </summary>
        </member>
        <member name="M:asd.Matrix33.GetInverted">
            <summary>
            逆行列を取得する。
            </summary>
            <returns></returns>
        </member>
        <member name="M:asd.Matrix33.SetTranslation(System.Single,System.Single)">
            <summary>
            平行移動の行列を設定する。
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:asd.Matrix33.SetRotation(System.Single)">
            <summary>
            回転行列を設定する。
            </summary>
            <param name="angle"></param>
        </member>
        <member name="M:asd.Matrix33.SetScale(System.Single,System.Single)">
            <summary>
            拡大・縮小行列を設定する。
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:asd.Matrix33.Transform2D(asd.Vector2DF)">
            <summary>
            行列でベクトルを変形させる。
            </summary>
            <param name="in_">変形前ベクトル</param>
            <returns>変形後ベクトル</returns>
        </member>
        <member name="M:asd.Matrix33.Transform3D(asd.Vector3DF)">
            <summary>
            行列でベクトルを変形させる。
            </summary>
            <param name="in_">変形前ベクトル</param>
            <returns>変形後ベクトル</returns>
        </member>
        <member name="T:asd.Matrix44">
            <summary>
            4×4行列を表す構造体
            </summary>
        </member>
        <member name="M:asd.Matrix44.SetIdentity">
            <summary>
            単位行列を設定する。
            </summary>
        </member>
        <member name="M:asd.Matrix44.SetTransposed">
            <summary>
            転置行列を設定する。
            </summary>
        </member>
        <member name="M:asd.Matrix44.SetInverted">
            <summary>
            逆行列を設定する。
            </summary>
        </member>
        <member name="M:asd.Matrix44.GetInverted">
            <summary>
            逆行列を取得する。
            </summary>
            <returns></returns>
        </member>
        <member name="M:asd.Matrix44.SetLookAtRH(asd.Vector3DF,asd.Vector3DF,asd.Vector3DF)">
            <summary>
            カメラ行列(右手系)を設定する。
            </summary>
            <param name="eye">カメラの位置</param>
            <param name="at">カメラの注視点</param>
            <param name="up">カメラの上方向</param>
        </member>
        <member name="M:asd.Matrix44.SetLookAtLH(asd.Vector3DF,asd.Vector3DF,asd.Vector3DF)">
            <summary>
            カメラ行列(左手系)を設定する。
            </summary>
            <param name="eye">カメラの位置</param>
            <param name="at">カメラの注視点</param>
            <param name="up">カメラの上方向</param>
        </member>
        <member name="M:asd.Matrix44.SetPerspectiveFovRH(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            射影行列(右手系)を設定する。
            </summary>
            <param name="ovY">Y方向への視野角(ラジアン)</param>
            <param name="aspect">画面のアスペクト比</param>
            <param name="zn">最近距離</param>
            <param name="zf">最遠距離</param>
        </member>
        <member name="M:asd.Matrix44.SetPerspectiveFovRH_OpenGL(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            OpenGL用射影行列(右手系)を設定する。
            </summary>
            <param name="ovY">Y方向への視野角(ラジアン)</param>
            <param name="aspect">画面のアスペクト比</param>
            <param name="zn">最近距離</param>
            <param name="zf">最遠距離</param>
        </member>
        <member name="M:asd.Matrix44.SetPerspectiveFovLH(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            射影行列(左手系)を設定する。
            </summary>
            <param name="ovY">Y方向への視野角(ラジアン)</param>
            <param name="aspect">画面のアスペクト比</param>
            <param name="zn">最近距離</param>
            <param name="zf">最遠距離</param>
        </member>
        <member name="M:asd.Matrix44.SetOrthographicRH(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            正射影行列(右手系)を設定する。
            </summary>
            <param name="width">横幅</param>
            <param name="height">縦幅</param>
            <param name="zn">最近距離</param>
            <param name="zf">最遠距離</param>
        </member>
        <member name="M:asd.Matrix44.SetOrthographicLH(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            正射影行列(左手系)を設定する。
            </summary>
            <param name="width">横幅</param>
            <param name="height">縦幅</param>
            <param name="zn">最近距離</param>
            <param name="zf">最遠距離</param>
        </member>
        <member name="M:asd.Matrix44.SetTranslation(System.Single,System.Single,System.Single)">
            <summary>
            並行移動行列を設定する。
            </summary>
            <param name="x">X方向移動量</param>
            <param name="y">Y方向移動量</param>
            <param name="z">Z方向移動量</param>
        </member>
        <member name="M:asd.Matrix44.SetRotationX(System.Single)">
            <summary>
            X軸回転行列(右手)を設定する。
            </summary>
            <param name="angle">X軸回転量(ラジアン)</param>
        </member>
        <member name="M:asd.Matrix44.SetRotationY(System.Single)">
            <summary>
            Y軸回転行列(右手)を設定する。
            </summary>
            <param name="angle">Y軸回転量(ラジアン)</param>
        </member>
        <member name="M:asd.Matrix44.SetRotationZ(System.Single)">
            <summary>
            Z軸回転行列(右手)を設定する。
            </summary>
            <param name="angle">Z軸回転量(ラジアン)</param>
        </member>
        <member name="M:asd.Matrix44.SetRotationAxis(asd.Vector3DF@,System.Single)">
            <summary>
            任意軸の反時計回転行列(右手)を設定する。
            </summary>
            <param name="axis">軸</param>
            <param name="angle">回転量(ラジアン)</param>
        </member>
        <member name="M:asd.Matrix44.SetQuaternion(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            クオータニオンを元に回転行列(右手)を設定する。
            </summary>
            <param name="x">クオータニオン</param>
            <param name="y">クオータニオン</param>
            <param name="z">クオータニオン</param>
            <param name="w">クオータニオン</param>
        </member>
        <member name="M:asd.Matrix44.SetScale(System.Single,System.Single,System.Single)">
            <summary>
            拡大行列を設定する。
            </summary>
            <param name="x">X方向拡大率</param>
            <param name="y">Y方向拡大率</param>
            <param name="z">Z方向拡大率</param>
        </member>
        <member name="M:asd.Matrix44.Transform3D(asd.Vector3DF)">
            <summary>
            行列でベクトルを変形させる。
            </summary>
            <param name="in_">変形前ベクトル</param>
            <returns>変形後ベクトル</returns>
        </member>
        <member name="M:asd.Matrix44.Transform4D(asd.Vector4DF)">
            <summary>
            行列でベクトルを変形させる。
            </summary>
            <param name="in_">変形前ベクトル</param>
            <returns>変形後ベクトル</returns>
        </member>
        <member name="M:asd.Matrix44.Mul(asd.Matrix44@,asd.Matrix44@,asd.Matrix44@)">
            <summary>
            乗算を行う。
            </summary>
            <param name="o">出力先</param>
            <param name="in1">行列1</param>
            <param name="in2">行列2</param>
        </member>
        <member name="T:asd.RectF">
            <summary>
            長方形(浮動小数点)の構造体
            </summary>
        </member>
        <member name="F:asd.RectF.X">
            <summary>
            左上X座標
            </summary>
        </member>
        <member name="F:asd.RectF.Y">
            <summary>
            左上Y座標
            </summary>
        </member>
        <member name="F:asd.RectF.Width">
            <summary>
            横幅
            </summary>
        </member>
        <member name="F:asd.RectF.Height">
            <summary>
            縦幅
            </summary>
        </member>
        <member name="M:asd.RectF.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            コンストラクタ
            </summary>
            <param name="x">左上X座標</param>
            <param name="y">左上Y座標</param>
            <param name="width">横幅</param>
            <param name="height">縦幅</param>
        </member>
        <member name="M:asd.RectF.#ctor(asd.Vector2DF,asd.Vector2DF)">
            <summary>
            コンストラクタ
            </summary>
            <param name="position">左上座標</param>
            <param name="size">大きさ</param>
        </member>
        <member name="P:asd.RectF.Position">
            <summary>
            左上座標を取得する。
            </summary>
        </member>
        <member name="P:asd.RectF.Size">
            <summary>
            大きさを取得する。
            </summary>
        </member>
        <member name="P:asd.RectF.Vertexes">
            <summary>
            四隅の座標を(X,Y)、(X+Width,Y)、(X+Width,Y+Height)、(X,Y+Height)の順に配列として取得する。
            </summary>
        </member>
        <member name="M:asd.RectF.ToI">
            <summary>
            RectI型に変換する。
            </summary>
            <returns>RectI型</returns>
        </member>
        <member name="T:asd.RectI">
            <summary>
            長方形(整数)の構造体
            </summary>
        </member>
        <member name="F:asd.RectI.X">
            <summary>
            左上X座標
            </summary>
        </member>
        <member name="F:asd.RectI.Y">
            <summary>
            左上Y座標
            </summary>
        </member>
        <member name="F:asd.RectI.Width">
            <summary>
            横幅
            </summary>
        </member>
        <member name="F:asd.RectI.Height">
            <summary>
            縦幅
            </summary>
        </member>
        <member name="M:asd.RectI.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            コンストラクタ
            </summary>
            <param name="x">左上X座標</param>
            <param name="y">左上Y座標</param>
            <param name="width">横幅</param>
            <param name="height">縦幅</param>
        </member>
        <member name="M:asd.RectI.#ctor(asd.Vector2DI,asd.Vector2DI)">
            <summary>
            コンストラクタ
            </summary>
            <param name="position">左上座標</param>
            <param name="size">大きさ</param>
        </member>
        <member name="P:asd.RectI.Position">
            <summary>
            左上座標を取得する。
            </summary>
        </member>
        <member name="P:asd.RectI.Size">
            <summary>
            大きさを取得する。
            </summary>
        </member>
        <member name="P:asd.RectI.Vertexes">
            <summary>
            四隅の座標を(X,Y)、(X+Width,Y)、(X+Width,Y+Height)、(X,Y+Height)の順に配列として取得する。
            </summary>
        </member>
        <member name="M:asd.RectI.ToF">
            <summary>
            RectF型に変換する。
            </summary>
            <returns>RectF型</returns>
        </member>
        <member name="T:asd.Vector2DF">
            <summary>
            2次元ベクトル
            </summary>
        </member>
        <member name="M:asd.Vector2DF.#ctor(System.Single,System.Single)">
            <summary>
            コンストラクタ
            </summary>
            <param name="x">X成分</param>
            <param name="y">Y成分</param>
        </member>
        <member name="F:asd.Vector2DF.X">
            <summary>
            X成分
            </summary>
        </member>
        <member name="F:asd.Vector2DF.Y">
            <summary>
            Y成分
            </summary>
        </member>
        <member name="P:asd.Vector2DF.Length">
            <summary>
            ベクトルの長さを取得または設定する。
            </summary>
        </member>
        <member name="P:asd.Vector2DF.SquaredLength">
            <summary>
            ベクトルの長さの二乗を取得する。
            </summary>
        </member>
        <member name="P:asd.Vector2DF.Normal">
            <summary>
            このベクトルの単位ベクトルを取得する。
            </summary>
        </member>
        <member name="M:asd.Vector2DF.Normalize">
            <summary>
            このベクトルを単位ベクトル化する。
            </summary>
        </member>
        <member name="P:asd.Vector2DF.Radian">
            <summary>
            ベクトルの向きを弧度法で取得または設定する。
            </summary>
        </member>
        <member name="P:asd.Vector2DF.Degree">
            <summary>
            ベクトルの向きを度数法で取得または設定する。
            </summary>
        </member>
        <member name="M:asd.Vector2DF.To2DI">
            <summary>
            Vector2DI型に変換する。
            </summary>
            <returns>Vector2DI型</returns>
        </member>
        <member name="M:asd.Vector2DF.Cross(asd.Vector2DF,asd.Vector2DF)">
            <summary>
            外積を取得する。
            </summary>
            <param name="v1">v1ベクトル</param>
            <param name="v2">v2ベクトル</param>
            <returns>外積v1×v2</returns>
        </member>
        <member name="M:asd.Vector2DF.Dot(asd.Vector2DF,asd.Vector2DF)">
            <summary>
            内積を取得する。
            </summary>
            <param name="v1">v1ベクトル</param>
            <param name="v2">v2ベクトル</param>
            <returns>内積v1・v2</returns>
        </member>
        <member name="M:asd.Vector2DF.Distance(asd.Vector2DF,asd.Vector2DF)">
            <summary>
            2点間の距離を取得する。
            </summary>
            <param name="v1">v1ベクトル</param>
            <param name="v2">v2ベクトル</param>
            <returns>距離</returns>
        </member>
        <member name="M:asd.Vector2DF.Add(asd.Vector2DF,asd.Vector2DF)">
            <summary>
            加算する。
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:asd.Vector2DF.Subtract(asd.Vector2DF,asd.Vector2DF)">
            <summary>
            減算する。
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:asd.Vector2DF.Divide(asd.Vector2DF,asd.Vector2DF)">
            <summary>
            除算する。
            </summary>
            <param name="v1">値1</param>
            <param name="v2">値2</param>
            <returns>v1/v2</returns>
        </member>
        <member name="M:asd.Vector2DF.DivideByScalar(asd.Vector2DF,System.Single)">
            <summary>
            スカラーで除算する。
            </summary>
            <param name="v1">値1</param>
            <param name="v2">値2</param>
            <returns>v1/v2</returns>
        </member>
        <member name="T:asd.Vector2DI">
            <summary>
            2次元ベクトル(整数)
            </summary>
        </member>
        <member name="F:asd.Vector2DI.X">
            <summary>
            X
            </summary>
        </member>
        <member name="F:asd.Vector2DI.Y">
            <summary>
            Y
            </summary>
        </member>
        <member name="M:asd.Vector2DI.#ctor(System.Int32,System.Int32)">
            <summary>
            コンストラクタ
            </summary>
            <param name="x">X</param>
            <param name="y">Y</param>
        </member>
        <member name="M:asd.Vector2DI.To2DF">
            <summary>
            Vector2DF型に変換する。
            </summary>
            <returns>Vector2DF型</returns>
        </member>
        <member name="M:asd.Vector2DI.DivideByScalar(asd.Vector2DI,System.Single)">
            <summary>
            スカラーで除算する。
            </summary>
            <param name="v1">値1</param>
            <param name="v2">値2</param>
            <returns>v1/v2</returns>
        </member>
        <member name="T:asd.Vector3DF">
            <summary>
            3次元ベクトル
            </summary>
        </member>
        <member name="F:asd.Vector3DF.X">
            <summary>
            X成分
            </summary>
        </member>
        <member name="F:asd.Vector3DF.Y">
            <summary>
            Y成分
            </summary>
        </member>
        <member name="F:asd.Vector3DF.Z">
            <summary>
            Z成分
            </summary>
        </member>
        <member name="M:asd.Vector3DF.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            コンストラクタ
            </summary>
            <param name="x">X成分</param>
            <param name="y">Y成分</param>
            <param name="z">Z成分</param>
        </member>
        <member name="P:asd.Vector3DF.Length">
            <summary>
            ベクトルの長さを取得または設定する。
            </summary>
        </member>
        <member name="P:asd.Vector3DF.SquaredLength">
            <summary>
            ベクトルの長さの二乗を取得する。
            </summary>
        </member>
        <member name="P:asd.Vector3DF.Normal">
            <summary>
            このベクトルの単位ベクトルを取得する。
            </summary>
        </member>
        <member name="M:asd.Vector3DF.Normalize">
            <summary>
            このベクトルを単位ベクトル化する。
            </summary>
        </member>
        <member name="M:asd.Vector3DF.Dot(asd.Vector3DF,asd.Vector3DF)">
            <summary>
            内積を取得する。
            </summary>
            <param name="v1">v1ベクトル</param>
            <param name="v2">v2ベクトル</param>
            <returns>内積v1・v2</returns>
        </member>
        <member name="M:asd.Vector3DF.Cross(asd.Vector3DF,asd.Vector3DF)">
            <summary>
            外積を取得する。
            </summary>
            <param name="v1">v1ベクトル</param>
            <param name="v2">v2ベクトル</param>
            <returns>外積v1×v2</returns>
            <remarks>
            右手の親指がv1、人差し指がv2としたとき、中指の方向を返す。
            </remarks>
        </member>
        <member name="M:asd.Vector3DF.Add(asd.Vector3DF,asd.Vector3DF)">
            <summary>
            加算する。
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:asd.Vector3DF.Subtract(asd.Vector3DF,asd.Vector3DF)">
            <summary>
            減算する。
            </summary>
            <param name="v1"></param>
            <param name="v2"></param>
            <returns></returns>
        </member>
        <member name="M:asd.Vector3DF.Divide(asd.Vector3DF,asd.Vector3DF)">
            <summary>
            除算する。
            </summary>
            <param name="v1">値1</param>
            <param name="v2">値2</param>
            <returns>v1/v2</returns>
        </member>
        <member name="M:asd.Vector3DF.DivideByScalar(asd.Vector3DF,System.Single)">
            <summary>
            スカラーで除算する。
            </summary>
            <param name="v1">値1</param>
            <param name="v2">値2</param>
            <returns>v1/v2</returns>
        </member>
        <member name="M:asd.Vector3DF.Distance(asd.Vector3DF,asd.Vector3DF)">
            <summary>
            2点間の距離を取得する。
            </summary>
            <param name="v1">v1ベクトル</param>
            <param name="v2">v2ベクトル</param>
            <returns>v1とv2の距離</returns>
        </member>
        <member name="T:asd.Vector4DF">
            <summary>
            4次元ベクトル
            </summary>
        </member>
        <member name="F:asd.Vector4DF.X">
            <summary>
            X成分
            </summary>
        </member>
        <member name="F:asd.Vector4DF.Y">
            <summary>
            Y成分
            </summary>
        </member>
        <member name="F:asd.Vector4DF.Z">
            <summary>
            Z成分
            </summary>
        </member>
        <member name="F:asd.Vector4DF.W">
            <summary>
            W成分
            </summary>
        </member>
        <member name="M:asd.Vector4DF.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            コンストラクタ
            </summary>
            <param name="x">X成分</param>
            <param name="y">Y成分</param>
            <param name="z">Z成分</param>
            <param name="w">W成分</param>
        </member>
        <member name="P:asd.Vector4DF.Length">
            <summary>
            ベクトルの長さを取得または設定する。
            </summary>
        </member>
        <member name="P:asd.Vector4DF.SquaredLength">
            <summary>
            ベクトルの長さの二乗を取得する。
            </summary>
        </member>
        <member name="P:asd.Vector4DF.Normal">
            <summary>
            このベクトルの単位ベクトルを取得する。
            </summary>
        </member>
        <member name="M:asd.Vector4DF.Normalize">
            <summary>
            このベクトルを単位ベクトル化する。
            </summary>
        </member>
        <member name="M:asd.Vector4DF.Dot(asd.Vector4DF,asd.Vector4DF)">
            <summary>
            外積を取得する。
            </summary>
            <param name="v1">v1ベクトル</param>
            <param name="v2">v2ベクトル</param>
            <returns>外積v1×v2</returns>
        </member>
        <member name="M:asd.Vector4DF.Distance(asd.Vector4DF,asd.Vector4DF)">
            <summary>
            2点間の距離を取得する。
            </summary>
            <param name="v1">v1ベクトル</param>
            <param name="v2">v2ベクトル</param>
            <returns>v1とv2の距離</returns>
        </member>
        <member name="T:asd.CameraObject2D">
            <summary>
            2Dレイヤーの一部を描画するためのカメラ
            </summary>
        </member>
        <member name="P:asd.CameraObject2D.DrawingPriority">
            <summary>
            この2Dオブジェクトを描画する際の描画優先度を取得または設定する。描画優先度が高いほど手前に描画される。
            </summary>
        </member>
        <member name="P:asd.CameraObject2D.Src">
            <summary>
            描画元の領域を取得、または設定する。
            </summary>
        </member>
        <member name="P:asd.CameraObject2D.Dst">
            <summary>
            描画先の領域を取得、または設定する。
            </summary>
        </member>
        <member name="P:asd.CameraObject2D.IsOffsecreenMode">
            <summary>
            画面に描画せずにテクスチャに描画するか、を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.CameraObject2D.Texture">
            <summary>
            カメラが描画した結果をテクスチャとして取得する。
            </summary>
        </member>
        <member name="P:asd.CameraObject2D.TextureFilterType">
            <summary>
             カメラが描画した結果を描画する際のテクスチャフィルタを取得または設定する。
             </summary>
        </member>
        <member name="M:asd.CameraObject2D.ForceToRelease">
            <summary>
            強制的に使用しているメモリを開放する。
            </summary>
            <remarks>
            何らかの理由でメモリが不足した場合に実行する。
            開放した後の動作の保証はしていないので、必ず参照が残っていないことを確認する必要がある。
            </remarks>
        </member>
        <member name="T:asd.DrawnObject2D">
            <summary>
            描画に関するパラメータを持つ2Dオブジェクト。
            </summary>
        </member>
        <member name="P:asd.DrawnObject2D.Color">
            <summary>
            この2Dオブジェクトを描画する際に合成する色を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.DrawnObject2D.DrawingPriority">
            <summary>
            この2Dオブジェクトを描画する際の描画優先度を取得または設定する。描画優先度が高いほど手前に描画される。
            </summary>
        </member>
        <member name="P:asd.DrawnObject2D.AbsoluteColor">
            <summary>
            親子関係を考慮して最終的に描画時にこのオブジェクトに合成する色を取得する。
            </summary>
        </member>
        <member name="P:asd.DrawnObject2D.AbsoluteDrawingPriority">
            <summary>
            親子関係を考慮したこのオブジェクトの最終的な描画優先度を取得する。
            </summary>
        </member>
        <member name="M:asd.DrawnObject2D.AddDrawnChild(asd.DrawnObject2D,asd.ChildManagementMode,asd.ChildTransformingMode,asd.ChildDrawingMode)">
            <summary>
            描画に関する同期設定を指定して、指定した2Dオブジェクトを子オブジェクトとしてこのインスタンスに追加する。
            </summary>
            <param name="child">追加する子オブジェクト</param>
            <param name="managementMode">子オブジェクトの管理に関する同期設定。フラグをOR演算でつなげて複数指定することができる。</param>
            <param name="transformingMode">子オブジェクトの変形に関する同期設定。</param>
            <param name="drawingMode">子オブジェクトの描画に関する同期設定。フラグをOR演算でつなげて複数指定することができる。</param>
        </member>
        <member name="P:asd.EffectObject2D.Effect">
            <summary>
            描画に使用するエフェクトを取得、または設定する。
            </summary>
        </member>
        <member name="M:asd.EffectObject2D.Play">
            <summary>
            設定されている全てのエフェクトを再生する。
            </summary>
            <returns>再生されたエフェクトのID</returns>
        </member>
        <member name="M:asd.EffectObject2D.Stop">
            <summary>
            このオブジェクトから再生されたエフェクトを全て停止する。
            </summary>
        </member>
        <member name="M:asd.EffectObject2D.StopRoot">
            <summary>
            このオブジェクトから再生されたエフェクトのルートを全て停止する。
            </summary>
        </member>
        <member name="M:asd.EffectObject2D.Show">
            <summary>
            このオブジェクトから再生されたエフェクトを表示状態にする。
            </summary>
        </member>
        <member name="M:asd.EffectObject2D.Hide">
            <summary>
            このオブジェクトから再生されたエフェクトを非表示状態にする。
            </summary>
        </member>
        <member name="P:asd.EffectObject2D.IsPlaying">
            <summary>
            このオブジェクトから再生されたエフェクトが再生中か取得する。
            </summary>
            <returns>再生中か?</returns>
        </member>
        <member name="P:asd.EffectObject2D.SyncEffects">
            <summary>
            このオブジェクトから再生されたエフェクトをオブジェクトに合わせて移動させるか取得、または設定する。
            </summary>
        </member>
        <member name="P:asd.EffectObject2D.EffectRotationX">
            <summary>
            このオブジェクトから再生されるエフェクトの角度(X軸)を指定する。
            </summary>
            <remarks>
            エフェクトの形状が画面に垂直な方向に長い場合、2D表示では予期せぬ見た目で表示されることがある。
            この時、X軸を中心にエフェクトを回転することで、違和感のない表示をできるようにする。
            </remarks>
        </member>
        <member name="P:asd.EffectObject2D.EffectRotationY">
            <summary>
            このオブジェクトから再生されるエフェクトの角度(Y軸)を指定する。
            </summary>
            <remarks>
            エフェクトの形状が画面に垂直な方向に長い場合、2D表示では予期せぬ見た目で表示されることがある。
            この時、Y軸を中心にエフェクトを回転することで、違和感のない表示をできるようにする。
            </remarks>
        </member>
        <member name="P:asd.EffectObject2D.EffectRotation">
            <summary>
            このオブジェクトから再生されるエフェクトの向き(度)を指定する。
            </summary>
            <remarks>
            2D表示だとエフェクトが画面に対して前後に表示されるように作成されていた場合、予期せぬ見た目で表示されてしまうことがある。
            そのため、Y軸を中心にエフェクトを回転させ2Dとして違和感のない表示ができるようにする。
            互換性のために残されている。
            </remarks>
        </member>
        <member name="P:asd.EffectObject2D.DrawingPriority">
            <summary>
            この2Dオブジェクトを描画する際の描画優先度を取得または設定する。描画優先度が高いほど手前に描画される。
            </summary>
        </member>
        <member name="M:asd.EffectObject2D.ForceToRelease">
            <summary>
            強制的に使用しているメモリを開放する。
            </summary>
            <remarks>
            何らかの理由でメモリが不足した場合に実行する。
            開放した後の動作の保証はしていないので、必ず参照が残っていないことを確認する必要がある。
            </remarks>
        </member>
        <member name="T:asd.GeometryObject2D">
            <summary>
            図形の描画を扱うクラス。
            </summary>
        </member>
        <member name="M:asd.GeometryObject2D.#ctor">
            <summary>
            asd.GeometryObject2D の新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:asd.GeometryObject2D.ForceToRelease">
            <summary>
            強制的に使用しているメモリを開放する。
            </summary>
            <remarks>
            何らかの理由でメモリが不足した場合に実行する。
            開放した後の動作の保証はしていないので、必ず参照が残っていないことを確認する必要がある。
            </remarks>
        </member>
        <member name="P:asd.GeometryObject2D.Shape">
            <summary>
            この2Dオブジェクトの描画に使用する図形を取得または設定します。
            </summary>
        </member>
        <member name="P:asd.GeometryObject2D.Texture">
            <summary>
            この2Dオブジェクトの描画に使用するテクスチャを取得または設定します。
            </summary>
        </member>
        <member name="P:asd.GeometryObject2D.CenterPosition">
            <summary>
            この2Dオブジェクトを描画する際の描画原点を取得または設定します。描画原点は拡大・回転・描画の中心となる、画像データ内での座標です。
            </summary>
        </member>
        <member name="P:asd.GeometryObject2D.Color">
            <summary>
            この2Dオブジェクトを描画する際に合成する色を取得または設定します。
            </summary>
        </member>
        <member name="P:asd.GeometryObject2D.DrawingPriority">
            <summary>
            この2Dオブジェクトを描画する際の描画優先度を取得または設定します。描画優先度が高いほど手前に描画されます。
            </summary>
        </member>
        <member name="P:asd.GeometryObject2D.AlphaBlend">
            <summary>
            この2Dオブジェクトを描画する際のブレンドモードを取得または設定します。
            </summary>
        </member>
        <member name="P:asd.GeometryObject2D.TextureFilterType">
            <summary>
             この2Dオブジェクトを描画する際のテクスチャフィルタを取得または設定する。
             </summary>
        </member>
        <member name="T:asd.MapObject2D">
            <summary>
            テクスチャをチップとして高速に描画するクラス。
            </summary>
        </member>
        <member name="M:asd.MapObject2D.ForceToRelease">
            <summary>
            強制的に使用しているメモリを開放する。
            </summary>
            <remarks>
            何らかの理由でメモリが不足した場合に実行する。
            開放した後の動作の保証はしていないので、必ず参照が残っていないことを確認する必要がある。
            </remarks>
        </member>
        <member name="P:asd.MapObject2D.CenterPosition">
            <summary>
            この2Dオブジェクトを描画する際の描画原点を取得または設定する。描画原点は拡大・回転・描画の中心となる、画像データ内での座標。
            </summary>
        </member>
        <member name="P:asd.MapObject2D.DrawingPriority">
            <summary>
            この2Dオブジェクトを描画する際の描画優先度を取得または設定する。描画優先度が高いほど手前に描画される。
            </summary>
        </member>
        <member name="M:asd.MapObject2D.AddChip(asd.Chip2D)">
            <summary>
            この2Dオブジェクトにチップを追加する。
            </summary>
        </member>
        <member name="P:asd.MapObject2D.Chips">
            <summary>
            このオブジェクトが保有しているチップを全て取得する。
            </summary>
            <returns></returns>
        </member>
        <member name="M:asd.MapObject2D.RemoveChip(asd.Chip2D)">
            <summary>
            この2Dオブジェクトからチップを削除する。
            </summary>
        </member>
        <member name="M:asd.MapObject2D.Clear">
            <summary>
            この2Dオブジェクトに追加されている全てのチップを削除する。
            </summary>
        </member>
        <member name="T:asd.TextObject2D">
            <summary>
            文字列の描画を扱うクラス。
            </summary>
        </member>
        <member name="M:asd.TextObject2D.ForceToRelease">
            <summary>
            強制的に使用しているメモリを開放する。
            </summary>
            <remarks>
            何らかの理由でメモリが不足した場合に実行する。
            開放した後の動作の保証はしていないので、必ず参照が残っていないことを確認する必要がある。
            </remarks>
        </member>
        <member name="P:asd.TextObject2D.Font">
            <summary>
            この2Dオブジェクトの描画に使用するフォントを取得または設定する。
            </summary>
        </member>
        <member name="P:asd.TextObject2D.Text">
            <summary>
            描画する文字列を取得または設定する。
            </summary>
            <returns></returns>
        </member>
        <member name="P:asd.TextObject2D.WritingDirection">
            <summary>
            文字列の描画方向を指定する。
            </summary>
            <returns></returns>
        </member>
        <member name="P:asd.TextObject2D.LetterSpacing">
            <summary>
            テキストを描画する際の文字間値を取得または設定する。
            </summary>
            <returns></returns>
        </member>
        <member name="P:asd.TextObject2D.LineSpacing">
            <summary>
            テキストを描画する際の行間値を取得または設定する。
            </summary>
            <returns></returns>
        </member>
        <member name="P:asd.TextObject2D.CenterPosition">
            <summary>
            この2Dオブジェクトを描画する際の描画原点を取得または設定する。描画原点は拡大・回転・描画の中心となる、画像データ内での座標。
            </summary>
        </member>
        <member name="P:asd.TextObject2D.Color">
            <summary>
            この2Dオブジェクトを描画する際に合成する色を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.TextObject2D.TurnLR">
            <summary>
            この2Dオブジェクトを描画する際に左右反転するかどうかの真偽値を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.TextObject2D.TurnUL">
            <summary>
            この2Dオブジェクトを描画する際に上下反転するかどうかの真偽値を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.TextObject2D.DrawingPriority">
            <summary>
            この2Dオブジェクトを描画する際の描画優先度を取得または設定する。描画優先度が高いほど手前に描画される。
            </summary>
        </member>
        <member name="P:asd.TextObject2D.AlphaBlend">
            <summary>
            この2Dオブジェクトを描画する際のブレンドモードを取得または設定する。
            </summary>
        </member>
        <member name="P:asd.TextObject2D.TextureFilterType">
            <summary>
             この2Dオブジェクトを描画する際のテクスチャフィルタを取得または設定する。
             </summary>
        </member>
        <member name="P:asd.TextObject2D.Material">
            <summary>
            このオブジェクトを描画する際に使用されるマテリアルを取得、または設定する。
            </summary>
        </member>
        <member name="P:asd.TextObject2D.IsRichTextMode">
            <summary>
            文字の色等を変更できるモードか、取得、または設定する。
            </summary>
        </member>
        <member name="T:asd.CameraObject3D">
            <summary>
            カメラの機能を提供するクラス
            </summary>
        </member>
        <member name="P:asd.CameraObject3D.HDRMode">
            <summary>
            描画先がHDRかどうか、取得、または設定する。
            </summary>
        </member>
        <member name="P:asd.CameraObject3D.WindowSize">
            <summary>
            画面サイズを取得または設定する。
            </summary>
        </member>
        <member name="P:asd.CameraObject3D.Focus">
            <summary>
            カメラが見る座標を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.CameraObject3D.FieldOfView">
            <summary>
            画角を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.CameraObject3D.ZFar">
            <summary>
            描画する最遠距離を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.CameraObject3D.ZNear">
            <summary>
            描画する最近距離を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.CameraObject3D.ProjectionMatrixDirectly">
            <summary>
            プロジェクション行列を直接取得または設定する。
            </summary>
            <remarks>
            この値を直接設定した場合、プロジェクション行列に関わるパラメーターは無効化される。
            </remarks>
        </member>
        <member name="M:asd.CameraObject3D.AddPostEffect(asd.PostEffect)">
            <summary>
            ポストエフェクトを追加する。
            </summary>
            <param name="postEffect">ポストエフェクト</param>
        </member>
        <member name="M:asd.CameraObject3D.ClearPostEffects">
            <summary>
            ポストエフェクトを全て消去する。
            </summary>
        </member>
        <member name="T:asd.DirectionalLightObject3D">
            <summary>
            無限遠光源の機能を提供するクラス
            </summary>
        </member>
        <member name="P:asd.DirectionalLightObject3D.Color">
            <summary>
            光源の色を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.DirectionalLightObject3D.Intensity">
            <summary>
            光源の強さを取得または設定する。
            </summary>
            <remarks>
            デフォルトは1.0である。
            </remarks>
        </member>
        <member name="T:asd.EffectObject3D">
            <summary>
            エフェクトの機能を提供するクラス
            </summary>
        </member>
        <member name="M:asd.EffectObject3D.SetEffect(asd.Effect)">
            <summary>
            描画に使用するエフェクトを設定する。
            </summary>
            <param name="effect">エフェクト</param>
        </member>
        <member name="M:asd.EffectObject3D.Play">
            <summary>
            設定されている全てのエフェクトを再生する。
            </summary>
            <remarks>再生されたエフェクトのID</remarks>
        </member>
        <member name="M:asd.EffectObject3D.Stop">
            <summary>
            このオブジェクトから再生されたエフェクトを全て停止する。
            </summary>
        </member>
        <member name="M:asd.EffectObject3D.StopRoot">
            <summary>
            このオブジェクトから再生されたエフェクトのルートを全て停止する。
            </summary>
        </member>
        <member name="M:asd.EffectObject3D.Show">
            <summary>
            このオブジェクトから再生されたエフェクトを表示状態にする。
            </summary>
        </member>
        <member name="M:asd.EffectObject3D.Hide">
            <summary>
            このオブジェクトから再生されたエフェクトを非表示状態にする。
            </summary>
        </member>
        <member name="P:asd.EffectObject3D.IsPlaying">
            <summary>
            このオブジェクトから再生されたエフェクトが再生中か取得する。
            </summary>
            <returns>再生中か?</returns>
        </member>
        <member name="P:asd.EffectObject3D.SyncEffects">
            <summary>
            このオブジェクトから再生されたエフェクトをオブジェクトに合わせて移動させるか取得、または設定する。
            </summary>
        </member>
        <member name="T:asd.Layer3D">
            <summary>
            3Dオブジェクトの更新と描画を管理するレイヤーの機能を提供するクラス
            </summary>
        </member>
        <member name="M:asd.Layer3D.#ctor(asd.RenderSettings)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:asd.Layer3D.ForceToRelease">
            <summary>
            強制的に使用しているメモリを開放する。
            </summary>
            <remarks>
            何らかの理由でメモリが不足した場合に実行する。
            開放した後の動作の保証はしていないので、必ず参照が残っていないことを確認する必要がある。
            </remarks>
        </member>
        <member name="P:asd.Layer3D.Objects">
            <summary>
            このレイヤーが管理している3Dオブジェクトのコレクションを取得する。
            </summary>
        </member>
        <member name="P:asd.Layer3D.ObjectCount">
            <summary>
            このレイヤーが管理している3Dオブジェクトの数を取得する。
            </summary>
        </member>
        <member name="P:asd.Layer3D.Settings">
            <summary>
            描画設定を取得、設定する。
            </summary>
        </member>
        <member name="M:asd.Layer3D.AddObject(asd.Object3D)">
            <summary>
            このレイヤーに指定した3Dオブジェクトを追加する。
            </summary>
            <param name="object3D">追加する3Dオブジェクト</param>
            <remarks><see cref="P:asd.Layer3D.Objects"/>プロパティの内容などへ実際に追加されるのは、このメソッドを呼び出したフレームの最後になるので注意が必要。</remarks>
        </member>
        <member name="M:asd.Layer3D.RemoveObject(asd.Object3D)">
            <summary>
            このレイヤーから指定した3Dオブジェクトを削除する。
            </summary>
            <param name="object3D">削除される3Dオブジェクト</param>
            <remarks><see cref="P:asd.Layer3D.Objects"/>プロパティの内容などから実際に削除されるのは、このメソッドを呼び出したフレームの最後になるので注意が必要。</remarks>
        </member>
        <member name="M:asd.Layer3D.__Register(asd.Object3D)">
            <summary>
            内部用のメソッドで、ユーザーは呼び出してはいけない。
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:asd.Layer3D.__Unregister(asd.Object3D)">
            <summary>
            内部用のメソッドで、ユーザーは呼び出してはいけない。
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:asd.Layer3D.__AddToCore(asd.Object3D)">
            <summary>
            内部用のメソッドで、ユーザーは呼び出してはいけない。
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:asd.Layer3D.__RemoveFromCore(asd.Object3D)">
            <summary>
            内部用のメソッドで、ユーザーは呼び出してはいけない。
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:asd.Layer3D.DrawSpriteAdditionally(asd.Vector3DF,asd.Vector3DF,asd.Vector3DF,asd.Vector3DF,asd.Color,asd.Color,asd.Color,asd.Color,asd.Vector2DF,asd.Vector2DF,asd.Vector2DF,asd.Vector2DF,asd.Texture2D,asd.AlphaBlendMode,System.Boolean,System.Boolean)">
            <summary>
            通常の描画に加えてテクスチャを描画する。
            </summary>
            <param name="upperLeftPos">テクスチャの左上の描画位置</param>
            <param name="upperRightPos">テクスチャの右上の描画位置</param>
            <param name="lowerRightPos">テクスチャの右下の描画位置</param>
            <param name="lowerLeftPos">テクスチャの左下の描画位置</param>
            <param name="upperLeftCol">テクスチャの左上の頂点色</param>
            <param name="upperRightCol">テクスチャの右上の頂点色</param>
            <param name="lowerRightCol">テクスチャの右下の頂点色</param>
            <param name="lowerLeftCol">テクスチャの左下の頂点色</param>
            <param name="upperLeftUV">テクスチャの左上のUV値</param>
            <param name="upperRightUV">テクスチャの右上のUV値</param>
            <param name="lowerRightUV">テクスチャの右下のUV値</param>
            <param name="lowerLeftUV">テクスチャの左下のUV値</param>
            <param name="texture">描画するテクスチャ</param>
            <param name="alphaBlend">アルファブレンドの種類</param>
            <param name="depthWrite">深度を比較するか?</param>
            <param name="depthTest">深度を書き込むか?</param>
            <remarks>OnDrawAdditionallyの中以外では実行してはいけない。</remarks>
        </member>
        <member name="M:asd.Layer3D.SetAmbientColorIntensity(System.Single)">
            <summary>
            環境光の強さを設定する。
            </summary>
            <param name="ambientColorIntensity">環境光の強さ</param>
            <remarks>
            デフォルトは1.0である。
            </remarks>
        </member>
        <member name="M:asd.Layer3D.SetSkyAmbientColor(asd.Color)">
            <summary>
            空方向の環境光の色を設定する。
            </summary>
            <param name="color">色</param>
        </member>
        <member name="M:asd.Layer3D.SetGroundAmbientColor(asd.Color)">
            <summary>
            地面方向の環境光の色を設定する。
            </summary>
            <param name="color">色</param>
        </member>
        <member name="M:asd.Layer3D.SetEnvironmentColorIntensity(System.Single,System.Single)">
            <summary>
            テクスチャによる環境の色の強さを設定する。
            </summary>
            <param name="environmentDiffuseColorIntensity">拡散色の強さ</param>
            <param name="environmentSpecularColorIntensity">スペキュラ色の強さ</param>
            <remarks>
            デフォルトは1.0である。
            </remarks>
        </member>
        <member name="M:asd.Layer3D.SetEnvironmentColor(asd.CubemapTexture,asd.CubemapTexture)">
            <summary>
            テクスチャによる環境の色を設定する。
            </summary>
            <param name="diffuseColor">拡散色</param>
            <param name="specularColor">スペキュラ色</param>
        </member>
        <member name="P:asd.Layer3D.SSAO_Radius">
            <summary>
            SSAOのサンプリングする半径
            </summary>
        </member>
        <member name="P:asd.Layer3D.SSAO_Bias">
            <summary>
            SSAOのバイアス
            </summary>
        </member>
        <member name="P:asd.Layer3D.SSAO_Intensity">
            <summary>
            SSAOの強さ
            </summary>
        </member>
        <member name="P:asd.Layer3D.SSAO_FarPlain">
            <summary>
            SSAOの最大距離
            </summary>
        </member>
        <member name="P:asd.Layer3D.IsHeightFogEnabled">
            <summary>
            高さ方向のフォグが有効かどうか、を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.Layer3D.HeightFogDensity">
            <summary>
            高さ方向のフォグの濃度を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.Layer3D.HeightFogColor">
            <summary>
            高さ方向のフォグの色を取得、または設定する。
            </summary>
        </member>
        <member name="P:asd.Layer3D.HeightFogFalloff">
            <summary>
            高さ方向のフォグの減衰率を取得、または設定する。
            </summary>
            <remarks>
            この値が大きいほど、高い位置のフォグが薄くなる。
            </remarks>
        </member>
        <member name="P:asd.Layer3D.HeightFogStartDistance">
            <summary>
            高さ方向のフォグの開始距離を取得、または設定する。
            </summary>
            <remarks>
            この値よりカメラに対して近い位置には霧が生じなくなる。
            </remarks>
        </member>
        <member name="T:asd.MassModelObject3D">
            <summary>
            大量にメッシュを表示する3Dオブジェクトの機能を提供するクラス
            </summary>
        </member>
        <member name="M:asd.MassModelObject3D.SetModel(asd.MassModel)">
            <summary>
            描画に使用するモデルを設定する。
            </summary>
            <param name="model">モデル</param>
        </member>
        <member name="M:asd.MassModelObject3D.PlayAnimation(System.String)">
            <summary>
            アニメーションを再生する。
            </summary>
            <param name="name">アニメーションの名称</param>
        </member>
        <member name="M:asd.MassModelObject3D.StopAnimation">
            <summary>
            アニメーションを停止する。
            </summary>
        </member>
        <member name="M:asd.MassModelObject3D.CrossFadeAnimation(System.String,System.Single)">
            <summary>
            アニメーションをクロスフェードで再生する。
            </summary>
            <param name="name">アニメーションの名称</param>
            <param name="time">クロスフェードにかかる時間(秒)</param>
        </member>
        <member name="P:asd.MassModelObject3D.IsAnimationPlaying">
            <summary>
            アニメーションが再生中か取得する。
            </summary>
            <returns>再生中か?</returns>
        </member>
        <member name="M:asd.MassModelObject3D.SetMaterialPropertyBlock(asd.MaterialPropertyBlock)">
            <summary>
            材質個別に描画時のパラメーターを設定する。
            </summary>
            <param name="block">プロパティ</param>
            <remarks>
            通常描画する場合、材質に設定されたパラメーターを元に描画するがモデルごとに個別のパラメーターを使用する場合、この関数を使用する。
            </remarks>
        </member>
        <member name="T:asd.ModelObject3D">
            <summary>
            メッシュを表示する3Dオブジェクトの機能を提供するクラス
            </summary>
        </member>
        <member name="M:asd.ModelObject3D.SetModel(asd.Model)">
            <summary>
            描画に使用するモデルを設定する。
            </summary>
            <param name="model">モデル</param>
        </member>
        <member name="M:asd.ModelObject3D.AddMesh(asd.Mesh)">
            <summary>
            描画に使用するメッシュを追加する。
            </summary>
            <param name="mesh">メッシュ</param>
        </member>
        <member name="M:asd.ModelObject3D.SetDeformer(asd.Deformer)">
            <summary>
            描画に使用するデフォーマーを設定する。
            </summary>
            <param name="deformer">デフォーマー</param>
        </member>
        <member name="M:asd.ModelObject3D.GetAnimationClip(System.String)">
            <summary>
            アニメーションクリップを取得する。
            </summary>
            <param name="name">アニメーションクリップの名称</param>
            <returns>アニメーションクリップ</returns>
        </member>
        <member name="M:asd.ModelObject3D.PlayAnimation(System.Int32,System.String)">
            <summary>
            アニメーションを再生する。
            </summary>
            <param name="index">対象のインデックス</param>
            <param name="name">アニメーションの名称</param>
        </member>
        <member name="M:asd.ModelObject3D.StopAnimation(System.Int32)">
            <summary>
            アニメーションを停止する。
            </summary>
            <param name="index">対象のインデックス</param>
        </member>
        <member name="M:asd.ModelObject3D.SetAnimationWeight(System.Int32,System.Single)">
            <summary>
            アニメーションの合成比率を設定する。
            </summary>
            <param name="index">対象のインデックス</param>
            <param name="weight">合成比率</param>
        </member>
        <member name="M:asd.ModelObject3D.CrossFadeAnimation(System.Int32,System.String,System.Single)">
            <summary>
            アニメーションをクロスフェードで再生する。
            </summary>
            <param name="index">対象のインデックス</param>
            <param name="name">アニメーションの名称</param>
            <param name="time">クロスフェードにかかる時間(秒)</param>
        </member>
        <member name="M:asd.ModelObject3D.IsAnimationPlaying(System.Int32)">
            		@brief	アニメーションが再生中か取得する。
            		@param	index	対象のインデックス
            		@return	再生中か?
        </member>
        <member name="M:asd.ModelObject3D.SetMaterialPropertyBlock(System.Int32,System.Int32,asd.MaterialPropertyBlock)">
            <summary>
            材質個別に描画時のパラメーターを設定する。
            </summary>
            <param name="meshIndex">メッシュのインデックス</param>
            <param name="materialIndex">材質のインデックス</param>
            <param name="block">プロパティ</param>
            <remarks>
            通常描画する場合、材質に設定されたパラメーターを元に描画するがモデルごとに個別のパラメーターを使用する場合、この関数を使用する。
            </remarks>
        </member>
        <member name="T:asd.Object3D">
            <summary>
            更新・描画処理を行う単位となる3Dオブジェクトの機能を提供するクラス
            </summary>
        </member>
        <member name="M:asd.Object3D.ForceToRelease">
            <summary>
            強制的に使用しているメモリを開放する。
            </summary>
            <remarks>
            何らかの理由でメモリが不足した場合に実行する。
            開放した後の動作の保証はしていないので、必ず参照が残っていないことを確認する必要がある。
            </remarks>
        </member>
        <member name="P:asd.Object3D.IsUpdated">
            <summary>
            オブジェクトの更新を実行するかどうか取得または設定する。
            </summary>
        </member>
        <member name="P:asd.Object3D.IsDrawn">
            <summary>
            オブジェクトを描画するかどうか取得または設定する。
            </summary>
        </member>
        <member name="P:asd.Object3D.IsAlive">
            <summary>
            オブジェクトが有効かどうかの真偽値を取得する。破棄されているとき false を返す。
            </summary>
        </member>
        <member name="M:asd.Object3D.Dispose">
            <summary>
            この3Dオブジェクトを破棄する。
            </summary>
        </member>
        <member name="M:asd.Object3D.Dispose(System.Boolean)">
            <summary>
            この3Dオブジェクトを破棄する。
            </summary>
            <param name="disposeNative">ネイティブ リソースも即解放するかどうかの真偽値。</param>
        </member>
        <member name="M:asd.Object3D.__DisposeImmediately(System.Boolean)">
            <summary>
            内部用のメソッドで、ユーザーは呼び出してはいけない。
            </summary>
            <param name="disposeNative"></param>
        </member>
        <member name="M:asd.Object3D.OnAdded">
            <summary>
            オーバーライドして、この3Dオブジェクトがレイヤーに登録されたときの処理を記述できる。
            </summary>
        </member>
        <member name="M:asd.Object3D.OnRemoved">
            <summary>
            オーバーライドして、この3Dオブジェクトがレイヤーから登録解除されたときの処理を記述できる。
            </summary>
        </member>
        <member name="M:asd.Object3D.OnDispose">
            <summary>
            オーバーライドして、この3Dオブジェクトが破棄されるときの処理を記述できる。
            </summary>
        </member>
        <member name="M:asd.Object3D.OnUpdate">
            <summary>
            オーバーライドして、この3Dオブジェクトの更新処理を記述することができる。
            </summary>
        </member>
        <member name="M:asd.Object3D.OnUpdateInternal">
            <summary>
            ユーザーはオーバーライドしてはいけない。
            </summary>
        </member>
        <member name="M:asd.Object3D.OnDrawAdditionally">
            <summary>
            オーバーライドして、この3Dオブジェクトに関する追加の描画処理を記述できる。
            </summary>
        </member>
        <member name="P:asd.Object3D.Position">
            <summary>
            このインスタンスの親に対する現在の座標を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.Object3D.Rotation">
            <summary>
            このインスタンスの親に対する現在の角度を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.Object3D.Scale">
            <summary>
            このインスタンスの親に対する現在の拡大率を取得または設定する。
            </summary>
        </member>
        <member name="M:asd.Object3D.DrawSpriteAdditionally(asd.Vector3DF,asd.Vector3DF,asd.Vector3DF,asd.Vector3DF,asd.Color,asd.Color,asd.Color,asd.Color,asd.Vector2DF,asd.Vector2DF,asd.Vector2DF,asd.Vector2DF,asd.Texture2D,asd.AlphaBlendMode,System.Boolean,System.Boolean)">
            <summary>
            通常の描画に加えてテクスチャを描画する。
            </summary>
            <param name="upperLeftPos">テクスチャの左上の描画位置</param>
            <param name="upperRightPos">テクスチャの右上の描画位置</param>
            <param name="lowerRightPos">テクスチャの右下の描画位置</param>
            <param name="lowerLeftPos">テクスチャの左下の描画位置</param>
            <param name="upperLeftCol">テクスチャの左上の頂点色</param>
            <param name="upperRightCol">テクスチャの右上の頂点色</param>
            <param name="lowerRightCol">テクスチャの右下の頂点色</param>
            <param name="lowerLeftCol">テクスチャの左下の頂点色</param>
            <param name="upperLeftUV">テクスチャの左上のUV値</param>
            <param name="upperRightUV">テクスチャの右上のUV値</param>
            <param name="lowerRightUV">テクスチャの右下のUV値</param>
            <param name="lowerLeftUV">テクスチャの左下のUV値</param>
            <param name="texture">描画するテクスチャ</param>
            <param name="alphaBlend">アルファブレンドの種類</param>
            <param name="depthTest">深度を書き込むか?</param>
            <param name="depthWrite">深度を比較するか?</param>
            <remarks>OnDrawAdditionallyの中以外では実行してはいけない。</remarks>
        </member>
        <member name="T:asd.TerrainObject3D">
            <summary>
            地形を描画するクラス
            </summary>
        </member>
        <member name="M:asd.TerrainObject3D.SetTerrain(asd.Terrain3D)">
            <summary>
            地形を設定する。
            </summary>
            <param name="terrain">地形</param>
        </member>
        <member name="M:asd.TerrainObject3D.SetMaterialPropertyBlock(asd.MaterialPropertyBlock)">
            <summary>
            材質個別に描画時のパラメーターを設定する。
            </summary>
            <param name="block">プロパティ</param>
            <remarks>
            通常描画する場合、材質に設定されたパラメーターを元に描画するがモデルごとに個別のパラメーターを使用する場合、この関数を使用する。
            </remarks>
        </member>
        <member name="T:asd.Layer2DComponent">
            <summary>
            asd.Layer2D クラスに登録することができるコンポーネント クラス。
            </summary>
        </member>
        <member name="M:asd.Layer2DComponent.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="P:asd.Layer2DComponent.Owner">
            <summary>
            このコンポーネントを保持しているレイヤー クラスのインスタンスを取得する。
            </summary>
        </member>
        <member name="P:asd.Layer2DComponent.IsUpdated">
            <summary>
            このコンポーネントが更新されるかどうかを取得する。
            </summary>
        </member>
        <member name="M:asd.Layer2DComponent.OnUpdating">
            <summary>
            オーバーライドして、このコンポーネントを持つレイヤーが更新される直前の処理を記述できる。
            </summary>
        </member>
        <member name="M:asd.Layer2DComponent.OnLayerUpdated">
            <summary>
            オーバーライドして、このコンポーネントを持つレイヤーが更新された直後の処理を記述できる。
            </summary>
        </member>
        <member name="M:asd.Layer2DComponent.OnLayerAdded">
            <summary>
            オーバーライドして、このコンポーネントを持つレイヤーがシーンに登録された時の処理を記述できる。
            </summary>
        </member>
        <member name="M:asd.Layer2DComponent.OnLayerRemoved">
            <summary>
            オーバーライドして、このコンポーネントを持つレイヤーがシーンから登録解除された時の処理を記述できる。
            </summary>
        </member>
        <member name="M:asd.Layer2DComponent.OnLayerDisposed">
            <summary>
            オーバーライドして、このコンポーネントを持つレイヤーが破棄された時の処理を記述できる。
            </summary>
        </member>
        <member name="T:asd.Object2DComponent">
            <summary>
            asd.Object2D クラスに登録できるコンポーネント クラス。
            </summary>
        </member>
        <member name="M:asd.Object2DComponent.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="P:asd.Object2DComponent.Owner">
            <summary>
            このコンポーネントを保持している2Dオブジェクトのインスタンスを取得する。
            </summary>
        </member>
        <member name="P:asd.Object2DComponent.IsUpdated">
            <summary>
            このコンポーネントが更新されるかどうかを取得または設定する。
            </summary>
        </member>
        <member name="M:asd.Object2DComponent.OnUpdate">
            <summary>
            オーバーライドして、このコンポーネントを持つオブジェクトが更新される時の処理を記述できる。
            </summary>
        </member>
        <member name="M:asd.Object2DComponent.OnObjectAdded">
            <summary>
            オーバーライドして、このコンポーネントを持つオブジェクトがレイヤーに登録された時の処理を記述できる。
            </summary>
        </member>
        <member name="M:asd.Object2DComponent.OnObjectRemoved">
            <summary>
            オーバーライドして、このコンポーネントを持つオブジェクトがレイヤーから登録解除された時の処理を記述できる。
            </summary>
        </member>
        <member name="M:asd.Object2DComponent.OnObjectDisposed">
            <summary>
            オーバーライドして、このコンポーネントを持つオブジェクトが破棄された時の処理を記述できる。
            </summary>
        </member>
        <member name="T:asd.Object2D">
            <summary>
            更新・描画処理を行う単位となる2Dオブジェクトの機能を提供する抽象クラス。
            </summary>
        </member>
        <member name="P:asd.Object2D.Collisions2DInfo">
            <summary>
            現時点での衝突情報の一覧を取得する
            </summary>
        </member>
        <member name="M:asd.Object2D.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="P:asd.Object2D.Parent">
            <summary>
            このオブジェクトの親オブジェクトを取得する。
            </summary>
        </member>
        <member name="P:asd.Object2D.Children">
            <summary>
            このオブジェクトが持っている子オブジェクトのコレクションを取得する。
            </summary>
        </member>
        <member name="P:asd.Object2D.Layer">
            <summary>
            このオブジェクトが登録されているレイヤーを取得します。
            </summary>
        </member>
        <member name="P:asd.Object2D.CameraGroup">
            <summary>
            カメラに表示するグループを取得する。
            </summary>
            <remarks>
            カメラのグループと他のオブジェクトのグループで&amp;でビット演算して1以上だった場合、そのカメラにオブジェクトが描画されるようになる。
            </remarks>
        </member>
        <member name="P:asd.Object2D.IsUpdated">
            <summary>
            このオブジェクトが更新されるかどうかを取得または設定する。
            </summary>
        </member>
        <member name="P:asd.Object2D.IsDrawn">
            <summary>
            このオブジェクトが描画されるかどうかを取得または設定する。
            </summary>
        </member>
        <member name="P:asd.Object2D.IsAlive">
            <summary>
            このオブジェクトが実行中かどうかを取得する。破棄されている場合に false を返す。
            </summary>
        </member>
        <member name="P:asd.Object2D.Position">
            <summary>
            この2Dオブジェクトを描画する位置を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.Object2D.Angle">
            <summary>
            この2Dオブジェクトを描画する際の回転角度を取得または設定する。
            </summary>
            <remarks>
            回転角度は度で表記され、回転方向は時計回りである。
            </remarks>
        </member>
        <member name="P:asd.Object2D.Scale">
            <summary>
            この2Dオブジェクトを描画する際の拡大率を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.Object2D.AbsoluteBeingUpdated">
            <summary>
            このオブジェクトが親子関係を考慮して最終的に更新されるかどうかの真偽値を取得します。
            </summary>
        </member>
        <member name="P:asd.Object2D.AbsoluteBeingDrawn">
            <summary>
            このオブジェクトが親子関係を考慮して最終的に描画されるかどうかの真偽値を取得します。
            </summary>
        </member>
        <member name="M:asd.Object2D.GetGlobalPosition">
            <summary>
            この2Dオブジェクトを描画する際の実際の位置を取得または設定する。親子関係がある場合に、親の位置を考慮した位置を取得できる。
            </summary>
            <returns>この2Dオブジェクトの位置。</returns>
        </member>
        <member name="M:asd.Object2D.Dispose">
            <summary>
            この2Dオブジェクトを破棄する。
            </summary>
        </member>
        <member name="M:asd.Object2D.Dispose(System.Boolean)">
            <summary>
            この2Dオブジェクトを破棄する。
            </summary>
            <param name="disposeNative">ネイティブ リソースも即解放するかどうかの真偽値。</param>
            <remarks>破棄状況を同期している子オブジェクトもすべて破棄するが、子オブジェクトの破棄はこのメソッドを呼び出したフレームの最後に実行されるので注意が必要。</remarks>
        </member>
        <member name="M:asd.Object2D.AddChild(asd.Object2D,asd.ChildManagementMode,asd.ChildTransformingMode)">
            <summary>
            指定した2Dオブジェクトを子オブジェクトとしてこのインスタンスに追加する。
            </summary>
            <param name="child">追加する子オブジェクト</param>
            <param name="managementMode">子オブジェクトの管理に関する同期設定。フラグをOR演算でつなげて複数指定することができる。</param>
            <param name="transformingMode">子オブジェクトの変形に関する同期設定。</param>
            <remarks>実際に追加されるのはこのメソッドを呼び出したフレームの最後になるので注意が必要。</remarks>
        </member>
        <member name="M:asd.Object2D.RemoveChild(asd.Object2D)">
            <summary>
            指定した子オブジェクトをこのインスタンスから削除する。
            </summary>
            <param name="child">削除する子オブジェクト</param>
            <remarks>実際に削除されるのはこのメソッドを呼び出したフレームの最後になるので注意が必要。</remarks>
        </member>
        <member name="M:asd.Object2D.AddComponent(asd.Object2DComponent,System.String)">
            <summary>
            指定したコンポーネントをこの2Dオブジェクトに追加する。
            </summary>
            <param name="component">追加するコンポーネント</param>
            <param name="key">コンポーネントに関連付けるキー</param>
            <remarks>実際に追加されるのはこのメソッドを呼び出したフレームの最後になるので注意が必要。</remarks>
        </member>
        <member name="M:asd.Object2D.GetComponent(System.String)">
            <summary>
            指定したキーを持つコンポーネントを取得する。
            </summary>
            <param name="key">取得するコンポーネントのキー</param>
            <returns>コンポーネント</returns>
        </member>
        <member name="M:asd.Object2D.RemoveComponent(System.String)">
            <summary>
            指定したコンポーネントをこの2Dオブジェクトから削除する。
            </summary>
            <param name="key">削除するコンポーネントを示すキー</param>
            <returns>削除が成功したか否か。キーに対応するコンポーネントがなかった場合は false。</returns>
            <remarks>実際に削除されるのはこのメソッドを呼び出したフレームの最後になるので注意が必要。</remarks>
        </member>
        <member name="M:asd.Object2D.__DisposeImmediately(System.Boolean)">
            <summary>
            内部用のメソッドで、ユーザーは呼び出してはいけない。
            </summary>
            <param name="disposeNative"></param>
        </member>
        <member name="M:asd.Object2D.__Register(asd.Object2DComponent)">
            <summary>
            内部用のメソッドで、ユーザーは呼び出してはいけない。
            </summary>
            <param name="component"></param>
        </member>
        <member name="M:asd.Object2D.__Unregister(asd.Object2DComponent)">
            <summary>
            内部用のメソッドで、ユーザーは呼び出してはいけない。
            </summary>
            <param name="component"></param>
        </member>
        <member name="M:asd.Object2D.DrawSpriteAdditionally(asd.Vector2DF,asd.Vector2DF,asd.Vector2DF,asd.Vector2DF,asd.Color,asd.Color,asd.Color,asd.Color,asd.Vector2DF,asd.Vector2DF,asd.Vector2DF,asd.Vector2DF,asd.Texture2D,asd.AlphaBlendMode,System.Int32)">
            <summary>
            通常の描画に加えてテクスチャを描画する。
            </summary>
            <param name="upperLeftPos">テクスチャの左上の描画位置</param>
            <param name="upperRightPos">テクスチャの右上の描画位置</param>
            <param name="lowerRightPos">テクスチャの右下の描画位置</param>
            <param name="lowerLeftPos">テクスチャの左下の描画位置</param>
            <param name="upperLeftCol">テクスチャの左上の頂点色</param>
            <param name="upperRightCol">テクスチャの右上の頂点色</param>
            <param name="lowerRightCol">テクスチャの右下の頂点色</param>
            <param name="lowerLeftCol">テクスチャの左下の頂点色</param>
            <param name="upperLeftUV">テクスチャの左上のUV値</param>
            <param name="upperRightUV">テクスチャの右上のUV値</param>
            <param name="lowerRightUV">テクスチャの右下のUV値</param>
            <param name="lowerLeftUV">テクスチャの左下のUV値</param>
            <param name="texture">描画するテクスチャ</param>
            <param name="alphaBlend">アルファブレンドの種類</param>
            <param name="priority">描画の優先順位(大きいほど前面に描画される)</param>
            <remarks>OnDrawAdditionallyの中以外では実行してはいけない。</remarks>
        </member>
        <member name="M:asd.Object2D.DrawSpriteWithMaterialAdditionally(asd.Vector2DF,asd.Vector2DF,asd.Vector2DF,asd.Vector2DF,asd.Color,asd.Color,asd.Color,asd.Color,asd.Vector2DF,asd.Vector2DF,asd.Vector2DF,asd.Vector2DF,asd.Material2D,asd.AlphaBlendMode,System.Int32)">
            <summary>
            通常の描画に加えて専用のシェーダーを用いて2Dスプライトを描画する。
            </summary>
            <param name="upperLeftPos">テクスチャの左上の描画位置</param>
            <param name="upperRightPos">テクスチャの右上の描画位置</param>
            <param name="lowerRightPos">テクスチャの右下の描画位置</param>
            <param name="lowerLeftPos">テクスチャの左下の描画位置</param>
            <param name="upperLeftCol">テクスチャの左上の頂点色</param>
            <param name="upperRightCol">テクスチャの右上の頂点色</param>
            <param name="lowerRightCol">テクスチャの右下の頂点色</param>
            <param name="lowerLeftCol">テクスチャの左下の頂点色</param>
            <param name="upperLeftUV">テクスチャの左上のUV値</param>
            <param name="upperRightUV">テクスチャの右上のUV値</param>
            <param name="lowerRightUV">テクスチャの右下のUV値</param>
            <param name="lowerLeftUV">テクスチャの左下のUV値</param>
            <param name="material">表示に使用するマテリアル</param>
            <param name="alphaBlend">アルファブレンドの種類</param>
            <param name="priority">描画の優先順位(大きいほど前面に描画される)</param>
            <remarks>
            専用のシェーダーを用いてスプライトを描画する。
            OnDrawAdditionallyの中以外では実行してはいけない。
            </remarks>
        </member>
        <member name="M:asd.Object2D.DrawTextAdditionally(asd.Vector2DF,asd.Color,asd.Font,System.String,asd.WritingDirection,asd.AlphaBlendMode,System.Int32)">
            <summary>
            通常の描画に加えて文字列を描画する。
            </summary>
            <param name="pos">描画位置</param>
            <param name="color">頂点色</param>
            <param name="font">フォント</param>
            <param name="text">文字列</param>
            <param name="writingDirection">行方向</param>
            <param name="alphaBlend">アルファブレンドの種類</param>
            <param name="priority">描画の優先順位(大きいほど前面に描画される)</param>
            <remarks>
            OnDrawAdditionallyの中以外では実行してはいけない。
            </remarks>
        </member>
        <member name="M:asd.Object2D.OnAdded">
            <summary>
            オーバーライドして、この2Dオブジェクトがレイヤーに登録されたときの処理を記述できる。
            </summary>
        </member>
        <member name="M:asd.Object2D.OnRemoved">
            <summary>
            オーバーライドして、この2Dオブジェクトがレイヤーから登録解除されたときの処理を記述できる。
            </summary>
        </member>
        <member name="M:asd.Object2D.OnDispose">
            <summary>
            オーバーライドして、この2Dオブジェクトが破棄される際の処理を記述できる。
            </summary>
        </member>
        <member name="M:asd.Object2D.OnUpdate">
            <summary>
            オーバーライドして、この2Dオブジェクトの更新処理を記述できる。
            </summary>
        </member>
        <member name="M:asd.Object2D.OnDrawAdditionally">
            <summary>
            オーバーライドして、この2Dオブジェクトに関する追加の描画処理を記述できる。
            </summary>
        </member>
        <member name="M:asd.Object2D.OnCollisionEnter(asd.Collision2DInfo)">
            <summary>
            オーバーライドして、この2Dオブジェクトが別の2Dオブジェクトのコライダと衝突開始する際の処理を記述できる。
            </summary>
            <param name="collisionInfo">衝突に関する情報</param>
        </member>
        <member name="M:asd.Object2D.OnCollisionStay(asd.Collision2DInfo)">
            <summary>
            オーバーライドして、この2Dオブジェクトが別の2Dオブジェクトのコライダと衝突が継続している際の処理を記述できる。
            </summary>
            <param name="collisionInfo">衝突に関する情報</param>
        </member>
        <member name="M:asd.Object2D.OnCollisionExit(asd.Collision2DInfo)">
            <summary>
            オーバーライドして、この2Dオブジェクトが別の2Dオブジェクトのコライダと衝突終了した際の処理を記述できる。
            </summary>
            <param name="collisionInfo">衝突に関する情報</param>
        </member>
        <member name="M:asd.Object2D.AddCollider(asd.Collider2D)">
            <summary>
            コライダを追加する
            </summary>
            <param name="collider">追加するコライダ</param>
        </member>
        <member name="M:asd.Object2D.RemoveCollider(asd.Collider2D)">
            <summary>
            コライダを削除する
            </summary>
            <param name="collider">削除するコライダ</param>
        </member>
        <member name="T:asd.ChildDrawingMode">
            <summary>
            子オブジェクトの描画に関する同期の設定を表すフラグ。
            </summary>
        </member>
        <member name="F:asd.ChildDrawingMode.Nothing">
            <summary>
            何も同期しない。
            </summary>
        </member>
        <member name="F:asd.ChildDrawingMode.Color">
            <summary>
            描画の際に親の色を子に乗算する。
            </summary>
        </member>
        <member name="F:asd.ChildDrawingMode.DrawingPriority">
            <summary>
            描画の際に親の描画優先度を子の描画優先度に足す。
            </summary>
        </member>
        <member name="T:asd.ChildManagementMode">
            <summary>
            子オブジェクトの管理に関する同期の設定フラグ。
            </summary>
        </member>
        <member name="F:asd.ChildManagementMode.Nothing">
            <summary>
            何も同期しない。
            </summary>
        </member>
        <member name="F:asd.ChildManagementMode.RegistrationToLayer">
            <summary>
            レイヤーへの登録状況を同期する。
            </summary>
        </member>
        <member name="F:asd.ChildManagementMode.Disposal">
            <summary>
            親オブジェクトが破棄されたとき、子オブジェクトも破棄する。
            </summary>
        </member>
        <member name="F:asd.ChildManagementMode.IsUpdated">
            <summary>
            親オブジェクトが更新されないとき、子オブジェクトも更新しない。
            </summary>
        </member>
        <member name="F:asd.ChildManagementMode.IsDrawn">
            <summary>
            親オブジェクトが描画されないとき、子オブジェクトも描画されない。
            </summary>
        </member>
        <member name="T:asd.Component">
            <summary>
            コンポーネント クラスの基底クラス。
            </summary>
        </member>
        <member name="P:asd.Component.IsAlive">
            <summary>
            このコンポーネントが実行中かどうかを取得する。Vanishメソッドによって破棄された時に false を返す。
            </summary>
        </member>
        <member name="M:asd.Component.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:asd.Component.Dispose">
            <summary>
            このコンポーネントを破棄する。
            </summary>
        </member>
        <member name="P:asd.AltseedObject.UpdatePriority">
            <summary>
            このインスタンスの更新の優先順位を取得または設定する。
            </summary>
        </member>
        <member name="T:asd.Layer">
            <summary>
            オブジェクトの更新と描画を管理するレイヤーの機能を提供する抽象クラス
            </summary>
        </member>
        <member name="M:asd.Layer.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="P:asd.Layer.IsAlive">
            <summary>
            このレイヤーが有効化どうかを取得する。<see cref="M:asd.Layer.Dispose"/>メソッドを呼び出した後なら false。
            </summary>
        </member>
        <member name="P:asd.Layer.IsUpdated">
            <summary>
            レイヤーの更新を実行するかどうか取得または設定する。
            </summary>
        </member>
        <member name="P:asd.Layer.IsDrawn">
            <summary>
            レイヤーを描画するかどうか取得または設定する。
            </summary>
        </member>
        <member name="P:asd.Layer.UpdatePriority">
            <summary>
            このレイヤーの更新の優先順位を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.Layer.UpdateFrequency">
            <summary>
            このレイヤーの１フレームごとの更新回数を取得または設定する。
            </summary>
            <returns></returns>
        </member>
        <member name="P:asd.Layer.Scene">
            <summary>
            このインスタンスを管理している asd.Scene クラスのインスタンスを取得する。
            </summary>
        </member>
        <member name="P:asd.Layer.TimeForUpdate">
            <summary>
            このレイヤーの前回の更新時間を取得する。
            </summary>
        </member>
        <member name="P:asd.Layer.ObjectCount">
            <summary>
            このレイヤーに登録されているオブジェクトの数を取得する。
            </summary>
        </member>
        <member name="P:asd.Layer.Name">
            <summary>
            このレイヤーの名前を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.Layer.DrawingPriority">
            <summary>
            このレイヤーの描画優先度を取得または設定する。この値が大きいほど手前に描画される。
            </summary>
        </member>
        <member name="P:asd.Layer.LayerType">
            <summary>
            レイヤーの種類を取得する。
            </summary>
        </member>
        <member name="M:asd.Layer.Dispose">
            <summary>
            このレイヤーを破棄する。
            </summary>
        </member>
        <member name="M:asd.Layer.Dispose(System.Boolean)">
            <summary>
            このレイヤーを破棄する。
            </summary>
            <param name="disposeNative">ネイティブ リソースも即解放するかどうかの真偽値。</param>
            <remarks>登録されているオブジェクトもすべて破棄するが、オブジェクトの破棄はこのメソッドを呼び出したフレームの最後に実行されるので注意が必要。</remarks>
        </member>
        <member name="M:asd.Layer.__DisposeImmediately(System.Boolean)">
            <summary>
            内部用のメソッドで、ユーザーは呼び出してはいけない。
            </summary>
            <param name="disposeNative"></param>
        </member>
        <member name="M:asd.Layer.OnAdded">
            <summary>
            オーバーライドして、このレイヤーがシーンに登録されたときの処理を記述できる。
            </summary>
        </member>
        <member name="M:asd.Layer.OnRemoved">
            <summary>
            オーバーライドして、このレイヤーがシーンから登録解除されたときの処理を記述できる。
            </summary>
        </member>
        <member name="M:asd.Layer.OnDispose">
            <summary>
            オーバーライドして、このレイヤーが破棄されるときの処理を記述できる。
            </summary>
        </member>
        <member name="M:asd.Layer.OnUpdating">
            <summary>
            オーバーライドして、このレイヤーが更新される前の処理を記述できる。
            </summary>
        </member>
        <member name="M:asd.Layer.OnUpdated">
            <summary>
            オーバーライドして、このレイヤーが更新された後の処理を記述できる。
            </summary>
        </member>
        <member name="M:asd.Layer.OnDrawAdditionally">
            <summary>
            オーバーライドして、このレイヤーの追加の描画処理を記述できる。
            </summary>
        </member>
        <member name="M:asd.Layer.AddPostEffect(asd.PostEffect)">
            <summary>
            ポストエフェクトを追加する。
            </summary>
            <param name="postEffect">ポストエフェクト</param>
        </member>
        <member name="M:asd.Layer.ClearPostEffects">
            <summary>
            ポストエフェクトを全て消去する。
            </summary>
        </member>
        <member name="M:asd.Layer.ForceToRelease">
            <summary>
            強制的に使用しているメモリを開放する。
            </summary>
            <remarks>
            何らかの理由でメモリが不足した場合に実行する。
            開放した後の動作の保証はしていないので、必ず参照が残っていないことを確認する必要がある。
            </remarks>
        </member>
        <member name="T:asd.Layer2D">
            <summary>
            2Dオブジェクトの更新と描画を管理するレイヤーの機能を提供するクラス
            </summary>
        </member>
        <member name="M:asd.Layer2D.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:asd.Layer2D.ForceToRelease">
            <summary>
            強制的に使用しているメモリを開放する。
            </summary>
            <remarks>
            何らかの理由でメモリが不足した場合に実行する。
            開放した後の動作の保証はしていないので、必ず参照が残っていないことを確認する必要がある。
            </remarks>
        </member>
        <member name="P:asd.Layer2D.ObjectCount">
            <summary>
            このレイヤーが管理している2Dオブジェクトの数を取得する。
            </summary>
        </member>
        <member name="P:asd.Layer2D.IsDistortionEnabled">
            <summary>
            エフェクトの歪みが有効かどうか、取得、もしくは設定する。
            </summary>
        </member>
        <member name="P:asd.Layer2D.Objects">
            <summary>
            このレイヤーが管理している2Dオブジェクトのコレクションを取得する。
            </summary>
        </member>
        <member name="M:asd.Layer2D.AddObject(asd.Object2D)">
            <summary>
            指定した2Dオブジェクトをこのレイヤーに追加する。
            </summary>
            <param name="object2D">追加する2Dオブジェクト</param>
            <remarks>実際に追加されるのはこのメソッドを呼び出したフレームの最後になるので注意が必要。</remarks>
        </member>
        <member name="M:asd.Layer2D.RemoveObject(asd.Object2D)">
            <summary>
            指定した2Dオブジェクトをこのレイヤーから削除する。
            </summary>
            <param name="object2D">削除される2Dオブジェクト</param>
            <remarks>実際に削除されるのはこのメソッドを呼び出したフレームの最後になるので注意が必要。</remarks>
        </member>
        <member name="M:asd.Layer2D.Clear">
            <summary>
            保持している全ての2Dオブジェクトをこのレイヤーから削除する。
            </summary>
            <remarks>実際に削除されるのはこのメソッドを呼び出したフレームの最後になるので注意が必要。</remarks>
        </member>
        <member name="M:asd.Layer2D.ImmediatelyRemoveObject(asd.Object2D,System.Boolean)">
            <summary>
            指定した2Dオブジェクトをすぐにこのレイヤーに追加する。
            </summary>
            <param name="object2D">追加する2Dオブジェクト</param>
            <param name="raiseEvent">OnRemovedイベントを呼び出すかどうかの真偽値</param>
        </member>
        <member name="M:asd.Layer2D.__Register(asd.Object2D)">
            <summary>
            内部用のメソッドで、ユーザーは呼び出してはいけない。
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:asd.Layer2D.__Unregister(asd.Object2D)">
            <summary>
            内部用のメソッドで、ユーザーは呼び出してはいけない。
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:asd.Layer2D.__AddToCore(asd.Object2D)">
            <summary>
            内部用のメソッドで、ユーザーは呼び出してはいけない。
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:asd.Layer2D.__RemoveFromCore(asd.Object2D)">
            <summary>
            内部用のメソッドで、ユーザーは呼び出してはいけない。
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:asd.Layer2D.AddComponent(asd.Layer2DComponent,System.String)">
            <summary>
            指定したコンポーネントをこのレイヤーに追加する。
            </summary>
            <param name="component">追加するコンポーネント</param>
            <param name="key">コンポーネントに関連付けるキー</param>
            <remarks>実際に追加されるのはこのメソッドを呼び出したフレームの最後になるので注意が必要。</remarks>
        </member>
        <member name="M:asd.Layer2D.RemoveComponent(System.String)">
            <summary>
            指定したコンポーネントをこのレイヤーから削除する。
            </summary>
            <param name="key">削除するコンポーネントを示すキー</param>
            <returns>削除が成功したか否か。キーに対応するコンポーネントがなかった場合は false。</returns>
            <remarks>実際に削除されるのはこのメソッドを呼び出したフレームの最後になるので注意が必要。</remarks>
        </member>
        <member name="M:asd.Layer2D.GetComponent(System.String)">
            <summary>
            指定したキーを持つコンポーネントを取得する。
            </summary>
            <param name="key">取得するコンポーネントのキー</param>
            <returns>コンポーネント</returns>
        </member>
        <member name="M:asd.Layer2D.__Register(asd.Layer2DComponent)">
            <summary>
            内部用のメソッドで、ユーザーは呼び出してはいけない。
            </summary>
            <param name="component"></param>
        </member>
        <member name="M:asd.Layer2D.__Unregister(asd.Layer2DComponent)">
            <summary>
            内部用のメソッドで、ユーザーは呼び出してはいけない。
            </summary>
            <param name="component"></param>
        </member>
        <member name="M:asd.Layer2D.DrawSpriteAdditionally(asd.Vector2DF,asd.Vector2DF,asd.Vector2DF,asd.Vector2DF,asd.Color,asd.Color,asd.Color,asd.Color,asd.Vector2DF,asd.Vector2DF,asd.Vector2DF,asd.Vector2DF,asd.Texture2D,asd.AlphaBlendMode,System.Int32)">
            <summary>
            通常の描画に加えてテクスチャを描画する。
            </summary>
            <param name="upperLeftPos">テクスチャの左上の描画位置</param>
            <param name="upperRightPos">テクスチャの右上の描画位置</param>
            <param name="lowerRightPos">テクスチャの右下の描画位置</param>
            <param name="lowerLeftPos">テクスチャの左下の描画位置</param>
            <param name="upperLeftCol">テクスチャの左上の頂点色</param>
            <param name="upperRightCol">テクスチャの右上の頂点色</param>
            <param name="lowerRightCol">テクスチャの右下の頂点色</param>
            <param name="lowerLeftCol">テクスチャの左下の頂点色</param>
            <param name="upperLeftUV">テクスチャの左上のUV値</param>
            <param name="upperRightUV">テクスチャの右上のUV値</param>
            <param name="lowerRightUV">テクスチャの右下のUV値</param>
            <param name="lowerLeftUV">テクスチャの左下のUV値</param>
            <param name="texture">描画するテクスチャ</param>
            <param name="alphaBlend">アルファブレンドの種類</param>
            <param name="priority">描画の優先順位(大きいほど前面に描画される)</param>
            <remarks>OnDrawAdditionallyの中以外では実行してはいけない。</remarks>
        </member>
        <member name="M:asd.Layer2D.DrawSpriteWithMaterialAdditionally(asd.Vector2DF,asd.Vector2DF,asd.Vector2DF,asd.Vector2DF,asd.Color,asd.Color,asd.Color,asd.Color,asd.Vector2DF,asd.Vector2DF,asd.Vector2DF,asd.Vector2DF,asd.Material2D,asd.AlphaBlendMode,System.Int32)">
            <summary>
            通常の描画に加えて専用のシェーダーを用いて2Dスプライトを描画する。
            </summary>
            <param name="upperLeftPos">テクスチャの左上の描画位置</param>
            <param name="upperRightPos">テクスチャの右上の描画位置</param>
            <param name="lowerRightPos">テクスチャの右下の描画位置</param>
            <param name="lowerLeftPos">テクスチャの左下の描画位置</param>
            <param name="upperLeftCol">テクスチャの左上の頂点色</param>
            <param name="upperRightCol">テクスチャの右上の頂点色</param>
            <param name="lowerRightCol">テクスチャの右下の頂点色</param>
            <param name="lowerLeftCol">テクスチャの左下の頂点色</param>
            <param name="upperLeftUV">テクスチャの左上のUV値</param>
            <param name="upperRightUV">テクスチャの右上のUV値</param>
            <param name="lowerRightUV">テクスチャの右下のUV値</param>
            <param name="lowerLeftUV">テクスチャの左下のUV値</param>
            <param name="material">表示に使用するマテリアル</param>
            <param name="alphaBlend">アルファブレンドの種類</param>
            <param name="priority">描画の優先順位(大きいほど前面に描画される)</param>
            <remarks>
            専用のシェーダーを用いてスプライトを描画する。
            OnDrawAdditionallyの中以外では実行してはいけない。
            </remarks>
        </member>
        <member name="M:asd.Layer2D.DrawTextAdditionally(asd.Vector2DF,asd.Color,asd.Font,System.String,asd.WritingDirection,asd.AlphaBlendMode,System.Int32)">
            <summary>
            通常の描画に加えて文字列を描画する。
            </summary>
            <param name="pos">描画位置</param>
            <param name="color">頂点色</param>
            <param name="font">フォント</param>
            <param name="text">文字列</param>
            <param name="writingDirection">行方向</param>
            <param name="alphaBlend">アルファブレンドの種類</param>
            <param name="priority">描画の優先順位(大きいほど前面に描画される)</param>
            <remarks>
            OnDrawAdditionallyの中以外では実行してはいけない。
            </remarks>
        </member>
        <member name="P:asd.Layer2D.CollidersMap">
            <summary>
            内部用のメソッドで、ユーザーは呼び出してはいけない。
            </summary>
        </member>
        <member name="M:asd.ObjectSystemFactory.#ctor(asd.swig.ObjectSystemFactory)">
            <summary>
            ObjectSystemFactory クラスをインスタンス化する。
            </summary>
            <param name="factory">ネイティブのインスタンス</param>
        </member>
        <member name="M:asd.ObjectSystemFactory.CreateCameraObject2D">
            <summary>
            ネイティブのクラスをインスタンス化する。
            </summary>
            <returns>ネイティブのインスタンス</returns>
        </member>
        <member name="M:asd.ObjectSystemFactory.CreateTextureObject2D">
            <summary>
            ネイティブのクラスをインスタンス化する。
            </summary>
            <returns>ネイティブのインスタンス</returns>
        </member>
        <member name="M:asd.ObjectSystemFactory.CreateMapObject2D">
            <summary>
            ネイティブのMapObject2Dをインスタンス化する。
            </summary>
            <returns>ネイティブのインスタンス</returns>
        </member>
        <member name="M:asd.ObjectSystemFactory.CreateChip2D">
            <summary>
            ネイティブのChip2Dをインスタンス化する。
            </summary>
            <returns>ネイティブのインスタンス</returns>
        </member>
        <member name="M:asd.ObjectSystemFactory.CreateTextObject2D">
            <summary>
            ネイティブのTextObject2Dをインスタンス化する。
            </summary>
            <returns>ネイティブのインスタンス</returns>
        </member>
        <member name="M:asd.ObjectSystemFactory.CreateEffectObject2D">
            <summary>
            ネイティブのクラスをインスタンス化する。
            </summary>
            <returns>ネイティブのインスタンス</returns>
        </member>
        <member name="M:asd.ObjectSystemFactory.CreateGeometryObject2D">
            <summary>
            ネイティブのクラスをインスタンス化する。
            </summary>
            <returns>ネイティブのインスタンス</returns>
        </member>
        <member name="M:asd.ObjectSystemFactory.CreateLayer2D">
            <summary>
            ネイティブの CoreLayer2D クラスをインスタンス化する。
            </summary>
            <returns>ネイティブのインスタンス。</returns>
        </member>
        <member name="M:asd.ObjectSystemFactory.CreateModelObject3D">
            <summary>
            ネイティブの MeshObject3D クラスをインスタンス化する。
            </summary>
            <returns>ネイティブのインスタンス</returns>
        </member>
        <member name="M:asd.ObjectSystemFactory.CreateCameraObject3D">
            <summary>
            ネイティブの CameraObject3D クラスをインスタンス化する。
            </summary>
            <returns>ネイティブのインスタンス</returns>
        </member>
        <member name="M:asd.ObjectSystemFactory.CreateEffectObject3D">
            <summary>
            ネイティブの EffectObject3D クラスをインスタンス化する。
            </summary>
            <returns>ネイティブのインスタンス</returns>
        </member>
        <member name="M:asd.ObjectSystemFactory.CreateDirectionalLightObject3D">
            <summary>
            ネイティブの DirectionalLightObject3D クラスをインスタンス化する。
            </summary>
            <returns>ネイティブのインスタンス</returns>
        </member>
        <member name="M:asd.ObjectSystemFactory.CreateLayer3D(asd.swig.RenderSettings)">
            <summary>
            ネイティブの CoreLayer2D クラスをインスタンス化する。
            </summary>
            <param name="settings">設定</param>
            <returns>ネイティブのインスタンス</returns>
        </member>
        <member name="M:asd.ObjectSystemFactory.CreateScene">
            <summary>
            ネイティブの CoreScene クラスをインスタンス化する。
            </summary>
            <returns>ネイティブのインスタンス。</returns>
        </member>
        <member name="M:asd.ObjectSystemFactory.CreatePostEffect">
            <summary>
            ネイティブの PostEffect クラスをインスタンス化する。
            </summary>
            <returns></returns>
        </member>
        <member name="M:asd.ObjectSystemFactory.CreateTransition">
            <summary>
            ネイティブの PostEffect クラスをインスタンス化する。
            </summary>
            <returns></returns>
        </member>
        <member name="T:asd.PostEffectGrayScale">
            <summary>
            グレースケール化するポストエフェクトクラス
            </summary>
        </member>
        <member name="T:asd.PostEffect">
            <summary>
            ポストエフェクトを適用するクラス
            </summary>
        </member>
        <member name="M:asd.PostEffect.ForceToRelease">
            <summary>
            強制的に使用しているメモリを開放する。
            </summary>
            <remarks>
            何らかの理由でメモリが不足した場合に実行する。
            開放した後の動作の保証はしていないので、必ず参照が残っていないことを確認する必要がある。
            </remarks>
        </member>
        <member name="M:asd.PostEffect.OnDraw(asd.RenderTexture2D,asd.RenderTexture2D)">
                    @brief	
            <summary>
            オーバーライドして、毎フレーム描画される処理を記述できる。
            </summary>
        </member>
        <member name="M:asd.PostEffect.DrawOnTexture2DWithMaterial(asd.RenderTexture2D,asd.Material2D)">
            <summary>
            マテリアルを用いてテクスチャに画像を描画する。
            </summary>
            <param name="target">描画先</param>
            <param name="material">マテリアル</param>
        </member>
        <member name="P:asd.PostEffect.IsEnabled">
            <summary>
            このポストエフェクトが有効かどうか、取得、設定する。
            </summary>
        </member>
        <member name="T:asd.PostEffectGaussianBlur">
            <summary>
            ガウスぼかしをかけるポストエフェクトクラス
            </summary>
        </member>
        <member name="P:asd.PostEffectGaussianBlur.Intensity">
            <summary>
            ぼかしの強さを設定する。
            </summary>
            <remarks>
            実質的にはガウス関数の分散にあたる値の平方根
            </remarks>
        </member>
        <member name="T:asd.PostEffectLightBloom">
            <summary>
            輝度の高い画素のみをぼかして加算するポストエフェクト
            </summary>
        </member>
        <member name="P:asd.PostEffectLightBloom.Intensity">
            <summary>
            ぼかしの強さを設定する。
            </summary>
            <remarks>
            実質的にはガウス関数の分散にあたる値の平方根
            </remarks>
        </member>
        <member name="P:asd.PostEffectLightBloom.Threshold">
            <summary>
            ぼかすピクセルの閾値を設定する。
            </summary>
            <remarks>
            この閾値を超えた値がぼかされ加算される。
            </remarks>
        </member>
        <member name="P:asd.PostEffectLightBloom.Exposure">
            <summary>
            露光の強さを指定する。
            </summary>
            <remarks>
            この値が高いほどぼかされる値の輝度が高くなる。
            </remarks>
        </member>
        <member name="P:asd.PostEffectLightBloom.IsLuminanceMode">
            <summary>
            輝度を参照するか指定する。
            </summary>
            <param name="value"></param>
            <remarks>
            この値がtrueだと、RGBではなく輝度からぼかされる色を決定する。
            </remarks>
        </member>
        <member name="T:asd.PostEffectSepia">
            <summary>
            セピア調化するポストエフェクトクラス
            </summary>
        </member>
        <member name="T:asd.Scene">
            <summary>
            レイヤーの更新と描画を管理するシーン機能を提供するクラス。
            </summary>
        </member>
        <member name="M:asd.Scene.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="P:asd.Scene.IsAlive">
            <summary>
            このシーンが有効かどうかの真偽値を取得する。破棄されていれば false を返す。
            </summary>
        </member>
        <member name="P:asd.Scene.HDRMode">
            <summary>
            描画先がHDRかどうか、取得、または設定する。
            </summary>
        </member>
        <member name="P:asd.Scene.EffectedScreen">
            <summary>
            全てのレイヤーとポストエフェクトが描画され終わった画面をテクスチャとして取得する。
            </summary>
            <returns>画面</returns>
            <remarks>テクスチャの内容はシーンが描画されるたびに変わる。主にシーン遷移の際に使用する。</remarks>
        </member>
        <member name="P:asd.Scene.Layers">
            <summary>
            所属しているレイヤーを取得する。
            </summary>
        </member>
        <member name="M:asd.Scene.AddLayer(asd.Layer)">
            <summary>
            指定したレイヤーをこのシーンに追加する。
            </summary>
            <param name="layer">追加されるレイヤー</param>
            <remarks>実際に追加されるのはこのメソッドを呼び出したフレームの最後になるので注意が必要。</remarks>
        </member>
        <member name="M:asd.Scene.RemoveLayer(asd.Layer)">
            <summary>
            指定したレイヤーをこのシーンから削除する。
            </summary>
            <param name="layer">削除されるレイヤー</param>
            <remarks>実際に削除されるのはこのメソッドを呼び出したフレームの最後になるので注意が必要。</remarks>
        </member>
        <member name="M:asd.Scene.AddComponent(asd.SceneComponent,System.String)">
            <summary>
            指定したコンポーネントをこのシーンに追加する。
            </summary>
            <param name="component">追加するコンポーネント</param>
            <param name="key">コンポーネントに関連付けるキー</param>
            <remarks>実際に追加されるのはこのメソッドを呼び出したフレームの最後になるので注意が必要。</remarks>
        </member>
        <member name="M:asd.Scene.RemoveComponent(System.String)">
            <summary>
            指定したコンポーネントをこのシーンから削除する。
            </summary>
            <param name="key">削除するコンポーネントを示すキー</param>
            <remarks>実際に削除されるのはこのメソッドを呼び出したフレームの最後になるので注意が必要。</remarks>
        </member>
        <member name="M:asd.Scene.GetComponent(System.String)">
            <summary>
            指定したキーを持つコンポーネントを取得する。
            </summary>
            <param name="key">取得するコンポーネントのキー</param>
            <returns>コンポーネント</returns>
        </member>
        <member name="M:asd.Scene.Dispose">
            <summary>
            このシーンを破棄する。
            </summary>
            <remarks>登録されているレイヤーもすべて破棄されるが、レイヤーの破棄はこのメソッドを呼んだフレームの最後に実行されるので注意が必要。</remarks>
        </member>
        <member name="M:asd.Scene.Dispose(System.Boolean)">
            <summary>
            このシーンを破棄する。
            </summary>
            <param name="disposeNative">ネイティブ リソースも即破棄するかどうかの真偽値。</param>
            <remarks>登録されているレイヤーもすべて破棄されるが、レイヤーの破棄はこのメソッドを呼んだフレームの最後に実行されるので注意が必要。</remarks>
        </member>
        <member name="M:asd.Scene.__Register(asd.SceneComponent)">
            <summary>
            内部用のメソッドで、ユーザーは呼び出してはいけない。
            </summary>
            <param name="component"></param>
        </member>
        <member name="M:asd.Scene.__Unregister(asd.SceneComponent)">
            <summary>
            内部用のメソッドで、ユーザーは呼び出してはいけない。
            </summary>
            <param name="component"></param>
        </member>
        <member name="M:asd.Scene.__DisposeImmediately(System.Boolean)">
            <summary>
            内部用のメソッドで、ユーザーは呼び出してはいけない。
            </summary>
            <param name="disposeNative"></param>
        </member>
        <member name="M:asd.Scene.OnRegistered">
            <summary>
            オーバーライドして、このシーンがエンジンに登録されたときに実行する処理を記述できる。
            </summary>
        </member>
        <member name="M:asd.Scene.OnStartUpdating">
            <summary>
            オーバーライドして、シーンの更新が始まったときに実行する処理を記述できる。
            </summary>
        </member>
        <member name="M:asd.Scene.OnTransitionFinished">
            <summary>
            オーバーライドして、トランジション終了時に実行する処理を記述できる。
            </summary>
        </member>
        <member name="M:asd.Scene.OnTransitionBegin">
            <summary>
            オーバーライドして、このシーンから他のシーンへ変わり始めるときに実行する処理を記述できる。
            </summary>
        </member>
        <member name="M:asd.Scene.OnStopUpdating">
            <summary>
            オーバーライドして、このシーンの更新が止まるときに実行する処理を記述できる。
            </summary>
        </member>
        <member name="M:asd.Scene.OnUnregistered">
            <summary>
            オーバーライドして、このシーンがエンジンから登録解除されたときに実行する処理を記述できる。
            </summary>
        </member>
        <member name="M:asd.Scene.OnDispose">
            <summary>
            オーバーライドして、このシーンが破棄される際に実行される処理を記述する。
            </summary>
        </member>
        <member name="M:asd.Scene.OnUpdating">
            <summary>
            オーバーライドして、Updateの直前に実行する処理を記述する。
            </summary>
        </member>
        <member name="M:asd.Scene.OnUpdated">
            <summary>
            オーバーライドして、Updateの直後に実行する処理を記述する。
            </summary>
        </member>
        <member name="T:asd.SceneComponent">
            <summary>
            asd.Scene クラスに登録することができるコンポーネント。
            </summary>
        </member>
        <member name="M:asd.SceneComponent.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="P:asd.SceneComponent.Owner">
            <summary>
            このインスタンスを保持しているシーン クラスを取得する。
            </summary>
        </member>
        <member name="P:asd.SceneComponent.IsUpdated">
            <summary>
            このコンポーネントが更新されるかどうかを取得または設定する。
            </summary>
        </member>
        <member name="M:asd.SceneComponent.OnUpdating">
            <summary>
            オーバーライドして、このコンポーネントを持つシーンの Update が始まる時の処理を記述できる。
            </summary>
        </member>
        <member name="M:asd.SceneComponent.OnUpdated">
            <summary>
            オーバーライドして、このコンポーネントを持つシーンの Update が終わる時の処理を記述できる。
            </summary>
        </member>
        <member name="M:asd.SceneComponent.OnSceneRegistered">
            <summary>
            オーバーライドして、このコンポーネントを持つシーンがエンジンに追加された時の処理を記述できる。
            </summary>
        </member>
        <member name="M:asd.SceneComponent.OnStartSceneUpdating">
            <summary>
            オーバーライドして、このコンポーネントを持つシーンの更新が始まる時の処理を記述できる。
            </summary>
        </member>
        <member name="M:asd.SceneComponent.OnSceneTransitionFinished">
            <summary>
            オーバーライドして、このコンポーネントを持つシーンへの画面遷移が完了した時の処理を記述できる。
            </summary>
        </member>
        <member name="M:asd.SceneComponent.OnSceneTransitionBegin">
            <summary>
            オーバーライドして、このコンポーネントを持つシーンからの画面遷移が始まる時の処理を記述できる。
            </summary>
        </member>
        <member name="M:asd.SceneComponent.OnStopSceneUpdating">
            <summary>
            オーバーライドして、このコンポーネントを持つシーンの更新が止まる時の処理を記述できる。
            </summary>
        </member>
        <member name="M:asd.SceneComponent.OnSceneUnregistered">
            <summary>
            オーバーライドして、このコンポーネントを持つシーンがエンジンから登録解除された時の処理を記述できる。
            </summary>
        </member>
        <member name="M:asd.SceneComponent.OnSceneDisposed">
            <summary>
            オーバーライドして、このコンポーネントを持つシーンが破棄された時の処理を記述できる。
            </summary>
        </member>
        <member name="T:asd.TextureObject2D">
            <summary>
            テクスチャを描画するクラス。
            </summary>
        </member>
        <member name="M:asd.TextureObject2D.#ctor">
            <summary>
            asd.TextureObject2D の新しいインスタンスを初期化する。
            </summary>
        </member>
        <member name="M:asd.TextureObject2D.ForceToRelease">
            <summary>
            強制的に使用しているメモリを開放する。
            </summary>
            <remarks>
            何らかの理由でメモリが不足した場合に実行する。
            開放した後の動作の保証はしていないので、必ず参照が残っていないことを確認する必要がある。
            </remarks>
        </member>
        <member name="P:asd.TextureObject2D.Texture">
            <summary>
            この2Dオブジェクトの描画に使用するテクスチャを取得または設定する。
            </summary>
        </member>
        <member name="P:asd.TextureObject2D.CenterPosition">
            <summary>
            この2Dオブジェクトを描画する際の描画原点を取得または設定する。描画原点は拡大・回転・描画の中心となる、画像データ内での座標。
            </summary>
        </member>
        <member name="P:asd.TextureObject2D.Color">
            <summary>
            この2Dオブジェクトを描画する際に合成する色を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.TextureObject2D.TurnLR">
            <summary>
            この2Dオブジェクトを描画する際に左右反転するかどうかの真偽値を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.TextureObject2D.TurnUL">
            <summary>
            この2Dオブジェクトを描画する際に上下反転するかどうかの真偽値を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.TextureObject2D.DrawingPriority">
            <summary>
            この2Dオブジェクトを描画する際の描画優先度を取得または設定する。描画優先度が高いほど手前に描画される。
            </summary>
        </member>
        <member name="P:asd.TextureObject2D.AlphaBlend">
            <summary>
            この2Dオブジェクトを描画する際のブレンドモードを取得または設定する。
            </summary>
        </member>
        <member name="P:asd.TextureObject2D.Src">
            <summary>
             テクスチャ上の描画範囲を設定する。
             </summary>
             <remarks>負の値は無効であり、負の値が含まれる場合はテクスチャ全体を描画する。</remarks>
        </member>
        <member name="P:asd.TextureObject2D.TextureFilterType">
            <summary>
             この2Dオブジェクトを描画する際のテクスチャフィルタを取得または設定する。
             </summary>
        </member>
        <member name="P:asd.TextureObject2D.Material">
            <summary>
            このオブジェクトを描画する際に使用されるマテリアルを取得、または設定する。
            </summary>
        </member>
        <member name="T:asd.Transition">
            <summary>
            シーン遷移時の効果を適用するクラス
            </summary>
        </member>
        <member name="M:asd.Transition.ForceToRelease">
            <summary>
            強制的に使用しているメモリを開放する。
            </summary>
            <remarks>
            何らかの理由でメモリが不足した場合に実行する。
            開放した後の動作の保証はしていないので、必ず参照が残っていないことを確認する必要がある。
            </remarks>
        </member>
        <member name="M:asd.Transition.OnUpdate">
            <summary>
            オーバーライドして、このオブジェクトの更新処理を記述できる。
            </summary>
        </member>
        <member name="P:asd.Transition.IsSceneChanged">
            <summary>
            シーンが切り替わっているか取得する。
            </summary>
        </member>
        <member name="M:asd.Transition.ChangeScene">
            <summary>
            実際にシーンを次のシーンに切り替える。
            </summary>
        </member>
        <member name="P:asd.Transition.IsFinished">
            <summary>
            シーン遷移処理が終了したか取得する。
            </summary>
        </member>
        <member name="M:asd.Transition.Finish">
            <summary>
            シーン遷移処理を終了する。
            </summary>
        </member>
        <member name="M:asd.Transition.DrawTriangleWithNextScene(asd.Vector2DF,asd.Vector2DF,asd.Vector2DF,asd.Color,asd.Color,asd.Color,asd.Vector2DF,asd.Vector2DF,asd.Vector2DF)">
            <summary>
            次のシーンを3角形に貼り付けて描画する。
            </summary>
            <param name="pos1">座標1(0～1)</param>
            <param name="pos2">座標2(0～1)</param>
            <param name="pos3">座標3(0～1)</param>
            <param name="col1">頂点カラー1</param>
            <param name="col2">頂点カラー2</param>
            <param name="col3">頂点カラー3</param>
            <param name="uv1">UV1(0～1)</param>
            <param name="uv2">UV2(0～1)</param>
            <param name="uv3">UV3(0～1)</param>
            <remarks>ChangeSceneを実行するまでは無効である。</remarks>
        </member>
        <member name="M:asd.Transition.DrawRectangleWithNextScene(asd.Vector2DF,asd.Vector2DF,asd.Vector2DF,asd.Vector2DF,asd.Color,asd.Color,asd.Color,asd.Color,asd.Vector2DF,asd.Vector2DF,asd.Vector2DF,asd.Vector2DF)">
            <summary>
            次のシーンを4角形に貼り付けて描画する。
            </summary>
            <param name="upperLeftPos">左上の描画位置(0～1)</param>
            <param name="upperRightPos">右上の描画位置(0～1)</param>
            <param name="lowerRightPos">右下の描画位置(0～1)</param>
            <param name="lowerLeftPos">左下の描画位置(0～1)</param>
            <param name="upperLeftCol">左上の頂点色</param>
            <param name="upperRightCol">右上の頂点色</param>
            <param name="lowerRightCol">右下の頂点色</param>
            <param name="lowerLeftCol">左下の頂点色</param>
            <param name="upperLeftUV">左上のUV値(0～1)</param>
            <param name="upperRightUV">右上のUV値(0～1)</param>
            <param name="lowerRightUV">右下のUV値(0～1)</param>
            <param name="lowerLeftUV">左下のUV値(0～1)</param>
            <remarks>ChangeSceneを実行するまでは無効である。</remarks>
        </member>
        <member name="M:asd.Transition.DrawTriangleWithPreviousScene(asd.Vector2DF,asd.Vector2DF,asd.Vector2DF,asd.Color,asd.Color,asd.Color,asd.Vector2DF,asd.Vector2DF,asd.Vector2DF)">
            <summary>
            前のシーンを3角形に貼り付けて描画する。
            </summary>
            <param name="pos1">座標1(0～1)</param>
            <param name="pos2">座標2(0～1)</param>
            <param name="pos3">座標3(0～1)</param>
            <param name="col1">頂点カラー1</param>
            <param name="col2">頂点カラー2</param>
            <param name="col3">頂点カラー3</param>
            <param name="uv1">UV1(0～1)</param>
            <param name="uv2">UV2(0～1)</param>
            <param name="uv3">UV3(0～1)</param>
            <remarks>ChangeSceneを実行すると前のシーンの描画は停止し、静止画として扱われる。</remarks>
        </member>
        <member name="M:asd.Transition.DrawRectangleWithPreviousScene(asd.Vector2DF,asd.Vector2DF,asd.Vector2DF,asd.Vector2DF,asd.Color,asd.Color,asd.Color,asd.Color,asd.Vector2DF,asd.Vector2DF,asd.Vector2DF,asd.Vector2DF)">
            <summary>
            前のシーンを4角形に貼り付けて描画する。
            </summary>
            <param name="upperLeftPos">左上の描画位置(0～1)</param>
            <param name="upperRightPos">右上の描画位置(0～1)</param>
            <param name="lowerRightPos">右下の描画位置(0～1)</param>
            <param name="lowerLeftPos">左下の描画位置(0～1)</param>
            <param name="upperLeftCol">左上の頂点色</param>
            <param name="upperRightCol">右上の頂点色</param>
            <param name="lowerRightCol">右下の頂点色</param>
            <param name="lowerLeftCol">左下の頂点色</param>
            <param name="upperLeftUV">左上のUV値(0～1)</param>
            <param name="upperRightUV">右上のUV値(0～1)</param>
            <param name="lowerRightUV">右下のUV値(0～1)</param>
            <param name="lowerLeftUV">左下のUV値(0～1)</param>
            <remarks>ChangeSceneを実行すると前のシーンの描画は停止し、静止画として扱われる。</remarks>
        </member>
        <member name="T:asd.TransitionFade">
            <summary>
            フェードしながらシーン遷移する効果を適用するクラス
            </summary>
        </member>
        <member name="M:asd.TransitionFade.#ctor(System.Single,System.Single)">
            <summary>
            コンストラクタ
            </summary>
            <param name="fadeoutDuration">フェードアウトにかかる実時間(秒)</param>
            <param name="fadeinDuration">フェードインにかかる実時間(秒)</param>
        </member>
        <member name="M:asd.SceneTransitionState.Proceed">
            <summary>
            シーン遷移に関する処理を進行させる。
            </summary>
        </member>
        <member name="M:asd.SceneTransitionState.Update">
            <summary>
            シーン遷移処理を更新する。
            </summary>
        </member>
        <member name="M:asd.SceneTransitionState.Draw">
            <summary>
            シーンを描画する。
            </summary>
        </member>
        <member name="M:asd.SceneTransitionState.ForceToComplete">
            <summary>
            この遷移状態で行うべき処理を強制的に完了させる。
            </summary>
        </member>
        <member name="M:asd.Particular.Dictionary.Get``2(System.Collections.Generic.Dictionary{``0,``1},``0)">
            <summary>
            値を取得する。
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="d"></param>
            <param name="key"></param>
            <returns></returns>
            <remarks>
            Javaは型推論が弱いので、型を指定する。
            </remarks>
        </member>
        <member name="M:asd.Particular.SortedList.Get``2(System.Collections.Generic.SortedList{``0,``1},``0)">
            <summary>
            値を取得する。
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="d"></param>
            <param name="key"></param>
            <returns></returns>
            <remarks>
            Javaは型推論が弱いので、型を指定する。
            </remarks>
        </member>
        <member name="T:asd.Profiler">
            <summary>
            プログラムの実行状況(計算時間や、使っているプロセッサ)を記録するクラス。 
            </summary>
        </member>
        <member name="M:asd.Profiler.Start(System.Int32)">
            <summary>
            計算の開始時間と、使用するプロセッサ番号を記録する。 
            </summary>
            <param name="id">プロファイリングを識別するID。Start関数は、IDの一致するEnd関数と対応する。 </param>
        </member>
        <member name="M:asd.Profiler.End(System.Int32)">
            <summary>
            計算の終了時間を記録し、プロファイリング結果を蓄積する。 
            </summary>
            <param name="id">プロファイリングを識別するID。End関数は、IDの一致するStart関数と対応する。 </param>
        </member>
        <member name="T:asd.ArcShape">
            <summary>
            図形としての弧を扱うクラス。
            </summary>
        </member>
        <member name="P:asd.ArcShape.Position">
            <summary>
            弧の中心座標を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.ArcShape.OuterDiameter">
            <summary>
            弧の外径を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.ArcShape.InnerDiameter">
            <summary>
            弧の内径を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.ArcShape.Angle">
            <summary>
            弧の中心を軸とした回転角度を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.ArcShape.NumberOfCorners">
            <summary>
            弧の外周、内周上の曲がり角（滑らかさ）の数を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.ArcShape.StartingCorner">
            <summary>
            弧の 始点となる外周、内周の曲がり角の番号を取得または設定する。(0 &lt;= StartingCorner &lt;= NumberOfCorners)
            </summary>
        </member>
        <member name="P:asd.ArcShape.EndingCorner">
            <summary>
            弧の終点となる外周、内周の曲がり角の番号を取得または設定する。(0 &lt;= EndingCorner &lt;= NumberOfCorners)
            </summary>
        </member>
        <member name="T:asd.CircleShape">
            <summary>
            図形としての円を扱うクラス。
            </summary>
        </member>
        <member name="P:asd.CircleShape.Position">
            <summary>
            円の中心座標を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.CircleShape.OuterDiameter">
            <summary>
            円の外径を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.CircleShape.InnerDiameter">
            <summary>
            円の内径を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.CircleShape.Angle">
            <summary>
            円の中心を軸とした回転角度を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.CircleShape.NumberOfCorners">
            <summary>
            円の外周、内周上の曲がり角（滑らかさ）の数を取得または設定する。
            </summary>
        </member>
        <member name="T:asd.LineShape">
            <summary>
            図形としての線分を扱うクラス。
            </summary>
        </member>
        <member name="P:asd.LineShape.StartingPosition">
            <summary>
            線分の始点座標を取得もしくは設定する。
            </summary>
        </member>
        <member name="P:asd.LineShape.EndingPosition">
            <summary>
            線分の終点座標を取得もしくは設定する。
            </summary>
        </member>
        <member name="P:asd.LineShape.Thickness">
            <summary>
            線分の太さを取得もしくは設定する。
            </summary>
        </member>
        <member name="T:asd.PolygonShape">
            <summary>
            図形としての多角形を扱うクラス。
            </summary>
        </member>
        <member name="M:asd.PolygonShape.AddVertex(asd.Vector2DF)">
            <summary>
            多角形を構成する頂点を追加する。
            </summary>
            <param name="vertex">新規に追加する頂点の座標</param>
        </member>
        <member name="M:asd.PolygonShape.ClearVertexes">
            <summary>
            多角形を構成する頂点を全て削除する。
            </summary>
        </member>
        <member name="M:asd.PolygonShape.GetVertexesNum">
            <summary>
            多角形を構成する頂点の数量を取得する。
            </summary>
            <returns>多角形を構成する頂点の数量</returns>
        </member>
        <member name="M:asd.PolygonShape.AddHole(asd.Shape)">
            <summary>
            多角形に空ける穴となるオブジェクトを追加する。
            </summary>
            <param name="holeShape">穴となるオブジェクトのインスタンス</param>
            <returns>正しく追加されたかどうか</returns>
        </member>
        <member name="M:asd.PolygonShape.RemoveHole(asd.Shape)">
            <summary>
            多角形に空ける穴となるオブジェクトを削除する。
            </summary>
            <param name="holeShape">穴となるオブジェクトのインスタンス</param>
            <returns>正しく削除されたかどうか</returns>
        </member>
        <member name="P:asd.PolygonShape.HoleShapes">
            <summary>
            追加された穴となるオブジェクトの一覧
            </summary>
        </member>
        <member name="T:asd.RectangleShape">
            <summary>
            図形としての矩形を扱うクラス。
            </summary>
        </member>
        <member name="P:asd.RectangleShape.DrawingArea">
            <summary>
            矩形の描画範囲を取得もしくは設定する。
            </summary>
        </member>
        <member name="P:asd.RectangleShape.UV">
            <summary>
            矩形の頂点別UVを取得もしくは設定する。
            </summary>
        </member>
        <member name="P:asd.RectangleShape.Angle">
            <summary>
            矩形の回転角度を取得もしくは設定する。
            </summary>
        </member>
        <member name="P:asd.RectangleShape.CenterPosition">
            <summary>
            矩形の回転の際の中心座標を取得もしくは設定する。
            </summary>
        </member>
        <member name="T:asd.Shape">
            <summary>
            当たり判定や図形描画に用いられる図形を扱う抽象クラス。
            </summary>
        </member>
        <member name="P:asd.Shape.ShapeType">
            <summary>
            図形のタイプを取得する。
            </summary>
        </member>
        <member name="M:asd.Shape.GetIsCollidedWith(asd.Shape)">
            <summary>
            指定した図形と衝突しているか否かを調べる。
            </summary>
            <param name="shape">衝突を調べる図形</param>
            <returns>衝突したか否か</returns>
        </member>
        <member name="T:asd.TriangleShape">
            <summary>
            図形としての三角形を扱うクラス。
            </summary>
        </member>
        <member name="M:asd.TriangleShape.GetPointByIndex(System.Int32)">
            <summary>
            指定したインデックスの頂点の座標を取得する。
            </summary>
            <param name="index">座標を取得する頂点のインデックス（0 &lt;= index &lt; 3）</param>
            <returns>頂点の座標</returns>
        </member>
        <member name="M:asd.TriangleShape.SetPointByIndex(asd.Vector2DF,System.Int32)">
            <summary>
            指定したインデックスの頂点の座標を設定する。
            </summary>
            <param name="point">インデックスで指定した頂点に設定する座標</param>
            <param name="index">座標を設定する頂点のインデックス（0 &lt;= index &lt; 3）</param>
        </member>
        <member name="M:asd.TriangleShape.GetUVByIndex(System.Int32)">
            <summary>
            指定したインデックスの頂点のUVを取得する。
            </summary>
            <param name="index">UVを取得する頂点のインデックス（0 &lt;= index &lt; 3）</param>
            <returns>頂点のUV</returns>
        </member>
        <member name="M:asd.TriangleShape.SetUVByIndex(asd.Vector2DF,System.Int32)">
            <summary>
            指定したインデックスの頂点のUVを設定する。
            </summary>
            <param name="uv">インデックスで指定した頂点に設定するUV</param>
            <param name="index">UVを設定する頂点のインデックス（0 &lt;= index &lt; 3）</param>
        </member>
        <member name="T:asd.Sound">
            <summary>
            音を管理するクラス
            </summary>
            <summary>
            音を管理するクラス 
            </summary>
        </member>
        <member name="M:asd.Sound.CreateSoundSource(System.String,System.Boolean)">
            <summary>
            音を読み込む。
            </summary>
            <param name="path">パス</param>
            <param name="isDecompressed">解凍するか?</param>
            <returns>音源</returns>
        </member>
        <member name="M:asd.Sound.Play(asd.SoundSource)">
            <summary>
            音を再生する。 
            </summary>
            <param name="soundSource">音源 </param>
            <returns>ID </returns>
        </member>
        <member name="M:asd.Sound.GetIsPlaying(System.Int32)">
            <summary>
            音が再生中か、取得する。 
            </summary>
            <param name="id">ID </param>
            <returns>再生中か? </returns>
        </member>
        <member name="M:asd.Sound.StopAll">
            <summary>
            全ての再生中の音を停止する。 
            </summary>
        </member>
        <member name="M:asd.Sound.Stop(System.Int32)">
            <summary>
            指定した音を停止する。 
            </summary>
            <param name="id">ID </param>
        </member>
        <member name="M:asd.Sound.Pause(System.Int32)">
            <summary>
            指定した音を一時停止する。 
            </summary>
            <param name="id">ID </param>
        </member>
        <member name="M:asd.Sound.Resume(System.Int32)">
            <summary>
            指定した一時停止中の音の一時停止を解除する。 
            </summary>
            <param name="id">ID </param>
        </member>
        <member name="M:asd.Sound.SetVolume(System.Int32,System.Single)">
            <summary>
            指定した音の音量を設定する。 
            </summary>
            <param name="id">ID </param>
            <param name="volume">音量(0.0～1.0) </param>
        </member>
        <member name="M:asd.Sound.FadeIn(System.Int32,System.Single)">
            <summary>
            指定した音をフェードインさせる。 
            </summary>
            <param name="id">ID </param>
            <param name="second">フェードインに使用する時間(秒) </param>
        </member>
        <member name="M:asd.Sound.FadeOut(System.Int32,System.Single)">
            <summary>
            指定した音をフェードアウトさせる。 
            </summary>
            <param name="id">ID </param>
            <param name="second">フェードアウトに使用する時間(秒) </param>
        </member>
        <member name="M:asd.Sound.Fade(System.Int32,System.Single,System.Single)">
            <summary>
            任意の音量に音量を一定時間かけて変更する。 
            </summary>
            <param name="id">音のID </param>
            <param name="second">変更にかかる時間(秒) </param>
            <param name="targetedVolume">変更先の音量(0.0～1.0) </param>
            <remarks>
            この指定される音量はSetVolumeに指定される音量とは異なり、FadeIn、FadeOutに使用される音量と共通である。 つまり、このメソッドはFadeIn、FadeOutの任意音量指定版と言える。 
            </remarks>
        </member>
        <member name="M:asd.Sound.GetIsPlaybackSpeedEnabled(System.Int32)">
            <summary>
            再生速度変更するかを取得する。 
            </summary>
            <param name="id">音のID </param>
            <returns>再生速度変更するか? </returns>
        </member>
        <member name="M:asd.Sound.SetIsPlaybackSpeedEnabled(System.Int32,System.Boolean)">
            <summary>
            再生速度変更するかを設定する。 
            </summary>
            <param name="id">音のID </param>
            <param name="isPlaybackSpeedEnabled">再生速度変更するか? </param>
        </member>
        <member name="M:asd.Sound.GetPlaybackSpeed(System.Int32)">
            <summary>
            再生速度を取得する。 
            </summary>
            <param name="id">音のID </param>
            <returns>再生速度(比率) </returns>
            <remarks>
            設定値は再生速度に比例する。1.0で等速。範囲は0.25から4.0。 音程は再生速度に比例して変化する。 
            </remarks>
        </member>
        <member name="M:asd.Sound.SetPlaybackSpeed(System.Int32,System.Single)">
            <summary>
            再生速度を設定する。 
            </summary>
            <param name="id">音のID </param>
            <param name="playbackSpeed">再生速度(比率) </param>
            <remarks>
            設定値は再生速度に比例する。1.0で等速。範囲は0.25から4.0。 音程は再生速度に比例して変化する。 
            </remarks>
        </member>
        <member name="M:asd.Sound.GetPanningPosition(System.Int32)">
            <summary>
            パン位置を取得する。 
            </summary>
            <param name="id">音のID </param>
            <returns>パン位置, 0.0で中央, -1.0で左, 1.0で右。 </returns>
        </member>
        <member name="M:asd.Sound.SetPanningPosition(System.Int32,System.Single)">
            <summary>
            パン位置を設定する。 
            </summary>
            <param name="id">音のID </param>
            <param name="panningPosition">パン位置, 0.0で中央, -1.0で左, 1.0で右。 </param>
        </member>
        <member name="T:asd.SoundSource">
            <summary>
            音源のクラス
            </summary>
            <summary>
            音源のクラス 
            </summary>
        </member>
        <member name="M:asd.SoundSource.ForceToRelease">
            <summary>
            強制的に使用しているメモリを開放する。
            </summary>
            <remarks>
            何らかの理由でメモリが不足した場合に実行する。
            開放した後の動作の保証はしていないので、必ず参照が残っていないことを確認する必要がある。
            </remarks>
        </member>
        <member name="P:asd.SoundSource.LoopStartingPoint">
            <summary>
            ループポイントの開始地点(秒)を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.SoundSource.LoopEndPoint">
            <summary>
            ループポイントの終了地点(秒)を取得または設定する。
            </summary>
        </member>
        <member name="P:asd.SoundSource.IsLoopingMode">
            <summary>
            ループするかを取得または設定する。
            </summary>
        </member>
        <member name="P:asd.SoundSource.Length">
            <summary>
            音の長さを取得する。
            </summary>
        </member>
        <member name="T:asd.swig.VectorUint8.VectorUint8Enumerator">
            Note that the IEnumerator documentation requires an InvalidOperationException to be thrown
            whenever the collection is modified. This has been done for changes in the size of the
            collection but not when one of the elements of the collection is modified as it is a bit
            tricky to detect unmanaged code that modifies the collection under our feet.
        </member>
        <member name="T:asd.Tool">
            <summary>
            ツールを開発するための低レイヤーな命令群のクラス 
            </summary>
        </member>
        <member name="M:asd.Tool.#ctor(asd.swig.Tool)">
            <summary>
            Tool のインスタンスを生成します。
            </summary>
            <param name="coreInstance">Core側のインスタンス。</param>
        </member>
        <member name="P:asd.Tool.ColumnIndex">
            <summary>
            現在の行のインデックスを取得する。
            </summary>
        </member>
        <member name="M:asd.Tool.BeginFullscreen(System.String,System.Int32)">
            <summary>
            フルスクリーンでウインドウの表示を開始する。 
            </summary>
            <param name="name">ウインドウ名 </param>
            <param name="offset">ウインドウ上部の位置のオフセット </param>
            <returns></returns>
        </member>
        <member name="M:asd.Tool.Begin(System.String)">
            <summary>
            ウインドウの表示を開始する。 
            </summary>
            <param name="name">ウインドウ名 </param>
            <returns></returns>
        </member>
        <member name="M:asd.Tool.End">
            <summary>
            ウインドウの表示を終了する。 
            </summary>
        </member>
        <member name="M:asd.Tool.Separator">
            <summary>
            分割線を表示する。 
            </summary>
        </member>
        <member name="M:asd.Tool.SameLine">
            <summary>
            次に表示する要素を改行せずに表示する。 
            </summary>
        </member>
        <member name="M:asd.Tool.Text(System.String)">
            <summary>
            テキストを表示する。 
            </summary>
            <param name="text">テキスト名 </param>
        </member>
        <member name="M:asd.Tool.Button(System.String)">
            <summary>
            ボタンを表示する。 
            </summary>
            <param name="label">ラベル名 </param>
            <returns></returns>
        </member>
        <member name="M:asd.Tool.Image(asd.Texture2D,asd.Vector2DF)">
            <summary>
            画像を表示する。 
            </summary>
            <param name="user_texture">画像 </param>
            <param name="size">大きさ </param>
        </member>
        <member name="M:asd.Tool.BeginCombo(System.String,System.String)">
            <summary>
            コンボボックスを表示する。 
            </summary>
            <param name="label">ラベル名 </param>
            <param name="preview_value">コンボボックスの先頭に表示される文字列 </param>
            <returns></returns>
        </member>
        <member name="M:asd.Tool.EndCombo">
            <summary>
            コンボボックスを表示を終了する。 
            </summary>
            <remarks>
            BeginComboがtrueを返した場合のみ、実行する。 
            </remarks>
        </member>
        <member name="M:asd.Tool.InputText(System.String,System.SByte[],System.Int32)">
            <summary>
            文字を入力する。 
            </summary>
            <param name="label">ラベル名 </param>
            <param name="buf">文字が格納されるバッファ </param>
            <param name="buf_size">バッファサイズ </param>
            <returns></returns>
            <remarks>
            bufはutf-8である。 
            </remarks>
        </member>
        <member name="M:asd.Tool.InputInt(System.String,System.Int32[])">
            <summary>
            整数を入力する。 
            </summary>
            <param name="label">ラベル名 </param>
            <param name="v">値 </param>
            <returns></returns>
        </member>
        <member name="M:asd.Tool.ColorEdit4(System.String,System.Single[])">
            <summary>
            色を変更する。 
            </summary>
            <param name="label">ラベル名 </param>
            <param name="vs">色(RGB+A) </param>
            <returns></returns>
        </member>
        <member name="M:asd.Tool.Selectable(System.String,System.Boolean)">
            <summary>
            選択可能な文字列を表示する。 
            </summary>
            <param name="label">ラベル名 </param>
            <param name="selected">選択されているか? </param>
            <returns></returns>
        </member>
        <member name="M:asd.Tool.ListBox(System.String,System.Int32[],System.String)">
            <summary>
            リストボックスを表示する。 
            </summary>
            <param name="label">ラベル名 </param>
            <param name="current_item">選択されているアイテム </param>
            <param name="items">アイテム(;区切り) </param>
            <returns></returns>
            <remarks>
            仕様が大きく変更される可能性がある。 
            </remarks>
        </member>
        <member name="M:asd.Tool.BeginMainMenuBar">
            <summary>
            画面上のメニューバーの表示を開始する。 
            </summary>
            <returns></returns>
        </member>
        <member name="M:asd.Tool.EndMainMenuBar">
            <summary>
            画面上のメニューバーの表示を終了する。 
            </summary>
            <remarks>
            BeginMainMenuBarがtrueを返した場合のみ、実行する。 
            </remarks>
        </member>
        <member name="M:asd.Tool.BeginMenuBar">
            <summary>
            メニューバー(ウインドウ等)の表示を開始する。 
            </summary>
            <returns></returns>
        </member>
        <member name="M:asd.Tool.EndMenuBar">
            <summary>
            メニューバーの表示を終了する。 
            </summary>
            <remarks>
            BeginMenuBarがtrueを返した場合のみ、実行する。 
            </remarks>
        </member>
        <member name="M:asd.Tool.BeginMenu(System.String)">
            <summary>
            メニューの表示を開始する。 
            </summary>
            <param name="label">ラベル名 </param>
            <returns></returns>
        </member>
        <member name="M:asd.Tool.EndMenu">
            <summary>
            メニューの表示を終了する。 
            </summary>
            <remarks>
            BeginMenuがtrueを返した場合のみ、実行する。 
            </remarks>
        </member>
        <member name="M:asd.Tool.MenuItem(System.String,System.String,System.Boolean[])">
            <summary>
            メニューアイテムを表示する。 
            </summary>
            <param name="label">ラベル名 </param>
            <param name="shortcut">ショートカット </param>
            <param name="p_selected">選択されているか? </param>
            <returns></returns>
        </member>
        <member name="M:asd.Tool.Columns(System.Int32)">
            <summary>
            行数を設定する。 
            </summary>
            <param name="count">行数 </param>
        </member>
        <member name="M:asd.Tool.NextColumn">
            <summary>
            次の行に移動する。 
            </summary>
        </member>
        <member name="M:asd.Tool.GetColumnWidth(System.Int32)">
            <summary>
            行の幅を取得する。 
            </summary>
            <param name="column_index">インデックス </param>
            <returns></returns>
        </member>
        <member name="M:asd.Tool.SetColumnWidth(System.Int32,System.Single)">
            <summary>
            行の幅を設定する。 
            </summary>
            <param name="column_index">インデックス </param>
            <param name="width">幅 </param>
        </member>
        <member name="M:asd.Tool.SetItemDefaultFocus">
            <summary>
            現在選択されているアイテムにフォーカスを設定する。 
            </summary>
        </member>
        <member name="M:asd.Tool.OpenDialog(System.String,System.String)">
            <summary>
            ファイルを開くダイアログを開く。 
            </summary>
            <param name="filterList">フィルタ </param>
            <param name="defaultPath">最初に表示するディレクトリのパス </param>
            <returns>開くパス </returns>
        </member>
        <member name="M:asd.Tool.SaveDialog(System.String,System.String)">
            <summary>
            ファイルを保存するダイアログを開く。 
            </summary>
            <param name="filterList">フィルタ </param>
            <param name="defaultPath">最初に表示するディレクトリのパス </param>
            <returns>保存するパス </returns>
        </member>
        <member name="M:asd.Tool.PickFolder(System.String)">
            <summary>
            フォルダを選択するダイアログを開く。 
            </summary>
            <param name="defaultPath">最初に表示するディレクトリのパス </param>
            <returns>フォルダのパス </returns>
        </member>
        <member name="M:asd.Tool.AddFontFromFileTTF(System.String,System.Single)">
            <summary>
            フォントを追加する。 
            </summary>
            <param name="filename">フォントへのパス </param>
            <param name="size_pixels">フォントサイズ </param>
            <remarks>
            現在、パッケージからは読み込めない。実行ファイルからの相対パスを指定する。 
            </remarks>
        </member>
        <member name="M:asd.Tool.ShowDialog(System.String,System.String,asd.ToolDialogStyle,asd.ToolDialogButtons)">
            <summary>
            ダイアログを表示する。 
            </summary>
            <param name="message">メッセージ </param>
            <param name="title">タイトル </param>
            <param name="style">ダイアログの種類 </param>
            <param name="buttons">ボタンの種類 </param>
            <returns></returns>
        </member>
        <member name="T:asd.IG">
            <summary>
            インスタンスのネイティブの直接のラッパーを取得するためのメソッド集
            </summary>
        </member>
        <member name="T:asd.StringHelper">
            <summary>
            文字列に関する補助を行うクラス
            </summary>
        </member>
        <member name="M:asd.StringHelper.ConvertUTF8(System.Byte[])">
            <summary>
            UTF8のデータを文字列に変換する。
            </summary>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="M:asd.StringHelper.ConvertUTF8(System.Collections.Generic.List{System.Byte})">
            <summary>
            UTF8のデータを文字列に変換する。
            </summary>
            <param name="buffer"></param>
            <returns></returns>
        </member>
        <member name="T:asd.Cursor">
            <summary>
            カーソルを表すクラス
            </summary>
            <summary>
            カーソルを表すクラス 
            </summary>
        </member>
        <member name="M:asd.Cursor.ForceToRelease">
            <summary>
            強制的に使用しているメモリを開放する。
            </summary>
            <remarks>
            何らかの理由でメモリが不足した場合に実行する。
            開放した後の動作の保証はしていないので、必ず参照が残っていないことを確認する必要がある。
            </remarks>
        </member>
        <member name="T:asd.AutoGeneratedLayerType">
            <summary>
            起動時に自動的に生成されるレイヤーの種類 
            </summary>
        </member>
        <member name="F:asd.AutoGeneratedLayerType.Layer2D">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.AutoGeneratedLayerType.Layer3D">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.AutoGeneratedLayerType.Nothing">
            <summary>
            
            </summary>
        </member>
        <member name="T:asd.LayerType">
            <summary>
            レイヤーの種類 
            </summary>
        </member>
        <member name="F:asd.LayerType.Layer2D">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.LayerType.Layer3D">
            <summary>
            
            </summary>
        </member>
        <member name="T:asd.WritingDirection">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.WritingDirection.Vertical">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.WritingDirection.Horizontal">
            <summary>
            
            </summary>
        </member>
        <member name="T:asd.FramerateMode">
            <summary>
            フレームレートの制御方法 
            </summary>
        </member>
        <member name="F:asd.FramerateMode.Constant">
            <summary>
            固定フレームレート 
            </summary>
        </member>
        <member name="F:asd.FramerateMode.Variable">
            <summary>
            可変フレームレート 
            </summary>
        </member>
        <member name="T:asd.TextureFormat">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.TextureFormat.R8G8B8A8_UNORM">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.TextureFormat.R16G16B16A16_FLOAT">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.TextureFormat.R32G32B32A32_FLOAT">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.TextureFormat.R8G8B8A8_UNORM_SRGB">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.TextureFormat.R16G16_FLOAT">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.TextureFormat.R8_UNORM">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.TextureFormat.BC1">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.TextureFormat.BC2">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.TextureFormat.BC3">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.TextureFormat.BC1_SRGB">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.TextureFormat.BC2_SRGB">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.TextureFormat.BC3_SRGB">
            <summary>
            
            </summary>
        </member>
        <member name="T:asd.TextureClassType">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.TextureClassType.Texture2D">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.TextureClassType.RenderTexture2D">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.TextureClassType.CubemapTexture">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.TextureClassType.DepthBuffer">
            <summary>
            
            </summary>
        </member>
        <member name="T:asd.AlphaBlendMode">
            <summary>
            描画時のブレンドモードを表す列挙体 
            </summary>
        </member>
        <member name="F:asd.AlphaBlendMode.Opacity">
            <summary>
            不透明 
            </summary>
        </member>
        <member name="F:asd.AlphaBlendMode.Blend">
            <summary>
            透明 
            </summary>
        </member>
        <member name="F:asd.AlphaBlendMode.Add">
            <summary>
            加算 
            </summary>
        </member>
        <member name="F:asd.AlphaBlendMode.Sub">
            <summary>
            減算 
            </summary>
        </member>
        <member name="F:asd.AlphaBlendMode.Mul">
            <summary>
            乗算 
            </summary>
        </member>
        <member name="F:asd.AlphaBlendMode.AddAll">
            <summary>
            全加算(内部処理用) 
            </summary>
        </member>
        <member name="F:asd.AlphaBlendMode.OpacityAll">
            <summary>
            全不透明(内部処理用) 
            </summary>
        </member>
        <member name="T:asd.TextureFilterType">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.TextureFilterType.Nearest">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.TextureFilterType.Linear">
            <summary>
            
            </summary>
        </member>
        <member name="T:asd.TextureWrapType">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.TextureWrapType.Repeat">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.TextureWrapType.Clamp">
            <summary>
            
            </summary>
        </member>
        <member name="T:asd.CullingType">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.CullingType.Front">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.CullingType.Back">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.CullingType.Double">
            <summary>
            
            </summary>
        </member>
        <member name="T:asd.GraphicsDeviceType">
            <summary>
            描画方法 
            </summary>
        </member>
        <member name="F:asd.GraphicsDeviceType.Default">
            <summary>
            実行環境で最も安定している描画方法(初期化時に使用) 
            </summary>
        </member>
        <member name="F:asd.GraphicsDeviceType.DirectX11">
            <summary>
            DirectX11. 
            </summary>
        </member>
        <member name="F:asd.GraphicsDeviceType.OpenGL">
            <summary>
            OpenGL. 
            </summary>
        </member>
        <member name="T:asd.WindowPositionType">
            <summary>
            ウインドウ表示位置 
            </summary>
        </member>
        <member name="F:asd.WindowPositionType.Default">
            <summary>
            OSによる自動選択 
            </summary>
        </member>
        <member name="F:asd.WindowPositionType.Centering">
            <summary>
            プライマリモニタの中央 
            </summary>
        </member>
        <member name="T:asd.ColorSpaceType">
            <summary>
            カラースペース 
            </summary>
        </member>
        <member name="F:asd.ColorSpaceType.GammaSpace">
            <summary>
            ガンマスペース 
            </summary>
        </member>
        <member name="F:asd.ColorSpaceType.LinearSpace">
            <summary>
            リニアスペース 
            </summary>
        </member>
        <member name="T:asd.ImagePackageElementType">
            <summary>
            イメージパッケージ内の要素の種類 
            </summary>
        </member>
        <member name="F:asd.ImagePackageElementType.Image">
            <summary>
            画像 
            </summary>
        </member>
        <member name="F:asd.ImagePackageElementType.Button">
            <summary>
            ボタン 
            </summary>
        </member>
        <member name="T:asd.ImagePackageAdditionalElementType">
            <summary>
            イメージパッケージ内の要素の種類(追加情報) 
            </summary>
        </member>
        <member name="F:asd.ImagePackageAdditionalElementType.None">
            <summary>
            なし 
            </summary>
        </member>
        <member name="F:asd.ImagePackageAdditionalElementType.Normal">
            <summary>
            ボタンの時、通常状態で表示される 
            </summary>
        </member>
        <member name="F:asd.ImagePackageAdditionalElementType.Pressed">
            <summary>
            ボタンの時、押されている状態で表示される 
            </summary>
        </member>
        <member name="F:asd.ImagePackageAdditionalElementType.Hovered">
            <summary>
            ボタンの時、マウスが重なっている状態で表示される 
            </summary>
        </member>
        <member name="T:asd.ButtonState">
            <summary>
            ボタンの押し状態を示す列挙型 
            </summary>
        </member>
        <member name="F:asd.ButtonState.Push">
            <summary>
            ボタンをこのフレームで押した状態 
            </summary>
        </member>
        <member name="F:asd.ButtonState.Release">
            <summary>
            ボタンをこのフレームで離した状態 
            </summary>
        </member>
        <member name="F:asd.ButtonState.Hold">
            <summary>
            ボタンを押し続けている状態 
            </summary>
        </member>
        <member name="F:asd.ButtonState.Free">
            <summary>
            ボタンを離し続けている状態 
            </summary>
        </member>
        <member name="T:asd.Object2DType">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.Object2DType.Unknown">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.Object2DType.Texture">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.Object2DType.Camera">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.Object2DType.Effect">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.Object2DType.Text">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.Object2DType.Map">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.Object2DType.Geometry">
            <summary>
            
            </summary>
        </member>
        <member name="T:asd.RenderedObject3DType">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.RenderedObject3DType.Unknown">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.RenderedObject3DType.Mesh">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.RenderedObject3DType.Camera">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.RenderedObject3DType.Effect">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.RenderedObject3DType.DirectionalLight">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.RenderedObject3DType.MassObject">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.RenderedObject3DType.Terrain">
            <summary>
            
            </summary>
        </member>
        <member name="T:asd.ShaderVariableType">
            <summary>
            シェーダーに対して外部から設定可能なプロパティの変数の種類 
            </summary>
        </member>
        <member name="F:asd.ShaderVariableType.Unknown">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.ShaderVariableType.Float">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.ShaderVariableType.Vector2DF">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.ShaderVariableType.Vector3DF">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.ShaderVariableType.Vector4DF">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.ShaderVariableType.Vector4DF_Array">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.ShaderVariableType.Matrix44">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.ShaderVariableType.Matrix44_Array">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.ShaderVariableType.Texture2D">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.ShaderVariableType.CubemapTexture">
            <summary>
            
            </summary>
        </member>
        <member name="T:asd.VisualizedBufferType">
            <summary>
            3D描画時に表示されるバッファ 
            </summary>
        </member>
        <member name="F:asd.VisualizedBufferType.FinalImage">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.VisualizedBufferType.DiffuseColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.VisualizedBufferType.SpecularColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.VisualizedBufferType.Normal">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.VisualizedBufferType.Smoothness">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.VisualizedBufferType.Environment">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.VisualizedBufferType.Occlusion">
            <summary>
            
            </summary>
        </member>
        <member name="T:asd.LoadState">
            <summary>
            非同期読み込みの進捗 
            </summary>
        </member>
        <member name="F:asd.LoadState.Loading">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.LoadState.WaitSync">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.LoadState.Loaded">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.LoadState.Failed">
            <summary>
            
            </summary>
        </member>
        <member name="T:asd.ToolDialogStyle">
            <summary>
            ツールで表示するダイアログの種類 
            </summary>
        </member>
        <member name="F:asd.ToolDialogStyle.Info">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.ToolDialogStyle.Warning">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.ToolDialogStyle.Error">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.ToolDialogStyle.Question">
            <summary>
            
            </summary>
        </member>
        <member name="T:asd.ToolDialogButtons">
            <summary>
            ツールで表示するダイアログのボタンの種類 
            </summary>
        </member>
        <member name="F:asd.ToolDialogButtons.OK">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.ToolDialogButtons.OKCancel">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.ToolDialogButtons.YesNo">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.ToolDialogButtons.Quit">
            <summary>
            
            </summary>
        </member>
        <member name="T:asd.ToolDialogSelection">
            <summary>
            ツールで表示するダイアログの結果 
            </summary>
        </member>
        <member name="F:asd.ToolDialogSelection.OK">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.ToolDialogSelection.Cancel">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.ToolDialogSelection.Yes">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.ToolDialogSelection.No">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.ToolDialogSelection.Quit">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.ToolDialogSelection.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.ToolDialogSelection.Error">
            <summary>
            
            </summary>
        </member>
        <member name="T:asd.Collider2DShapeType">
            <summary>
            2Dコライダの形状タイプ 
            </summary>
        </member>
        <member name="F:asd.Collider2DShapeType.Circle">
            <summary>
            円形 
            </summary>
        </member>
        <member name="F:asd.Collider2DShapeType.Rectangle">
            <summary>
            矩形 
            </summary>
        </member>
        <member name="F:asd.Collider2DShapeType.Line">
            <summary>
            線形 
            </summary>
        </member>
        <member name="F:asd.Collider2DShapeType.Polygon">
            <summary>
            ポリゴン 
            </summary>
        </member>
        <member name="T:asd.CollisionType">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.CollisionType.Enter">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.CollisionType.Stay">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.CollisionType.Exit">
            <summary>
            
            </summary>
        </member>
        <member name="T:asd.JoystickType">
            <summary>
            ジョイステイックの種類 
            </summary>
        </member>
        <member name="F:asd.JoystickType.Other">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.JoystickType.PS4">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.JoystickType.XBOX360">
            <summary>
            
            </summary>
        </member>
        <member name="T:asd.JoystickButtonType">
            <summary>
            ジョイステイックのボタンの種類 
            </summary>
        </member>
        <member name="F:asd.JoystickButtonType.Start">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.JoystickButtonType.Select">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.JoystickButtonType.LeftUp">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.JoystickButtonType.LeftDown">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.JoystickButtonType.LeftLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.JoystickButtonType.LeftRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.JoystickButtonType.RightUp">
            <summary>
            PSx Triangle. 
            </summary>
        </member>
        <member name="F:asd.JoystickButtonType.RightRight">
            <summary>
            PSx Circle. 
            </summary>
        </member>
        <member name="F:asd.JoystickButtonType.RightLeft">
            <summary>
            PSx Square. 
            </summary>
        </member>
        <member name="F:asd.JoystickButtonType.RightDown">
            <summary>
            PSx Cross. 
            </summary>
        </member>
        <member name="F:asd.JoystickButtonType.L1">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.JoystickButtonType.R1">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.JoystickButtonType.L2">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.JoystickButtonType.R2">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.JoystickButtonType.L3">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.JoystickButtonType.R3">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.JoystickButtonType.LeftStart">
            <summary>
            XBOX360 Start, PS4 Options. 
            </summary>
        </member>
        <member name="F:asd.JoystickButtonType.RightStart">
            <summary>
            XBOX360 Select, PS4 TouchPad. 
            </summary>
        </member>
        <member name="F:asd.JoystickButtonType.Max">
            <summary>
            
            </summary>
        </member>
        <member name="T:asd.JoystickAxisType">
            <summary>
            ジョイステイックの軸の種類 
            </summary>
        </member>
        <member name="F:asd.JoystickAxisType.LeftH">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.JoystickAxisType.LeftV">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.JoystickAxisType.RightH">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.JoystickAxisType.RightV">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.JoystickAxisType.L2">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.JoystickAxisType.R2">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.JoystickAxisType.Max">
            <summary>
            
            </summary>
        </member>
        <member name="T:asd.Keys">
            <summary>
            Altseedで扱うキーボードのキー一覧 
            </summary>
        </member>
        <member name="F:asd.Keys.Unknown">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.Keys.Space">
            <summary>
            スペース 
            </summary>
        </member>
        <member name="F:asd.Keys.Apostrophe">
            <summary>
            ： (US配列では ` ) 
            </summary>
        </member>
        <member name="F:asd.Keys.Comma">
            <summary>
            ， 
            </summary>
        </member>
        <member name="F:asd.Keys.Minus">
            <summary>
            － 
            </summary>
        </member>
        <member name="F:asd.Keys.Period">
            <summary>
            ． 
            </summary>
        </member>
        <member name="F:asd.Keys.Slash">
            <summary>
            ／ 
            </summary>
        </member>
        <member name="F:asd.Keys.Num0">
            <summary>
            0 
            </summary>
        </member>
        <member name="F:asd.Keys.Num1">
            <summary>
            1 
            </summary>
        </member>
        <member name="F:asd.Keys.Num2">
            <summary>
            2 
            </summary>
        </member>
        <member name="F:asd.Keys.Num3">
            <summary>
            3 
            </summary>
        </member>
        <member name="F:asd.Keys.Num4">
            <summary>
            4 
            </summary>
        </member>
        <member name="F:asd.Keys.Num5">
            <summary>
            5 
            </summary>
        </member>
        <member name="F:asd.Keys.Num6">
            <summary>
            6 
            </summary>
        </member>
        <member name="F:asd.Keys.Num7">
            <summary>
            7 
            </summary>
        </member>
        <member name="F:asd.Keys.Num8">
            <summary>
            8 
            </summary>
        </member>
        <member name="F:asd.Keys.Num9">
            <summary>
            9 
            </summary>
        </member>
        <member name="F:asd.Keys.Semicolon">
            <summary>
            ； 
            </summary>
        </member>
        <member name="F:asd.Keys.Equal">
            <summary>
            ＾ (US配列では ＝ ) 
            </summary>
        </member>
        <member name="F:asd.Keys.A">
            <summary>
            A. 
            </summary>
        </member>
        <member name="F:asd.Keys.B">
            <summary>
            B. 
            </summary>
        </member>
        <member name="F:asd.Keys.C">
            <summary>
            C. 
            </summary>
        </member>
        <member name="F:asd.Keys.D">
            <summary>
            D. 
            </summary>
        </member>
        <member name="F:asd.Keys.E">
            <summary>
            E. 
            </summary>
        </member>
        <member name="F:asd.Keys.F">
            <summary>
            F. 
            </summary>
        </member>
        <member name="F:asd.Keys.G">
            <summary>
            G. 
            </summary>
        </member>
        <member name="F:asd.Keys.H">
            <summary>
            H. 
            </summary>
        </member>
        <member name="F:asd.Keys.I">
            <summary>
            I. 
            </summary>
        </member>
        <member name="F:asd.Keys.J">
            <summary>
            J. 
            </summary>
        </member>
        <member name="F:asd.Keys.K">
            <summary>
            K. 
            </summary>
        </member>
        <member name="F:asd.Keys.L">
            <summary>
            L. 
            </summary>
        </member>
        <member name="F:asd.Keys.M">
            <summary>
            M. 
            </summary>
        </member>
        <member name="F:asd.Keys.N">
            <summary>
            N. 
            </summary>
        </member>
        <member name="F:asd.Keys.O">
            <summary>
            O. 
            </summary>
        </member>
        <member name="F:asd.Keys.P">
            <summary>
            P. 
            </summary>
        </member>
        <member name="F:asd.Keys.Q">
            <summary>
            Q. 
            </summary>
        </member>
        <member name="F:asd.Keys.R">
            <summary>
            R. 
            </summary>
        </member>
        <member name="F:asd.Keys.S">
            <summary>
            S. 
            </summary>
        </member>
        <member name="F:asd.Keys.T">
            <summary>
            T. 
            </summary>
        </member>
        <member name="F:asd.Keys.U">
            <summary>
            U. 
            </summary>
        </member>
        <member name="F:asd.Keys.V">
            <summary>
            V. 
            </summary>
        </member>
        <member name="F:asd.Keys.W">
            <summary>
            W. 
            </summary>
        </member>
        <member name="F:asd.Keys.X">
            <summary>
            X. 
            </summary>
        </member>
        <member name="F:asd.Keys.Y">
            <summary>
            Y. 
            </summary>
        </member>
        <member name="F:asd.Keys.Z">
            <summary>
            Z. 
            </summary>
        </member>
        <member name="F:asd.Keys.LeftBracket">
            <summary>
            @ (US配列では ［ ) 
            </summary>
        </member>
        <member name="F:asd.Keys.Backslash">
            <summary>
            ] (US配列では ＼ ) 
            </summary>
        </member>
        <member name="F:asd.Keys.RightBracket">
            <summary>
            [ (US配列では ］ ) 
            </summary>
        </member>
        <member name="F:asd.Keys.GraveAccent">
            <summary>
            半角/全角 
            </summary>
        </member>
        <member name="F:asd.Keys.World1">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.Keys.World2">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.Keys.Escape">
            <summary>
            Esc. 
            </summary>
        </member>
        <member name="F:asd.Keys.Enter">
            <summary>
            Enter. 
            </summary>
        </member>
        <member name="F:asd.Keys.Tab">
            <summary>
            Tab. 
            </summary>
        </member>
        <member name="F:asd.Keys.Backspace">
            <summary>
            BackSpace. 
            </summary>
        </member>
        <member name="F:asd.Keys.Insert">
            <summary>
            Insert. 
            </summary>
        </member>
        <member name="F:asd.Keys.Delete">
            <summary>
            Delete. 
            </summary>
        </member>
        <member name="F:asd.Keys.Right">
            <summary>
            → 
            </summary>
        </member>
        <member name="F:asd.Keys.Left">
            <summary>
            ← 
            </summary>
        </member>
        <member name="F:asd.Keys.Down">
            <summary>
            ↓ 
            </summary>
        </member>
        <member name="F:asd.Keys.Up">
            <summary>
            ↑ 
            </summary>
        </member>
        <member name="F:asd.Keys.PageUp">
            <summary>
            PageUp. 
            </summary>
        </member>
        <member name="F:asd.Keys.PageDown">
            <summary>
            PageDown. 
            </summary>
        </member>
        <member name="F:asd.Keys.Home">
            <summary>
            Home. 
            </summary>
        </member>
        <member name="F:asd.Keys.End">
            <summary>
            End. 
            </summary>
        </member>
        <member name="F:asd.Keys.CapsLock">
            <summary>
            CapsLock. 
            </summary>
        </member>
        <member name="F:asd.Keys.ScrollLock">
            <summary>
            ScrollLock. 
            </summary>
        </member>
        <member name="F:asd.Keys.NumLock">
            <summary>
            NumLock. 
            </summary>
        </member>
        <member name="F:asd.Keys.PrintScreen">
            <summary>
            PrintScreen. 
            </summary>
        </member>
        <member name="F:asd.Keys.Pause">
            <summary>
            Pause. 
            </summary>
        </member>
        <member name="F:asd.Keys.F1">
            <summary>
            F1. 
            </summary>
        </member>
        <member name="F:asd.Keys.F2">
            <summary>
            F2. 
            </summary>
        </member>
        <member name="F:asd.Keys.F3">
            <summary>
            F3. 
            </summary>
        </member>
        <member name="F:asd.Keys.F4">
            <summary>
            F4. 
            </summary>
        </member>
        <member name="F:asd.Keys.F5">
            <summary>
            F5. 
            </summary>
        </member>
        <member name="F:asd.Keys.F6">
            <summary>
            F6. 
            </summary>
        </member>
        <member name="F:asd.Keys.F7">
            <summary>
            F7. 
            </summary>
        </member>
        <member name="F:asd.Keys.F8">
            <summary>
            F8. 
            </summary>
        </member>
        <member name="F:asd.Keys.F9">
            <summary>
            F9. 
            </summary>
        </member>
        <member name="F:asd.Keys.F10">
            <summary>
            F10. 
            </summary>
        </member>
        <member name="F:asd.Keys.F11">
            <summary>
            F11. 
            </summary>
        </member>
        <member name="F:asd.Keys.F12">
            <summary>
            F12. 
            </summary>
        </member>
        <member name="F:asd.Keys.F13">
            <summary>
            F13. 
            </summary>
        </member>
        <member name="F:asd.Keys.F14">
            <summary>
            F14. 
            </summary>
        </member>
        <member name="F:asd.Keys.F15">
            <summary>
            F15. 
            </summary>
        </member>
        <member name="F:asd.Keys.F16">
            <summary>
            F16. 
            </summary>
        </member>
        <member name="F:asd.Keys.F17">
            <summary>
            F17. 
            </summary>
        </member>
        <member name="F:asd.Keys.F18">
            <summary>
            F18. 
            </summary>
        </member>
        <member name="F:asd.Keys.F19">
            <summary>
            F19. 
            </summary>
        </member>
        <member name="F:asd.Keys.F20">
            <summary>
            F20. 
            </summary>
        </member>
        <member name="F:asd.Keys.F21">
            <summary>
            F21. 
            </summary>
        </member>
        <member name="F:asd.Keys.F22">
            <summary>
            F22. 
            </summary>
        </member>
        <member name="F:asd.Keys.F23">
            <summary>
            F23. 
            </summary>
        </member>
        <member name="F:asd.Keys.F24">
            <summary>
            F24. 
            </summary>
        </member>
        <member name="F:asd.Keys.F25">
            <summary>
            F25. 
            </summary>
        </member>
        <member name="F:asd.Keys.Keypad0">
            <summary>
            テンキーの0 
            </summary>
        </member>
        <member name="F:asd.Keys.Keypad1">
            <summary>
            テンキーの1 
            </summary>
        </member>
        <member name="F:asd.Keys.Keypad2">
            <summary>
            テンキーの2 
            </summary>
        </member>
        <member name="F:asd.Keys.Keypad3">
            <summary>
            テンキーの3 
            </summary>
        </member>
        <member name="F:asd.Keys.Keypad4">
            <summary>
            テンキーの4 
            </summary>
        </member>
        <member name="F:asd.Keys.Keypad5">
            <summary>
            テンキーの5 
            </summary>
        </member>
        <member name="F:asd.Keys.Keypad6">
            <summary>
            テンキーの6 
            </summary>
        </member>
        <member name="F:asd.Keys.Keypad7">
            <summary>
            テンキーの7 
            </summary>
        </member>
        <member name="F:asd.Keys.Keypad8">
            <summary>
            テンキーの8 
            </summary>
        </member>
        <member name="F:asd.Keys.Keypad9">
            <summary>
            テンキーの9 
            </summary>
        </member>
        <member name="F:asd.Keys.KeypadDecimal">
            <summary>
            テンキーの． 
            </summary>
        </member>
        <member name="F:asd.Keys.KeypadDivide">
            <summary>
            テンキーの／ 
            </summary>
        </member>
        <member name="F:asd.Keys.KeypadMultiply">
            <summary>
            テンキーの＊ 
            </summary>
        </member>
        <member name="F:asd.Keys.KeypadSubstract">
            <summary>
            テンキーの－ 
            </summary>
        </member>
        <member name="F:asd.Keys.KeypadAdd">
            <summary>
            テンキーの＋ 
            </summary>
        </member>
        <member name="F:asd.Keys.KeypadEnter">
            <summary>
            テンキーのEnter 
            </summary>
        </member>
        <member name="F:asd.Keys.KeypadEqual">
            <summary>
            テンキーの＝ 
            </summary>
        </member>
        <member name="F:asd.Keys.LeftShift">
            <summary>
            左Shift 
            </summary>
        </member>
        <member name="F:asd.Keys.LeftControl">
            <summary>
            左Ctrl 
            </summary>
        </member>
        <member name="F:asd.Keys.LeftAlt">
            <summary>
            左Alt 
            </summary>
        </member>
        <member name="F:asd.Keys.LeftWin">
            <summary>
            左Win 
            </summary>
        </member>
        <member name="F:asd.Keys.RightShift">
            <summary>
            右Shift 
            </summary>
        </member>
        <member name="F:asd.Keys.RightControl">
            <summary>
            右Ctrl 
            </summary>
        </member>
        <member name="F:asd.Keys.RightAlt">
            <summary>
            右Alt 
            </summary>
        </member>
        <member name="F:asd.Keys.RightWin">
            <summary>
            右Win 
            </summary>
        </member>
        <member name="F:asd.Keys.Menu">
            <summary>
            コンテキストメニュー 
            </summary>
        </member>
        <member name="F:asd.Keys.Last">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.Keys.MAX">
            <summary>
            
            </summary>
        </member>
        <member name="T:asd.MouseButtons">
            <summary>
            マウスのボタン一覧を示す列挙型 
            </summary>
        </member>
        <member name="F:asd.MouseButtons.ButtonLeft">
            <summary>
            左ボタン 
            </summary>
        </member>
        <member name="F:asd.MouseButtons.ButtonRight">
            <summary>
            右ボタン 
            </summary>
        </member>
        <member name="F:asd.MouseButtons.ButtonMiddle">
            <summary>
            中央ボタン 
            </summary>
        </member>
        <member name="F:asd.MouseButtons.SubButton1">
            <summary>
            サブボタン1 
            </summary>
        </member>
        <member name="F:asd.MouseButtons.SubButton2">
            <summary>
            サブボタン2 
            </summary>
        </member>
        <member name="F:asd.MouseButtons.SubButton3">
            <summary>
            サブボタン3 
            </summary>
        </member>
        <member name="F:asd.MouseButtons.SubButton4">
            <summary>
            サブボタン4 
            </summary>
        </member>
        <member name="F:asd.MouseButtons.SubButton5">
            <summary>
            サブボタン5 
            </summary>
        </member>
        <member name="T:asd.LogLevel">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.LogLevel.Error">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.LogLevel.Critical">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.LogLevel.Warning">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.LogLevel.Information">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.LogLevel.All">
            <summary>
            
            </summary>
        </member>
        <member name="T:asd.ChildTransformingMode">
            <summary>
            オブジェクトの親子関係の同期方法を表す列挙体 
            </summary>
        </member>
        <member name="F:asd.ChildTransformingMode.Position">
            <summary>
            位置のみを同期する。 
            </summary>
        </member>
        <member name="F:asd.ChildTransformingMode.All">
            <summary>
            位置・角度・拡大率を同期する。 
            </summary>
        </member>
        <member name="F:asd.ChildTransformingMode.Nothing">
            <summary>
            同期を行わない。 
            </summary>
        </member>
        <member name="T:asd.ShapeType">
            <summary>
            図形の種類 
            </summary>
        </member>
        <member name="F:asd.ShapeType.CircleShape">
            <summary>
            円 
            </summary>
        </member>
        <member name="F:asd.ShapeType.ArcShape">
            <summary>
            弧 
            </summary>
        </member>
        <member name="F:asd.ShapeType.LineShape">
            <summary>
            線分 
            </summary>
        </member>
        <member name="F:asd.ShapeType.RectangleShape">
            <summary>
            矩形 
            </summary>
        </member>
        <member name="F:asd.ShapeType.TriangleShape">
            <summary>
            三角形 
            </summary>
        </member>
        <member name="F:asd.ShapeType.PolygonShape">
            <summary>
            多角形 
            </summary>
        </member>
        <member name="T:asd.RotationOrder">
            <summary>
            回転行列の計算順序 
            </summary>
        </member>
        <member name="F:asd.RotationOrder.QUATERNION">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.RotationOrder.XZY">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.RotationOrder.XYZ">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.RotationOrder.ZXY">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.RotationOrder.ZYX">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.RotationOrder.YXZ">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.RotationOrder.YZX">
            <summary>
            
            </summary>
        </member>
        <member name="F:asd.RotationOrder.AXIS">
            <summary>
            
            </summary>
        </member>
        <member name="T:asd.InterpolationType">
            <summary>
            キー間の補間方法 
            </summary>
        </member>
        <member name="F:asd.InterpolationType.Constant">
            <summary>
            次のキーまで定数で補間 
            </summary>
        </member>
        <member name="F:asd.InterpolationType.Linear">
            <summary>
            次のキーまで線形で補間 
            </summary>
        </member>
        <member name="F:asd.InterpolationType.Cubic">
            <summary>
            次のキーまで三次方程式で補間 
            </summary>
        </member>
    </members>
</doc>
